<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' inline='true' name='federated.04soak21avvcph189wb0703o9f4d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dailyCoronaVirusCasesbyCounty' name='excel-direct.10azw310vmrhec1c8x1dv08in6pi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/travm/Desktop/covid19_Analysis/tableauFiles/dailyCoronaVirusCasesbyCounty.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='todayCovid19casesMN' name='excel-direct.1hig8yd0lhcthj18kc3rx0vkh6ig'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/travm/Desktop/covid19_Analysis/tableauFiles/todayCovid19casesMN.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10azw310vmrhec1c8x1dv08in6pi' name='dailyCoronaVirusCasesbyCounty' table='[dailyCoronaVirusCasesbyCounty$]' type='table'>
          <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='string' name='county' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='pop2019' ordinal='4' />
            <column datatype='integer' name='weekOyear' ordinal='5' />
            <column datatype='real' name='NEVER' ordinal='6' />
            <column datatype='real' name='RARELY' ordinal='7' />
            <column datatype='real' name='SOMETIMES' ordinal='8' />
            <column datatype='real' name='FREQUENTLY' ordinal='9' />
            <column datatype='real' name='ALWAYS' ordinal='10' />
            <column datatype='integer' name='cases' ordinal='11' />
            <column datatype='integer' name='dailyCaseGrowth' ordinal='12' />
            <column datatype='integer' name='deaths' ordinal='13' />
            <column datatype='integer' name='dailyDeathGrowth' ordinal='14' />
            <column datatype='string' name='fips' ordinal='15' />
            <column datatype='string' name='COUNTYFP' ordinal='16' />
            <column datatype='string' name='County' ordinal='17' />
            <column datatype='string' name='Region' ordinal='18' />
            <column datatype='string' name='Urban Clusters' ordinal='19' />
            <column datatype='integer' name='Cluster Size' ordinal='20' />
            <column datatype='real' name='case%' ordinal='21' />
            <column datatype='real' name='caseGrowth%' ordinal='22' />
            <column datatype='real' name='death%' ordinal='23' />
            <column datatype='real' name='deathGrowth%' ordinal='24' />
            <column datatype='real' name='caseper100K' ordinal='25' />
            <column datatype='real' name='deathper100K' ordinal='26' />
            <column datatype='string' name='ruralUrban' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.10azw310vmrhec1c8x1dv08in6pi' name='dailyCoronaVirusCasesbyCounty' table='[dailyCoronaVirusCasesbyCounty$]' type='table'>
            <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='pop2019' ordinal='4' />
              <column datatype='integer' name='weekOyear' ordinal='5' />
              <column datatype='real' name='NEVER' ordinal='6' />
              <column datatype='real' name='RARELY' ordinal='7' />
              <column datatype='real' name='SOMETIMES' ordinal='8' />
              <column datatype='real' name='FREQUENTLY' ordinal='9' />
              <column datatype='real' name='ALWAYS' ordinal='10' />
              <column datatype='integer' name='cases' ordinal='11' />
              <column datatype='integer' name='dailyCaseGrowth' ordinal='12' />
              <column datatype='integer' name='deaths' ordinal='13' />
              <column datatype='integer' name='dailyDeathGrowth' ordinal='14' />
              <column datatype='string' name='fips' ordinal='15' />
              <column datatype='string' name='COUNTYFP' ordinal='16' />
              <column datatype='string' name='County' ordinal='17' />
              <column datatype='string' name='Region' ordinal='18' />
              <column datatype='string' name='Urban Clusters' ordinal='19' />
              <column datatype='integer' name='Cluster Size' ordinal='20' />
              <column datatype='real' name='case%' ordinal='21' />
              <column datatype='real' name='caseGrowth%' ordinal='22' />
              <column datatype='real' name='death%' ordinal='23' />
              <column datatype='real' name='deathGrowth%' ordinal='24' />
              <column datatype='real' name='caseper100K' ordinal='25' />
              <column datatype='real' name='deathper100K' ordinal='26' />
              <column datatype='string' name='ruralUrban' ordinal='27' />
            </columns>
          </relation>
          <relation connection='excel-direct.1hig8yd0lhcthj18kc3rx0vkh6ig' name='todayCovid19casesMN' table='[todayCovid19casesMN$]' type='table'>
            <columns gridOrigin='A1:Y441:no:A1:Y441:0' header='yes' outcome='2'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='county' ordinal='2' />
              <column datatype='string' name='state' ordinal='3' />
              <column datatype='integer' name='pop2019' ordinal='4' />
              <column datatype='integer' name='weekOyear' ordinal='5' />
              <column datatype='integer' name='cases' ordinal='6' />
              <column datatype='integer' name='dailyCaseGrowth' ordinal='7' />
              <column datatype='integer' name='deaths' ordinal='8' />
              <column datatype='integer' name='dailyDeathGrowth' ordinal='9' />
              <column datatype='integer' name='fips' ordinal='10' />
              <column datatype='integer' name='COUNTYFP' ordinal='11' />
              <column datatype='string' name='County' ordinal='12' />
              <column datatype='string' name='Region' ordinal='13' />
              <column datatype='string' name='Urban Clusters' ordinal='14' />
              <column datatype='integer' name='Cluster Size' ordinal='15' />
              <column datatype='real' name='case%' ordinal='16' />
              <column datatype='real' name='caseGrowth%' ordinal='17' />
              <column datatype='real' name='death%' ordinal='18' />
              <column datatype='real' name='deathGrowth%' ordinal='19' />
              <column datatype='real' name='caseper100K' ordinal='20' />
              <column datatype='real' name='deathper100K' ordinal='21' />
              <column datatype='string' name='ruralUrban' ordinal='22' />
              <column datatype='string' name='variable' ordinal='23' />
              <column datatype='real' name='value' ordinal='24' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[ALWAYS]' value='[dailyCoronaVirusCasesbyCounty].[ALWAYS]' />
          <map key='[COUNTYFP (todayCovid19casesMN)]' value='[todayCovid19casesMN].[COUNTYFP]' />
          <map key='[COUNTYFP]' value='[dailyCoronaVirusCasesbyCounty].[COUNTYFP]' />
          <map key='[Cluster Size (todayCovid19casesMN)]' value='[todayCovid19casesMN].[Cluster Size]' />
          <map key='[Cluster Size]' value='[dailyCoronaVirusCasesbyCounty].[Cluster Size]' />
          <map key='[County (todayCovid19casesMN)]' value='[todayCovid19casesMN].[County]' />
          <map key='[County]' value='[dailyCoronaVirusCasesbyCounty].[County]' />
          <map key='[F1 (todayCovid19casesMN)]' value='[todayCovid19casesMN].[F1]' />
          <map key='[F1]' value='[dailyCoronaVirusCasesbyCounty].[F1]' />
          <map key='[FREQUENTLY]' value='[dailyCoronaVirusCasesbyCounty].[FREQUENTLY]' />
          <map key='[NEVER]' value='[dailyCoronaVirusCasesbyCounty].[NEVER]' />
          <map key='[RARELY]' value='[dailyCoronaVirusCasesbyCounty].[RARELY]' />
          <map key='[Region (todayCovid19casesMN)]' value='[todayCovid19casesMN].[Region]' />
          <map key='[Region]' value='[dailyCoronaVirusCasesbyCounty].[Region]' />
          <map key='[SOMETIMES]' value='[dailyCoronaVirusCasesbyCounty].[SOMETIMES]' />
          <map key='[Urban Clusters (todayCovid19casesMN)]' value='[todayCovid19casesMN].[Urban Clusters]' />
          <map key='[Urban Clusters]' value='[dailyCoronaVirusCasesbyCounty].[Urban Clusters]' />
          <map key='[case% (todayCovid19casesMN)]' value='[todayCovid19casesMN].[case%]' />
          <map key='[case%]' value='[dailyCoronaVirusCasesbyCounty].[case%]' />
          <map key='[caseGrowth% (todayCovid19casesMN)]' value='[todayCovid19casesMN].[caseGrowth%]' />
          <map key='[caseGrowth%]' value='[dailyCoronaVirusCasesbyCounty].[caseGrowth%]' />
          <map key='[caseper100K (todayCovid19casesMN)]' value='[todayCovid19casesMN].[caseper100K]' />
          <map key='[caseper100K]' value='[dailyCoronaVirusCasesbyCounty].[caseper100K]' />
          <map key='[cases (todayCovid19casesMN)]' value='[todayCovid19casesMN].[cases]' />
          <map key='[cases]' value='[dailyCoronaVirusCasesbyCounty].[cases]' />
          <map key='[county (todayCovid19casesMN)]' value='[todayCovid19casesMN].[county]' />
          <map key='[county]' value='[dailyCoronaVirusCasesbyCounty].[county]' />
          <map key='[dailyCaseGrowth (todayCovid19casesMN)]' value='[todayCovid19casesMN].[dailyCaseGrowth]' />
          <map key='[dailyCaseGrowth]' value='[dailyCoronaVirusCasesbyCounty].[dailyCaseGrowth]' />
          <map key='[dailyDeathGrowth (todayCovid19casesMN)]' value='[todayCovid19casesMN].[dailyDeathGrowth]' />
          <map key='[dailyDeathGrowth]' value='[dailyCoronaVirusCasesbyCounty].[dailyDeathGrowth]' />
          <map key='[date (todayCovid19casesMN)]' value='[todayCovid19casesMN].[date]' />
          <map key='[date]' value='[dailyCoronaVirusCasesbyCounty].[date]' />
          <map key='[death% (todayCovid19casesMN)]' value='[todayCovid19casesMN].[death%]' />
          <map key='[death%]' value='[dailyCoronaVirusCasesbyCounty].[death%]' />
          <map key='[deathGrowth% (todayCovid19casesMN)]' value='[todayCovid19casesMN].[deathGrowth%]' />
          <map key='[deathGrowth%]' value='[dailyCoronaVirusCasesbyCounty].[deathGrowth%]' />
          <map key='[deathper100K (todayCovid19casesMN)]' value='[todayCovid19casesMN].[deathper100K]' />
          <map key='[deathper100K]' value='[dailyCoronaVirusCasesbyCounty].[deathper100K]' />
          <map key='[deaths (todayCovid19casesMN)]' value='[todayCovid19casesMN].[deaths]' />
          <map key='[deaths]' value='[dailyCoronaVirusCasesbyCounty].[deaths]' />
          <map key='[fips (todayCovid19casesMN)]' value='[todayCovid19casesMN].[fips]' />
          <map key='[fips]' value='[dailyCoronaVirusCasesbyCounty].[fips]' />
          <map key='[pop2019 (todayCovid19casesMN)]' value='[todayCovid19casesMN].[pop2019]' />
          <map key='[pop2019]' value='[dailyCoronaVirusCasesbyCounty].[pop2019]' />
          <map key='[ruralUrban (todayCovid19casesMN)]' value='[todayCovid19casesMN].[ruralUrban]' />
          <map key='[ruralUrban]' value='[dailyCoronaVirusCasesbyCounty].[ruralUrban]' />
          <map key='[state (todayCovid19casesMN)]' value='[todayCovid19casesMN].[state]' />
          <map key='[state]' value='[dailyCoronaVirusCasesbyCounty].[state]' />
          <map key='[value]' value='[todayCovid19casesMN].[value]' />
          <map key='[variable]' value='[todayCovid19casesMN].[variable]' />
          <map key='[weekOyear (todayCovid19casesMN)]' value='[todayCovid19casesMN].[weekOyear]' />
          <map key='[weekOyear]' value='[dailyCoronaVirusCasesbyCounty].[weekOyear]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AB10001:no:A1:AB10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y441:no:A1:Y441:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop2019]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>pop2019</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekOyear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekOyear]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>weekOyear</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEVER</remote-name>
            <remote-type>5</remote-type>
            <local-name>[NEVER]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>NEVER</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RARELY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RARELY]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>RARELY</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOMETIMES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SOMETIMES]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>SOMETIMES</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FREQUENTLY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[FREQUENTLY]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>FREQUENTLY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ALWAYS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ALWAYS]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>ALWAYS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dailyCaseGrowth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dailyCaseGrowth]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>dailyCaseGrowth</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dailyDeathGrowth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dailyDeathGrowth]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>dailyDeathGrowth</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTYFP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[COUNTYFP]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>COUNTYFP</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Clusters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Urban Clusters]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>Urban Clusters</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cluster Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cluster Size]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>Cluster Size</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case%]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>case%</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>caseGrowth%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[caseGrowth%]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>caseGrowth%</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death%]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>death%</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathGrowth%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathGrowth%]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>deathGrowth%</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>caseper100K</remote-name>
            <remote-type>5</remote-type>
            <local-name>[caseper100K]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>caseper100K</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathper100K</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathper100K]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>deathper100K</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ruralUrban</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ruralUrban]</local-name>
            <parent-name>[dailyCoronaVirusCasesbyCounty]</parent-name>
            <remote-alias>ruralUrban</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county</remote-name>
            <remote-type>130</remote-type>
            <local-name>[county (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>county</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pop2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pop2019 (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>pop2019</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekOyear</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekOyear (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>weekOyear</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dailyCaseGrowth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dailyCaseGrowth (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>dailyCaseGrowth</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dailyDeathGrowth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dailyDeathGrowth (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>dailyDeathGrowth</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fips (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTYFP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTYFP (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>COUNTYFP</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban Clusters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Urban Clusters (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>Urban Clusters</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cluster Size</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cluster Size (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>Cluster Size</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case% (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>case%</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>caseGrowth%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[caseGrowth% (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>caseGrowth%</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death% (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>death%</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathGrowth%</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathGrowth% (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>deathGrowth%</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>caseper100K</remote-name>
            <remote-type>5</remote-type>
            <local-name>[caseper100K (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>caseper100K</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathper100K</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathper100K (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>deathper100K</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ruralUrban</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ruralUrban (todayCovid19casesMN)]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>ruralUrban</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[todayCovid19casesMN]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Always' datatype='real' name='[ALWAYS]' role='measure' type='quantitative' />
      <column caption='Countyfp' datatype='string' name='[COUNTYFP]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Mask Use Bad' datatype='real' name='[Calculation_1145884682882682881]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum(if [variable] = &quot;SOMETIMES&quot; OR [variable] =&quot;RARELY&quot; OR [variable] = &quot;NEVER&quot; THEN [value] ELSE 0 END)' />
      </column>
      <column caption='Mask Use GOOD' datatype='real' name='[Calculation_1145884682883350530]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF [variable] = &quot;ALWAYS&quot; OR [variable] = &quot;FREQUENTLY&quot;&#13;&#10;THEN [value] ELSE 0 end)' />
      </column>
      <column caption='Total State Case Growth Rate' datatype='real' name='[Calculation_383650449487261696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([cases])*100' />
      </column>
      <column caption='Total Daily Death Growth' datatype='real' name='[Calculation_383650449488158723]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([deaths])*100' />
      </column>
      <column caption='Weekday' datatype='string' name='[Calculation_383650449491972102]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&quot;weekday&quot;,[date])' />
      </column>
      <column caption='Monday' datatype='string' name='[Calculation_383650449492918279]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_383650449491972102]=&quot;Monday&quot; then &quot;Monday&quot; else &quot;Other Day&quot; end' />
      </column>
      <column caption='Daily Case Growth as % of Population' datatype='real' name='[Calculation_383650449507201035]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([pop2019])*100000' />
      </column>
      <column caption='Daily Death Growth as % of Population' datatype='real' name='[Calculation_383650449508859917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([pop2019])*100000' />
      </column>
      <column caption='Cluster Size1' datatype='integer' name='[Cluster Size]' role='measure' type='quantitative' />
      <column caption='County (todayCovid19casesMN)1' datatype='string' name='[County (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Frequently' datatype='real' name='[FREQUENTLY]' role='measure' type='quantitative' />
      <column caption='Never' datatype='real' name='[NEVER]' role='measure' type='quantitative' />
      <column caption='Rarely' datatype='real' name='[RARELY]' role='measure' type='quantitative' />
      <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Sometimes' datatype='real' name='[SOMETIMES]' role='measure' type='quantitative' />
      <column caption='Urban Clusters (todayCovid19casesMN)1' datatype='string' name='[Urban Clusters (todayCovid19casesMN)]' role='dimension' type='nominal' />
      <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='dailyCoronaVirusCasesbyCounty' datatype='table' name='[__tableau_internal_object_id__].[dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='todayCovid19casesMN' datatype='table' name='[__tableau_internal_object_id__].[todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC]' role='measure' type='quantitative' />
      <column caption='Case%' datatype='real' name='[case%]' role='measure' type='quantitative' />
      <column caption='caseGrowth%1' datatype='real' name='[caseGrowth%]' role='measure' type='quantitative' />
      <column caption='caseper100K (todayCovid19casesMN)1' datatype='real' name='[caseper100K (todayCovid19casesMN)]' role='measure' type='quantitative' />
      <column caption='caseper100K1' datatype='real' name='[caseper100K]' role='measure' type='quantitative' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='county (todayCovid19casesMN)1' datatype='string' name='[county (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County1' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
      <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Death%' datatype='real' name='[death%]' role='measure' type='quantitative' />
      <column datatype='real' name='[deathGrowth%]' role='measure' type='quantitative' />
      <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='string' name='[fips]' role='dimension' type='nominal' />
      <column caption='Pop2019' datatype='integer' name='[pop2019]' role='measure' type='quantitative' />
      <column caption='Rural Urban' datatype='string' name='[ruralUrban]' role='dimension' type='nominal' />
      <column datatype='string' name='[state (todayCovid19casesMN)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
      <column datatype='integer' name='[weekOyear (todayCovid19casesMN)]' role='dimension' type='quantitative' />
      <column caption='Week Oyear' datatype='integer' name='[weekOyear]' role='dimension' type='quantitative' />
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[diff:usr:Calculation_383650449487261696:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[diff:usr:Calculation_383650449488158723:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[County (todayCovid19casesMN)]' derivation='None' name='[none:County (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
      <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
      <column-instance column='[Urban Clusters (todayCovid19casesMN)]' derivation='None' name='[none:Urban Clusters (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
      <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
      <column-instance column='[caseper100K (todayCovid19casesMN)]' derivation='None' name='[none:caseper100K (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
      <column-instance column='[caseper100K]' derivation='None' name='[none:caseper100K:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cases]' derivation='None' name='[none:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[county (todayCovid19casesMN)]' derivation='None' name='[none:county (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dailyCaseGrowth]' derivation='Sum' name='[sum:dailyCaseGrowth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dailyDeathGrowth]' derivation='Sum' name='[sum:dailyDeathGrowth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1145884682882682881]' derivation='User' name='[usr:Calculation_1145884682882682881:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1145884682883350530]' derivation='User' name='[usr:Calculation_1145884682883350530:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[usr:Calculation_383650449487261696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[usr:Calculation_383650449488158723:qk]' pivot='key' type='quantitative' />
      <column-instance column='[caseGrowth%]' derivation='Avg' name='[win:avg:caseGrowth%:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[caseGrowth%]' derivation='Sum' name='[win:sum:caseGrowth%:qk:16]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[caseGrowth%]' derivation='Sum' name='[win:sum:caseGrowth%:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-field='[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[caseGrowth%]' derivation='Sum' name='[win:sum:caseGrowth%:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[dailyCaseGrowth]' derivation='Sum' name='[win:sum:dailyCaseGrowth:qk:10]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[dailyDeathGrowth]' derivation='Sum' name='[win:sum:dailyDeathGrowth:qk:12]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[deathGrowth%]' derivation='Sum' name='[win:sum:deathGrowth%:qk:16]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:10]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:12]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-1' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-4' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:10]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-4' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:12]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-5' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:14]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-1' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:6]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='0' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:8]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-3' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (County (todayCovid19casesMN),Urban Clusters (todayCovid19casesMN))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:County (todayCovid19casesMN):nk]' />
          <groupfilter function='level-members' level='[none:Urban Clusters (todayCovid19casesMN):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (caseper100K (todayCovid19casesMN),county (todayCovid19casesMN))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:caseper100K (todayCovid19casesMN):qk]' />
          <groupfilter function='level-members' level='[none:county (todayCovid19casesMN):nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (caseper100K1,County2,DAY(Date),MONTH(Date),State,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:caseper100K:qk]' />
          <groupfilter function='level-members' level='[none:County:nk]' />
          <groupfilter function='level-members' level='[dy:date:ok]' />
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Minnesota'>
          <field>[state]</field>
          <field>[County]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:variable:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ALWAYS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NEVER&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;RARELY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOMETIMES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FREQUENTLY&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:County (todayCovid19casesMN):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mille Lacs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roseau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Le Sueur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Polk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Waseca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beltrami&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Freeborn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marshall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Winona&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chippewa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicollet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stearns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hubbard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morrison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Benton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Goodhue&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Renville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crow Wing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wabasha&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aitkin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Douglas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cook&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Koochiching&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Otter Tail&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Todd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Big Stone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rice&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yellow Medicine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chisago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kanabec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nobles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steele&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kandiyohi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cottonwood&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lac qui Parle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Traverse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake of the Woods&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pipestone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wadena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isanti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mower&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sherburne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blue Earth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hennepin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meeker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anoka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faribault&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lyon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ramsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Watonwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clearwater&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kittson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olmsted&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Swift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cass&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Itasca&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sibley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Becker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fillmore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mahnomen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Red Lake&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wilkin&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[none:cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[sum:cases:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[diff:usr:Calculation_383650449487261696:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_383650449487261696:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:10]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:12]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:4]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:6]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyCaseGrowth:qk:10]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:deathGrowth\%:qk:16]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyDeathGrowth:qk:12]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[sum:deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[diff:usr:Calculation_383650449488158723:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyDeathGrowth:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_383650449488158723:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:10]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:12]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:14]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:2]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:4]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:6]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:8]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyCaseGrowth:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882314240:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:avg:caseGrowth\%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:16]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[win:sum:caseGrowth\%:qk:9]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyCaseGrowth:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Urban Clusters:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Rural&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urban Cluster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Urban&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dailyCoronaVirusCasesbyCounty' id='dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B'>
            <properties context=''>
              <relation connection='excel-direct.10azw310vmrhec1c8x1dv08in6pi' name='dailyCoronaVirusCasesbyCounty' table='[dailyCoronaVirusCasesbyCounty$]' type='table'>
                <columns gridOrigin='A1:AB10001:no:A1:AB10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='pop2019' ordinal='4' />
                  <column datatype='integer' name='weekOyear' ordinal='5' />
                  <column datatype='real' name='NEVER' ordinal='6' />
                  <column datatype='real' name='RARELY' ordinal='7' />
                  <column datatype='real' name='SOMETIMES' ordinal='8' />
                  <column datatype='real' name='FREQUENTLY' ordinal='9' />
                  <column datatype='real' name='ALWAYS' ordinal='10' />
                  <column datatype='integer' name='cases' ordinal='11' />
                  <column datatype='integer' name='dailyCaseGrowth' ordinal='12' />
                  <column datatype='integer' name='deaths' ordinal='13' />
                  <column datatype='integer' name='dailyDeathGrowth' ordinal='14' />
                  <column datatype='string' name='fips' ordinal='15' />
                  <column datatype='string' name='COUNTYFP' ordinal='16' />
                  <column datatype='string' name='County' ordinal='17' />
                  <column datatype='string' name='Region' ordinal='18' />
                  <column datatype='string' name='Urban Clusters' ordinal='19' />
                  <column datatype='integer' name='Cluster Size' ordinal='20' />
                  <column datatype='real' name='case%' ordinal='21' />
                  <column datatype='real' name='caseGrowth%' ordinal='22' />
                  <column datatype='real' name='death%' ordinal='23' />
                  <column datatype='real' name='deathGrowth%' ordinal='24' />
                  <column datatype='real' name='caseper100K' ordinal='25' />
                  <column datatype='real' name='deathper100K' ordinal='26' />
                  <column datatype='string' name='ruralUrban' ordinal='27' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='todayCovid19casesMN' id='todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC'>
            <properties context=''>
              <relation connection='excel-direct.1hig8yd0lhcthj18kc3rx0vkh6ig' name='todayCovid19casesMN' table='[todayCovid19casesMN$]' type='table'>
                <columns gridOrigin='A1:Y441:no:A1:Y441:0' header='yes' outcome='2'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='county' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='pop2019' ordinal='4' />
                  <column datatype='integer' name='weekOyear' ordinal='5' />
                  <column datatype='integer' name='cases' ordinal='6' />
                  <column datatype='integer' name='dailyCaseGrowth' ordinal='7' />
                  <column datatype='integer' name='deaths' ordinal='8' />
                  <column datatype='integer' name='dailyDeathGrowth' ordinal='9' />
                  <column datatype='integer' name='fips' ordinal='10' />
                  <column datatype='integer' name='COUNTYFP' ordinal='11' />
                  <column datatype='string' name='County' ordinal='12' />
                  <column datatype='string' name='Region' ordinal='13' />
                  <column datatype='string' name='Urban Clusters' ordinal='14' />
                  <column datatype='integer' name='Cluster Size' ordinal='15' />
                  <column datatype='real' name='case%' ordinal='16' />
                  <column datatype='real' name='caseGrowth%' ordinal='17' />
                  <column datatype='real' name='death%' ordinal='18' />
                  <column datatype='real' name='deathGrowth%' ordinal='19' />
                  <column datatype='real' name='caseper100K' ordinal='20' />
                  <column datatype='real' name='deathper100K' ordinal='21' />
                  <column datatype='string' name='ruralUrban' ordinal='22' />
                  <column datatype='string' name='variable' ordinal='23' />
                  <column datatype='real' name='value' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[date]' />
                <expression op='[date (todayCovid19casesMN)]' />
              </expression>
              <expression op='='>
                <expression op='[county]' />
                <expression op='[county (todayCovid19casesMN)]' />
              </expression>
            </expression>
            <first-end-point object-id='dailyCoronaVirusCasesbyCounty_0BCF68AE5B2645A39E68F1BBDD52DA7B' />
            <second-end-point object-id='todayCovid19casesMN_4A1C53AE7BC444299E402E9DFB7242EC' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='MN County Population' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Region (todayCovid19casesMN)1' />
        <param name='target' value='MN County Population' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Case Rate between Urban Clusters and cases per 100K'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Cluster Size1' datatype='integer' name='[Cluster Size]' role='measure' type='quantitative' />
            <column caption='caseper100K (todayCovid19casesMN)1' datatype='real' name='[caseper100K (todayCovid19casesMN)]' role='measure' type='quantitative' />
            <column-instance column='[Cluster Size]' derivation='None' name='[none:Cluster Size:qk]' pivot='key' type='quantitative' />
            <column-instance column='[caseper100K (todayCovid19casesMN)]' derivation='None' name='[none:caseper100K (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04soak21avvcph189wb0703o9f4d].[none:Cluster Size:qk]' included-values='in-range'>
            <min>1</min>
            <max>27592</max>
          </filter>
          <slices>
            <column>[federated.04soak21avvcph189wb0703o9f4d].[none:Cluster Size:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[none:Cluster Size:qk]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K (todayCovid19casesMN):qk]</cols>
      </table>
      <simple-id uuid='{DC176BE7-3CF2-4660-A2FB-6F751A63D546}' />
    </worksheet>
    <worksheet name='Daily Case Growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dailyCaseGrowth]' derivation='Sum' name='[win:sum:dailyCaseGrowth:qk:10]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyCaseGrowth:qk:10]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{8473DAC1-65CA-41BD-8BDE-296705C8FCE4}' />
    </worksheet>
    <worksheet name='Daily Case Growth as %'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Case and Death New Cases per 100K residents by population dense regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Daily Case Growth as % of Population' datatype='real' name='[Calculation_383650449507201035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Daily Death Growth as % of Population' datatype='real' name='[Calculation_383650449508859917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
            <column caption='Pop2019' datatype='integer' name='[pop2019]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_383650449507201035]' derivation='User' name='[win:usr:Calculation_383650449507201035:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_383650449508859917]' derivation='User' name='[win:usr:Calculation_383650449508859917:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]' scope='rows' value='New Daily Cases per 100K Residents' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' field-type='quantitative' max='5.0' min='-0.13998183751464693' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' scope='rows' value='New Daily Deaths per 100K Residents' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='114' />
                <format attr='maxwidth' value='114' />
                <format attr='minheight' value='339' />
                <format attr='maxheight' value='339' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8] + [federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8])</rows>
        <cols>([federated.04soak21avvcph189wb0703o9f4d].[mn:date:ok] * [federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk])</cols>
      </table>
      <simple-id uuid='{2A1A5877-3CFA-43FA-91CB-673DCCF8465D}' />
    </worksheet>
    <worksheet name='Daily Case Growth as % by region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Case and Death New Cases per 100K residents by population dense regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Daily Case Growth as % of Population' datatype='real' name='[Calculation_383650449507201035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Daily Death Growth as % of Population' datatype='real' name='[Calculation_383650449508859917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column caption='Pop2019' datatype='integer' name='[pop2019]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_383650449507201035]' derivation='User' name='[win:usr:Calculation_383650449507201035:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_383650449508859917]' derivation='User' name='[win:usr:Calculation_383650449508859917:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]' scope='rows' value='New Daily Cases per 100K Residents' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' field-type='quantitative' max='5.0' min='-0.13998183751464693' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' scope='rows' value='New Daily Deaths per 100K Residents' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='114' />
                <format attr='maxwidth' value='114' />
                <format attr='minheight' value='339' />
                <format attr='maxheight' value='339' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='196' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8] + [federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8])</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{802AA53F-EB3E-4D58-A18F-F1AA8ECA3E8D}' />
    </worksheet>
    <worksheet name='Daily Case Growth as % by region (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Daily Case and Death New Cases per 100K residents by population dense regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Daily Case Growth as % of Population' datatype='real' name='[Calculation_383650449507201035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Daily Death Growth as % of Population' datatype='real' name='[Calculation_383650449508859917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='County1' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column caption='Pop2019' datatype='integer' name='[pop2019]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_383650449507201035]' derivation='User' name='[win:usr:Calculation_383650449507201035:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_383650449508859917]' derivation='User' name='[win:usr:Calculation_383650449508859917:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]' scope='rows' value='New Daily Cases per 100K Residents' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' field-type='quantitative' max='10.0' min='-0.13998183751464693' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]' scope='rows' value='New Daily Deaths per 100K Residents' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='155' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='114' />
                <format attr='maxwidth' value='114' />
                <format attr='minheight' value='339' />
                <format attr='maxheight' value='339' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='155' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='155' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='size' value='0.20790055394172668' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449507201035:qk:8] + [federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449508859917:qk:8])</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</cols>
        <pages>
          <column>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{33D6144E-8F28-4D8F-8C12-43111C348704}' />
    </worksheet>
    <worksheet name='MN County Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (todayCovid19casesMN)]' derivation='None' name='[none:Region (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[pop2019 (todayCovid19casesMN)]' derivation='None' name='[none:pop2019 (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[pop2019 (todayCovid19casesMN)]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]' field-type='quantitative' max='-9779722.093285609' min='-11520129.418639733' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]' field-type='quantitative' max='6318720.2021023221' min='5205087.9662379948' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='50000' field='[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#ad4523</color>
                <color>#bc4d23</color>
                <color>#cb5522</color>
                <color>#d95e21</color>
                <color>#e76820</color>
                <color>#ee7725</color>
                <color>#f58a30</color>
                <color>#fa9e3f</color>
                <color>#fdb053</color>
                <color>#ffc171</color>
                <color>#d9d5c9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <size column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-20'>
            <formatted-text>
              <run>Twin Cities has 2/3 of MN 5.64 Million People</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-10293706.209058771'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5737632.6123628588'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-92.469936178335132' v='45.732796703536344' />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-10093823.497369207'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5626269.3887764262'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-90.674359228915208' v='45.030150969089675' />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.50505' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{04FB0CC7-1EDE-4FAD-ADD4-3D2DB01AC6FA}' />
    </worksheet>
    <worksheet name='MN Regions'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#4e79a7' />
                <format attr='mark-transparency' value='237' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1E8634B0-58FE-4E04-A2EF-3EEF99CDCD21}' />
    </worksheet>
    <worksheet name='MN Regions Clusters'>
      <layout-options>
        <caption>
          <formatted-text>
            <run><![CDATA[The 2010 Census Defined Counties in the US as either being Urban, Rural, or Urban Clusters.


Urban > 50,000 People
Urban Cluster > 2,500 and < 50,000
Rural < 2,500]]></run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D68A2419-9B43-4544-BE5C-0CB2BD51BFA9}' />
    </worksheet>
    <worksheet name='Mask Use Bad vs. cases per 100K'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Mask Use Bad' datatype='real' name='[Calculation_1145884682882682881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [variable] = &quot;SOMETIMES&quot; OR [variable] =&quot;RARELY&quot; OR [variable] = &quot;NEVER&quot; THEN [value] ELSE 0 END)' />
            </column>
            <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
            <column caption='caseper100K (todayCovid19casesMN)1' datatype='real' name='[caseper100K (todayCovid19casesMN)]' role='measure' type='quantitative' />
            <column caption='county (todayCovid19casesMN)1' datatype='string' name='[county (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Region (todayCovid19casesMN)]' derivation='None' name='[none:Region (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[caseper100K (todayCovid19casesMN)]' derivation='None' name='[none:caseper100K (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
            <column-instance column='[county (todayCovid19casesMN)]' derivation='None' name='[none:county (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1145884682882682881]' derivation='User' name='[usr:Calculation_1145884682882682881:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:county (todayCovid19casesMN):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K (todayCovid19casesMN):qk]</cols>
        <pages>
          <column>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</column>
        </pages>
      </table>
      <simple-id uuid='{53EB8105-9E08-4EDE-99D6-321A45129366}' />
    </worksheet>
    <worksheet name='Mask Use by County'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New York Times Mask Polling Results (July 2-14) </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County (todayCovid19casesMN)1' datatype='string' name='[County (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[County (todayCovid19casesMN)]' derivation='None' name='[none:County (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.04soak21avvcph189wb0703o9f4d].[none:variable:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ALWAYS&quot;</bucket>
              <bucket>&quot;FREQUENTLY&quot;</bucket>
              <bucket>&quot;SOMETIMES&quot;</bucket>
              <bucket>&quot;RARELY&quot;</bucket>
              <bucket>&quot;NEVER&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:variable:nk]' />
            </encodings>
            <reference-line axis-column='[federated.04soak21avvcph189wb0703o9f4d].[sum:value:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.04soak21avvcph189wb0703o9f4d].[sum:value:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk] / [federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk])</rows>
        <cols>([federated.04soak21avvcph189wb0703o9f4d].[none:variable:nk] * [federated.04soak21avvcph189wb0703o9f4d].[sum:value:qk])</cols>
      </table>
      <simple-id uuid='{58EB12FA-F5EE-417B-A410-48A05838B9C7}' />
    </worksheet>
    <worksheet name='Mask Use by County Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Areas of the state were more than 2/3 people responded to frequently or always wearing a mask within 6&apos; of others (July 2-14 NYT Online Poll)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Mask Use GOOD' datatype='real' name='[Calculation_1145884682883350530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [variable] = &quot;ALWAYS&quot; OR [variable] = &quot;FREQUENTLY&quot;&#13;&#10;THEN [value] ELSE 0 end)' />
            </column>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1145884682883350530]' derivation='User' name='[usr:Calculation_1145884682883350530:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]' field-type='quantitative' max='-9394850.3586174063' min='-11351905.156263981' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]' field-type='quantitative' max='6410086.945782586' min='5291769.8685633037' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.66700000000000004' field='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' num-steps='6' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D9198C2C-3792-4FAF-A5B9-CA3E91E3FE08}' />
    </worksheet>
    <worksheet name='Mask Use by Region Good and Bad'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What areas of the state are most enthuasastic about wearing masks?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Mask Use Bad' datatype='real' name='[Calculation_1145884682882682881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [variable] = &quot;SOMETIMES&quot; OR [variable] =&quot;RARELY&quot; OR [variable] = &quot;NEVER&quot; THEN [value] ELSE 0 END)' />
            </column>
            <column caption='Mask Use GOOD' datatype='real' name='[Calculation_1145884682883350530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [variable] = &quot;ALWAYS&quot; OR [variable] = &quot;FREQUENTLY&quot;&#13;&#10;THEN [value] ELSE 0 end)' />
            </column>
            <column caption='County (todayCovid19casesMN)1' datatype='string' name='[County (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
            <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
            <column-instance column='[County (todayCovid19casesMN)]' derivation='None' name='[none:County (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (todayCovid19casesMN)]' derivation='None' name='[none:Region (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1145884682882682881]' derivation='User' name='[usr:Calculation_1145884682882682881:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1145884682883350530]' derivation='User' name='[usr:Calculation_1145884682883350530:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='stroke-color' id='refline1' value='#59a14f' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-color' id='refline0' value='#ff0004' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='text-format' id='refline0' value='n#,##0.00;-#,##0.00' />
            <format attr='background-color' id='refline0' value='#ff000444' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]' z-order='1' />
            <reference-line axis-column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='value' probability='95' scope='per-pane' value-column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' z-order='2' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' />
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.64767956733703613' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk] + [federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk])</rows>
        <cols>([federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk] / [federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk])</cols>
      </table>
      <simple-id uuid='{F4B4D551-B05F-4414-BE2C-DDD77F992481}' />
    </worksheet>
    <worksheet name='Mask Use vs. Covid Growth Rate'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>The New York Times is releasing estimates of </run>
            <run fontcolor='#000000' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>mask usage</run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'> by county in the United States.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>This data comes from a large number of interviews conducted online by the global data and survey firm Dynata at the request of The New York Times. The firm asked a question about mask use to obtain 250,000 survey responses between July 2 and July 14, enough data to provide estimates more detailed than the state level. (Several states have imposed new mask requirements since the completion of these interviews.)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>Specifically, each participant was asked: </run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12' italic='true'>How often do you wear a mask in public when you expect to be within six feet of another person?</run>
            <run>Æ&#10;</run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>This survey was conducted a single time, and at this point we have no plans to update the data or conduct the survey again.</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#24292e' fontname='-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji' fontsize='12'>Mask use was filtered down to 2 categories where Good use represented the sum of the % of respondends that responded ALWAYS or FREQUENTLY to mask use. Alternatively Bad use was the sum of the % of respondents that said SOMETIMES, RARELY or NEVER. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Mask Use Bad' datatype='real' name='[Calculation_1145884682882682881]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum(if [variable] = &quot;SOMETIMES&quot; OR [variable] =&quot;RARELY&quot; OR [variable] = &quot;NEVER&quot; THEN [value] ELSE 0 END)' />
            </column>
            <column caption='Mask Use GOOD' datatype='real' name='[Calculation_1145884682883350530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [variable] = &quot;ALWAYS&quot; OR [variable] = &quot;FREQUENTLY&quot;&#13;&#10;THEN [value] ELSE 0 end)' />
            </column>
            <column caption='County (todayCovid19casesMN)1' datatype='string' name='[County (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Urban Clusters1' datatype='string' name='[Urban Clusters]' role='dimension' type='nominal' />
            <column-instance column='[caseper100K (todayCovid19casesMN)]' derivation='Avg' name='[avg:caseper100K (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
            <column caption='caseper100K (todayCovid19casesMN)1' datatype='real' name='[caseper100K (todayCovid19casesMN)]' role='measure' type='quantitative' />
            <column-instance column='[County (todayCovid19casesMN)]' derivation='None' name='[none:County (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Urban Clusters]' derivation='None' name='[none:Urban Clusters:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1145884682882682881]' derivation='User' name='[usr:Calculation_1145884682882682881:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1145884682883350530]' derivation='User' name='[usr:Calculation_1145884682883350530:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:County (todayCovid19casesMN):nk]' />
              <groupfilter function='member' level='[none:County (todayCovid19casesMN):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[avg:caseper100K (todayCovid19casesMN):qk]' field-type='quantitative' major-origin='0.0' major-spacing='1250.0' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#e6e6e690' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-size' value='1' />
                <format attr='stroke-color' value='#ff000467' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-size' value='1' />
                <format attr='stroke-color' value='#ff000467' />
              </style-rule>
            </style>
          </pane>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-size' value='1' />
                <format attr='stroke-color' value='#ff000467' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk] * [federated.04soak21avvcph189wb0703o9f4d].[avg:caseper100K (todayCovid19casesMN):qk])</rows>
        <cols>([federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk] + [federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682882682881:qk])</cols>
      </table>
      <simple-id uuid='{E80C60B1-8EBF-467F-9681-7554D47567D7}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Mask Use GOOD' datatype='real' name='[Calculation_1145884682883350530]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(IF [variable] = &quot;ALWAYS&quot; OR [variable] = &quot;FREQUENTLY&quot;&#13;&#10;THEN [value] ELSE 0 end)' />
            </column>
            <column caption='County (todayCovid19casesMN)1' datatype='string' name='[County (todayCovid19casesMN)]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
            <column caption='caseGrowth%1' datatype='real' name='[caseGrowth%]' role='measure' type='quantitative' />
            <column-instance column='[County (todayCovid19casesMN)]' derivation='None' name='[none:County (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (todayCovid19casesMN)]' derivation='None' name='[none:Region (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[caseGrowth%]' derivation='None' name='[none:caseGrowth%:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1145884682883350530]' derivation='User' name='[usr:Calculation_1145884682883350530:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]</rows>
        <cols>([federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk] * [federated.04soak21avvcph189wb0703o9f4d].[none:caseGrowth%:qk])</cols>
      </table>
      <simple-id uuid='{2F6CD040-8F0D-4AB8-938C-E9F2C16B2E94}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5ECCCA59-562D-47B4-B99D-93AE0CAFD0AF}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[dailyCaseGrowth]' derivation='Sum' name='[sum:dailyCaseGrowth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dailyDeathGrowth]' derivation='Sum' name='[sum:dailyDeathGrowth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dailyCaseGrowth]' derivation='Sum' name='[win:sum:dailyCaseGrowth:qk:10]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[dailyDeathGrowth]' derivation='Sum' name='[win:sum:dailyDeathGrowth:qk:12]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyDeathGrowth:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyCaseGrowth:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyCaseGrowth:qk:10]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyDeathGrowth:qk:12]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyDeathGrowth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='91' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[sum:dailyCaseGrowth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-transparency' value='55' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyCaseGrowth:qk:10] + ([federated.04soak21avvcph189wb0703o9f4d].[sum:dailyCaseGrowth:qk] + ([federated.04soak21avvcph189wb0703o9f4d].[win:sum:dailyDeathGrowth:qk:12] + [federated.04soak21avvcph189wb0703o9f4d].[sum:dailyDeathGrowth:qk])))</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{6F61BE0F-F009-4F24-BF10-E81AE0C3AEF6}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[deathper100K]' derivation='Avg' name='[avg:deathper100K:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[deathper100K]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[avg:deathper100K:qk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{50F45464-D493-4BDC-B8EC-767B3104842B}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Region (todayCovid19casesMN)1' datatype='string' name='[Region (todayCovid19casesMN)]' role='dimension' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region (todayCovid19casesMN)]' derivation='None' name='[none:Region (todayCovid19casesMN):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0332B304-3B03-4497-8ED4-0186B801E10E}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Daily Case Growth as % of Population' datatype='real' name='[Calculation_383650449507201035]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([pop2019])*100000' />
            </column>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[case% (todayCovid19casesMN)]' role='measure' type='quantitative' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[case% (todayCovid19casesMN)]' derivation='None' name='[none:case% (todayCovid19casesMN):qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Pop2019' datatype='integer' name='[pop2019]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_383650449507201035]' derivation='User' name='[usr:Calculation_383650449507201035:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.04soak21avvcph189wb0703o9f4d].[none:case% (todayCovid19casesMN):qk]' />
              <text column='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_383650449507201035:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[none:state:nk] / [federated.04soak21avvcph189wb0703o9f4d].[none:County:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{50D759B0-EF11-40B4-9C1F-CC1B5CBD8E93}' />
    </worksheet>
    <worksheet name='Total Cases and Growth Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cummulative Cases/Deaths and the %Daily Growth Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='Total State Case Growth Rate' datatype='real' name='[Calculation_383650449487261696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyCaseGrowth])/sum([cases])*100' />
            </column>
            <column caption='Total Daily Death Growth' datatype='real' name='[Calculation_383650449488158723]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([dailyDeathGrowth])/sum([deaths])*100' />
            </column>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Daily Case Growth' datatype='integer' name='[dailyCaseGrowth]' role='measure' type='quantitative' />
            <column caption='Daily Death Growth' datatype='integer' name='[dailyDeathGrowth]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[deathGrowth%]' role='measure' type='quantitative' />
            <column caption='Deaths' datatype='integer' name='[deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Max' name='[max:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deaths]' derivation='Sum' name='[sum:deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[deathGrowth%]' derivation='Sum' name='[win:sum:deathGrowth%:qk:16]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-7' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_383650449487261696]' derivation='User' name='[win:usr:Calculation_383650449487261696:qk:8]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
            <column-instance column='[Calculation_383650449488158723]' derivation='User' name='[win:usr:Calculation_383650449488158723:qk:14]' pivot='key' type='quantitative'>
              <table-calc aggregation='Avg' from='-6' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04soak21avvcph189wb0703o9f4d].[win:sum:deathGrowth%:qk:16]' included-values='non-null' />
          <slices>
            <column>[federated.04soak21avvcph189wb0703o9f4d].[win:sum:deathGrowth%:qk:16]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[sum:cases:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[sum:deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]' field-type='quantitative' max='5.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:14]' field-type='quantitative' max='5.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]' scope='rows' value='Daily Case Growth as a % of Total Cases' />
            <format attr='title' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:14]' scope='rows' value='Daily Deaths Growth as a % of Total Deaths' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <label-data column='[federated.04soak21avvcph189wb0703o9f4d].[max:date:qk]' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='24' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[sum:deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <label-data column='[federated.04soak21avvcph189wb0703o9f4d].[max:date:qk]' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='most-recent' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='24' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:14]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-first' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8] + ([federated.04soak21avvcph189wb0703o9f4d].[sum:cases:qk] + ([federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449488158723:qk:14] + [federated.04soak21avvcph189wb0703o9f4d].[sum:deaths:qk])))</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='351'>
            <formatted-text>
              <run fontcolor='#787878'>Day of Date: </run>
              <run bold='true'><![CDATA[<[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Govenor Walz Executive Order 20-99 Social Gatherings and Indoor Resturants Prohibited</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-11-18 14:48:48.803#'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3.0083565459610027'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-230' y='-71' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='345'>
            <formatted-text>
              <run fontcolor='#787878'>Day of Date: </run>
              <run bold='true'><![CDATA[<[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]>]]></run>
              <run>
Govenor Walz Executive Order 20-81: Mask Mandate for all indoor businesses and indoor spaces</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-07-24 15:15:37.558#'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[tdy:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1.4206128133704738'>
                  <node-reference>
                    <axis>[federated.04soak21avvcph189wb0703o9f4d].[win:usr:Calculation_383650449487261696:qk:8]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-181' y='-114' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{E61B2948-FB21-41F3-AC00-B6DAF2D40501}' />
    </worksheet>
    <worksheet name='Virus Spread'>
      <table>
        <view>
          <datasources>
            <datasource caption='dailyCoronaVirusCasesbyCounty+ (Multiple Connections)' name='federated.04soak21avvcph189wb0703o9f4d' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.04soak21avvcph189wb0703o9f4d'>
            <column caption='County2' datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='caseper100K1' datatype='real' name='[caseper100K]' role='measure' type='quantitative' />
            <column caption='County1' datatype='string' name='[county]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[caseper100K]' derivation='None' name='[none:caseper100K:qk]' pivot='key' type='quantitative' />
            <column-instance column='[county]' derivation='None' name='[none:county:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:county:nk]' />
              <groupfilter function='member' level='[none:county:nk]' member='&quot;Nobles&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K:qk]' num-steps='11' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#529985</color>
                <color>#79a163</color>
                <color>#dbcf47</color>
                <color>#cd8674</color>
                <color>#c23c1a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K:qk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]' />
              <lod column='[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]' />
              <geometry column='[federated.04soak21avvcph189wb0703o9f4d].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]</rows>
        <cols>[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</column>
          <column>[federated.04soak21avvcph189wb0703o9f4d].[mn:date:ok]</column>
          <column>[federated.04soak21avvcph189wb0703o9f4d].[dy:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{BC3D35A2-BD9A-42B8-863E-19BC5DCBD11B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='48899' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='48899' id='5' w='82400' x='800' y='1000'>
              <zone h='48899' id='3' name='MN Regions Clusters' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='48899' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10750' id='8' name='MN Regions Clusters' pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='MN County Population' pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]' w='16000' x='83200' y='11750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49101' id='9' name='MN County Population' w='98400' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='22' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='21' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48899' id='3' is-fixed='true' name='MN Regions Clusters' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10750' id='8' name='MN Regions Clusters' pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49101' id='9' is-fixed='true' name='MN County Population' w='98400' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='MN County Population' pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]' w='16000' x='83200' y='11750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5951FCBF-E848-431B-883C-69CFE61C1409}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='New York Times Covid 19 Data. Daily Cases and Deaths' captured-sheet='Sheet 15' id='1'>
                    <capturedDeltas>
                      <worksheet name='Sheet 15'>
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='show-null-value-warning' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Are cases or deaths increasing or decreasing?' captured-sheet='Total Cases and Growth Rate' id='2' />
                  <story-point caption='MN is divided into regions ' captured-sheet='MN Regions' id='5'>
                    <capturedDeltas>
                      <worksheet name='MN Regions'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]' field-type='quantitative' max='6343041.5182581833' min='5274354.902305847' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]' field-type='quantitative' max='-9879999.8601903208' min='-10983549.500121484' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='MN Population is centered in the Twin Cities ' captured-sheet='MN County Population' id='4'>
                    <capturedDeltas>
                      <worksheet name='MN County Population'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Latitude (generated)]' field-type='quantitative' max='6351050.6083687227' min='5298177.2898740647' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.04soak21avvcph189wb0703o9f4d].[Longitude (generated)]' field-type='quantitative' max='-10015589.24969114' min='-11102809.725903904' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='MN is divided into Rural, Urban, and Urban Clusters' captured-sheet='MN Regions Clusters' id='3' />
                  <story-point caption='Each Region Experienced Different Covid ' captured-sheet='Daily Case Growth' id='6' />
                  <story-point captured-sheet='' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C26CE435-A310-42C6-AC96-A0741351A75B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='MN Regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EED53BBC-F785-4AAA-B90D-3A78E97337F4}' />
    </window>
    <window class='worksheet' name='MN Regions Clusters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' type='color' />
            <card type='caption' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83AB7DF9-3AEC-4CF7-B351-43D40B8B52CB}' />
    </window>
    <window class='worksheet' name='MN County Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]' type='color' />
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019 (todayCovid19casesMN):qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:pop2019:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{D518F139-A46C-4436-83E3-7125C855AF2D}' />
    </window>
    <window class='worksheet' name='Daily Case Growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A94ED233-9D75-4858-872B-7D5756D1025E}' />
    </window>
    <window class='worksheet' name='Daily Case Growth as %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='209'>
            <card pane-specification-id='8' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:date:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BF5822F-0B38-4E43-A921-C5412E4718D6}' />
    </window>
    <window class='worksheet' name='Daily Case Growth as % by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='8' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:date:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{691601CF-CA02-4128-A2B1-C5A9CCB8EAED}' />
    </window>
    <window class='worksheet' name='Daily Case Growth as % by region (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='8' param='[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Northland&quot;</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:date:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD6AC230-8E71-4319-8989-FC0DA2101AA4}' />
    </window>
    <window class='worksheet' name='Case Rate between Urban Clusters and cases per 100K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Cluster Size:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42591BEE-6F8B-40E1-9759-5E38F5D5C26E}' />
    </window>
    <window class='worksheet' name='Mask Use by County'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:variable:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:variable:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{159881A5-A2F8-46E9-81A1-4EB07C9F450A}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:caseGrowth%:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF447FAF-2FDC-4AD4-8DB2-97B91E64269C}' />
    </window>
    <window class='worksheet' name='Mask Use by County Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[usr:Calculation_1145884682883350530:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:ALWAYS:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D544FBC3-1C75-4884-90EA-E2D42D798FDE}' />
    </window>
    <window class='worksheet' name='Mask Use by Region Good and Bad'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:county (todayCovid19casesMN):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A469823F-FBCC-470B-AF60-71FD5FA912E6}' />
    </window>
    <window class='worksheet' name='Mask Use Bad vs. cases per 100K'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Twin Cities&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:county (todayCovid19casesMN):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B7232AE-3EDB-405D-BB1B-8729FEDDB049}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86078C41-02DA-4F18-A499-C8833B73CB8C}' />
    </window>
    <window class='worksheet' name='Mask Use vs. Covid Growth Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='258'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:County (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:caseGrowth%:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47332F77-04F0-485D-9746-6A9389EB19A1}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{81F7F0E4-05CB-4221-AB36-E1DD4232D309}' />
    </window>
    <window class='worksheet' name='Virus Spread'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
            <bucket>12</bucket>
            <bucket>12</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[dy:date:ok]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[mn:date:ok]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:caseper100K:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:county:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[qr:date:ok]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FBEDFCF-728B-4608-B822-98CE6E084F69}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Calculation_383650449491972102:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Calculation_383650449492918279:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6D813E7-923E-49FF-8FCB-FF2171163E75}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[avg:deathper100K:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[avg:deathper100K:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:death%:qk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32920350-CC7C-4E9E-BC18-4F464D8B1C57}' />
    </window>
    <window class='worksheet' name='Total Cases and Growth Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.04soak21avvcph189wb0703o9f4d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region:nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBC1432A-4F7A-4AD8-AFE7-66B1BE9AE3F8}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Region (todayCovid19casesMN):nk]</field>
            <field>[federated.04soak21avvcph189wb0703o9f4d].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D664840-5401-4BB7-85E4-670A2A09544D}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{E601B34F-525E-48C8-A30F-2CF86A39DD51}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='MN County Population'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='MN Regions Clusters'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.04soak21avvcph189wb0703o9f4d].[none:Urban Clusters:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{694D2E4B-2109-4A7D-81D6-F190551C49B8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Case Rate between Urban Clusters and cases per 100K' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily Case Growth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daily Case Growth as %' width='192'>
      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
      /we5Qc+2ISpjlQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Case Growth as % by region' width='192'>
      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
      McKWdGUioQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily Case Growth as % by region (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy92ZMkSX4e9nkcGXlnZd1nd1Wf09PHHD0zu4s9sIvFUgAXEEhQFGmEJDNC
      MtJML3yQ0Yx/g0yPMuMTDUbJcFBGgcQSpAhCWOwxu7Mz09M9x3b39N1dZ9eZ9xGn6yHTozw8
      PSIjs7K6B5r6zLozKzLCr/i5++92QimlOMEJvqRQXnYDTnCCl4mTCXCCLzVOJsAJvtQ4mQAn
      +FLjZAKc4EuNwAR4cv9TrD+vAAA+/PFP0Qbwox//CACwurYOAHDqu/jhT97D+x/chBOmP3Ja
      2C3VYjfi/u1PcOPDj1Dbe4Z7W3XpPZ7VQK3lxC7zBCeIA43/Y3u/BqV8DwuTr+L2p/dx/le/
      iZ2nn+H2qVdRfr6OU0uLcOq7MCZXcD65jl+uVpGsPUbDTeD6tYu4deNDNGkCX3/zAtotB2vl
      +9jaKePStTfx6PZHsGwX5669hY37n4AaBVx79QJKq7fRMGbx1uUZtJ/fQb1dwNrqOpamM3h8
      ADS2H4IaBWTba/jFpobvf/ttPLrzGdLjM8gbGhrtGvLZAp6sbWDp9FkszIy/rLE8wd9A9LBA
      Cgju37mHV65cAgAsXXwTq3dvgF/s733yHv7jh1u4OtnAzz9+go07H+LD9z9A7swbgGcCTh3r
      W2U82djBO++8gY9v3kCz7eKdN87g3udr2NnZgaKoAID953uYmp0KtGF9bR1ol/Fk68C/d35+
      Dhcvv4b9ezew1aZ4//33sfXsIRLFOXjNKkzHgaYF5vMJTtAXPRPgyrlp3HhUQj5x+NPX37yI
      9z9+4P998bWv4fUzRdzbrGNxMouFC5excnoW926+j8fPNv37iN3EBx98iOLUHAhh5XmYGJ/B
      vc/vwgOwcu11fPbuX+HGjZswvc4d9coubn52N3Cvkspj9e4t6IVppBTg2rVrgJrEzOQYUoUC
      MoaGO3fuHMcYneD/xyCjsgQ7zSpu3bmPnf0Kvv9ffXcURZ7gBMeOkU2AE5zgbyJO1KAn+FIj
      IDWapvmy2nGCE7wUBCZApVKBorzYTaFUKqFYLPZcp5SCcWeEkMAnf93zvJ7nGBRF8Z/h7yOE
      +NejoKoqXNcNlO15nv/JI6xMTdNQqVQwNzcH0zRhGAY8z4NhGCCEwHEc1Go1uK4LVVVhGAYs
      ywIAOI7j90NRFL89/PVEIoFWqxXoO7tXURTYtt0zNpTSvmMgjj8/ruxZ9q9QKEBRlMA9uq4D
      AMrlMkzT9MeLv4+/X9M0f1xs2/bvF8c5Cnx/4nD2hJCXzwLJiJgRGX+P+LJ4IuRfBiMWnviH
      bRcjfpEYxPb0IyRCCDRNg2EYME0z0Db2OwC4rgtCCNLpdKD/nufBcZwAYTC02+1A+xh0Xe+5
      JhJuv/6H3cePfTKZhOu6sCzLXzzZJ6UUlmVJiZHvN9CZ7Lquw7btwLjHhWxM+9EApRQvXXGu
      6zpc1z3SziMOJtBLlPwqFmdisPtlxCW7NwxsxWOreiaTgW3baLfbfr9TqRRs24bjOGg2m9JF
      AQiuhvzuJBu7drvdt48y8OXyYyD2CTgk8GaziUKh4E8MQghM0wSlFIqiBMpjn/x3z/P8HYuN
      06CglEJVVaiqCtM0Q7kGES99AgDhjQtbgWS7gbhj8OXy5cRZVUTWJwr9JpNhGPj8/kM0Wy3M
      zc5CURQ4jgPLsuC6LnRdh2EYSCaT8DwPrVbLnxhh27+u69B1Ha1Wa6BVEjicRIw4RWiaFmCd
      RPaHgV1jK3e1WoWmaXBdF5lMBo1GwyfKODsOI1y+nfxE6wfZu2aIevdfiAkQ1uBBV3GRB5Sx
      Uex6v60x6rdBiM7zPPznm5sgd1vIqnfwj7//JhYXFuC6LlzXhW3b/nbNJgXjhZPJJOr1emAy
      MoJqNpux28AjjKBZ3xzHkbJ8snv5Mgkh/qSp1+s+Gxs13jwLGyXXxYXjOD4bydrY710FlgD2
      gOd5QzdiFBAHXVEUFAoFpNPp0Gd4AZUfdHEbjyIAvv5B2snq1nXdFwgD9ykKKNHQQBbP1reh
      qipSqRQymQwKhQI8z4Nt21AUBZlMBrquw3EcVCqVnp2Il02GAS8n8WBjxIiIpwW+r7JFybKs
      AL3w480Ls2EyiaqqsG27h2AHWWxkPH+cZ6U7QNyVchRgWgymNZCBUoparRZ7Usp2Cb4v/frE
      tt+w+sKet227p52dezsvGQA29+v+y04kElBVFZlMxic+x3Ggqmpo3UwDFAVWV5yJErbai4R4
      2Bf0fJehH+vE/+04TmS9cSBji+MgMAHYysCr04aBjB8Pg2EYaDQaoffxK5FIxGEEHTZxB+2X
      TFMjY7PCJhrjp4HDa/fWDvw2qKoKy7J8NohSGlAZDgtKKbLZrC9sRxGi+BuvruT/DqsH6OWx
      +42/DLKd5SjjEFfmC0wAxru9aJRKpWPfaQaFaVlwnc4Kajs2VEXlJg5FnNZSiq4X7eHdNUfH
      8+1tLMzPg1KKVqvlC39s5R92deVh27aviQlvX+9qLKtL/F22U8jaJGNBw/oDBGWCQelQthCx
      OtmOKGPDAhOgUCj4NzO0221YloV8Pj9QgwbB5OTksZU9LP7PP/sR7u93CZ7SLg13X3rzAP+s
      fKevBuFnShofzL4Bkp7w2SolkcHq+nPMzsygXq8HDFWiupB95wmC2ROazWakMMuMY2HgiTid
      TqPZbPpyDGPRREKPUirIkE6nkUqlfPWu4zihhD1q1ocvI51OgxCCWq3W82zgHbIG8p1iWgmm
      W33RK7VsgPlrMoEuDvpZhl9ZKuL+fgUgCsTlnhIClVJofcbiNbeB2u5t1Ow2Vuff9uuqNDus
      Cc/7iv1j11OpFHRdR6XSidRzXRftdhuqqgYIimfRxPGKkmcYstmsr/yQCaSEECSTSX9XEesR
      76WU+ixgIpGAruvwPA+WZfn/RGKNs7PxfQoDXwazL4gqY99oJz7IOsckajawcS2rg6oJ+4HX
      PvAv+ajW3iiVKQDMTk8ATvQqGgVKKQoAvm+VsOx1jDtscdHV4PiK/RMJS1EUJJNJX24wDENa
      XxiiiJ+pVZ1uQJHjOFLiUhQFhmEgnU7DMIzQ+hKJBMbHx2EYhs/elctllMtlv458Po9isSjt
      E7NxRC22hBB/YYgCe55xMTL07OIinzcIgYmqML6coyBsmztK2aLuWSxnbnYWee0WqshIHlZg
      AggbflbuluehSil2iRr47ce3dzCWe4j56QnUqlUsnT7t77SiDMD8h5LJpO9uwK9mYj8Gheu6
      PjvFVvcoWaCfkM40W4lEAo1GA+12G4ZhQNM0fxfQdR2apkHTNOlkZ+NAKUW5XJa2h7mGhEFU
      UYvwWUrZwzKBIg4G2cKGRVzpPm5ZUare5ZksPt2R/KClUfI8ZAV5ScSPk9NYnXo1cI1SijZJ
      4d+8t4X8/k/wT80d3Dh7Bpnz56FlM8jn85ibn0er1fJXuq3NTdSrVWTyeWiqiuL4OEzT9I1W
      ccBr+JgqVaa94ceGv8YmimyRCwxNl6gtywIhBJlMBolEotc2Qogfwsp8nRKJROAez/OQTCYD
      8gzbOfv1W+RkWN8jhWC+43xBg0wA9ozYkGEg8rey9h0VYeUpioJPnxwAmZmByoszVp17FEBN
      AJTi0qPHII+fgAJoeB4e/d3fwdkrV6CqKj7+D3+O/M1byAD4PLWH83NV3F34Hubf/NvI5XL+
      RACC7gNiX3heWGyrjDjFvlBKQ90jCOnYOdgq32w2kUgkkM1moet6XxmNECJlZ9gCwKty2Sdv
      DwnbsdgkY+yPbOJosofEQgchOraN8ROHbetxZQixfnGLfxHCuOM4cFoVKIHx8vWa+MPipeD1
      TkMBAF/f+yWmiIKrznNoW208nntTWgf1Hzscq6yiYOPn7+GTX/4S2NvHVLmCbPe3nAbMpF3M
      lv8Caz/4IT5MfRW//t/8j2g2m5FGL9GyH2cFlbl7i39rmoZEIuFrpXRdR7vdRjKZ9B3T4ryn
      KF6fyQSMiEXbi4yV5Wm43+SL1OTJpP1+9wNBgpdJ+nHKeBGIagshBJlcAaYRfwdgbZ8tfY5z
      XfboAB4eD9Amz/NwYWcX2NkNlAkAlDOoTSZdVPMKPvl//hUufvsfgXQ1LkygjWJPxAkhatX6
      2QMYa8PUi5ZlwXEcZLPZjpAfY9WPCzYJRCGWp82o9yh6xYr3BiaAOLuOCpmqrF/ZURNulG3r
      B0VR4CGaxxfB2savnUXXxOLeve5f3K4KgJgVaTmhiwAn0BmKh1frP4JHCZ6t/wqKkzPYfvQp
      PNfBpXe+K/UUVRQFmqb58gVfX7/FgH2y7zxfb9s2DMMITEC2Q4xCAcK8BWS/DcJdMEMjG5dk
      MinXAoVpXdh3dk+UEMU3chjDRr9V6LjheR4Wpgt4KqfRSDg43P2uEBdXzG3pfZ/bNtBHlReA
      aI+gFAoBWg9/CmdvHq88/7egFLj7oYJLb3/H9y5lY8ncLiilMAzDd8UQ/YuiFiD2yXYSZh9w
      XRe1Wg27u7v+DrO0tIRUKnWkfE38RBLbxbt2izQpg6qqfvwJi78I1QKFGTnC7gn7nUng4vWo
      LXIYDZT4/FFZKUVRsL2zDxizAz/rRtTPT/BBW0gkT1BKMVf5ANvlCSAJABS5R/8Onx08gzdx
      BW+8805Ae8PYib/4yQ3cebiGf/5P/n5PBBbvhy+jBWbgsiwLmqah2WxibW0N6XQai4uLvj1h
      fX0dqqpicXHxSGwRM6aFxazLWG12nYdoOOyZAFECME+4/O9Mp8vuc1030NAw3n+QbTfO/Qzp
      dBqKoqBel+cYjQtKKd5ormN8+y5ADxffBqVwKEVBUUIJmHguoARXdtlCMCqM6RaK5Dk8r1Pm
      olHFUuvH+KsfPMbq7Cympqb8GOT1x4+x+W//b/wsfxnEmMJ7H36M1y5f8FWOqqqiVqv5LA3j
      ofn2st3D8zw8e/YMrutiZWXFX+mZ4HrmzBlUq1U8fPgQExMTGB8f941cg4C5iUeFV4ptlNEb
      Y80Y6wRIZACZylFctZm/OusMbxzhY19lYLM17rYV1qEwsJfABDK27Q8KSilW3rqO+Z/8NMB5
      VDwPbc/DjBYuH9wzgywFT/y8ogAD7gGE9PoG8e3lv1NKMaFqaP+rP8CPV05jbmEB2N1D/vET
      nHJsUOpBUVT8p4828OcfrnU99zwQeKBqAio8/KNfv4wLZ1cCrhSKokDXdezt7WF3dxezs7M+
      cZqmiVwu578rTdNQLBaRyWSws7ODhw8fDs0WGYaBbDbb488TPlZySz+/IHue1z8ijCd8kcj5
      AGYGts1ks1lfcJGp0AbVDsVFrVbzwwuZ1XEQgxGPzPJpNH70Y2S5lTtLCB54LqjLDTD3zKSi
      4C9TU/hBagIA8M36U3xdlRE/0MPU94HjyI05YaDUw7SqY2Z1HVhd959tcjw8tGzwme6nSwj+
      +Ief4/L9DTzc2MfieBK/+vZlqGqnDel0GisrK7BtG41GA4lEAul0useZkgmx8/PzME1zaLaI
      EOL7K4U5AoZpHsOgKEp/NSjQqxPuF7jMdgDmryHzwmOfop//UUFp0BNyWOIHgKnpaTzOZpHl
      wg9VQvCXY+eB9JT0mW9svgeazsMrLIJ6LqYbT/3f4somJc9DlXodTRHYNCFour0Gq6gXLuPh
      AUAF6bv5UErhaDl8uk0wmx/D7/7mVzA5MR7QolQqFT8Krp/On0XBnTlzBrVabSi2iBCCXC7n
      JxFgfeM1UpRSPzApjho/1j40KAGx3DUstjWsM+zzOLU7R+G1VVWFe/oUcPfzwPUz7RI2jSzs
      9KEbN3VtzBw8xBlVxR0CNAEQRcWfppfwvzSeydsGigeO3UOLLgVe0TR4AFxK4QHwQNGk8jDG
      MANmGLp3Rt5DPRc5zcR3r6/gG29fQyKRCLwntupnMpnY7AzT6IyNjSGdTg/FFjGBmLlNiByE
      53mo1+tSedXvG/dM3xpl7AtfmQyu6/pOUWyGhu0acQxj9XrdzziQTCZ9iyMT2GSJtUaFya+8
      g/LtOxjjtup/4NXwp9VVrFuHumnqWPjt9jYmVBUKDld7W0uFlk1AcF4LV4Oq6Ow4DGHu12Fs
      UaiQHlYh9ZBCA1dXpvHGxQVcuni+h6VhSKfTviFsUMjYIkVRsLS0FMkWUUr9uIJEIoFkMtlT
      v+d5AdVvlEqX0iHzAsm2WtYxAH7GA2YlTKfT/pYVBdl2xTqtqipKpRLy+TyazSYymYxvILFt
      G9PT08N0pS8mZ2bw+XgRY+WgQeB33TrQEDRNzMfc4+SiKE3XgG2xrNEk8ejZAVwTr5/O4a1L
      i7h04VwslmQUu/agbBFb1Q3DCHWFbrfbgRDTfu0feET5mcVrdPhrrHDmFgt0BGdeG8MbOMT4
      WLGuXC7nq9ZM08Tc3BwMw0C9XsfU1NSRsiTEgX7lCvDuz2LfP2fXsccGnyihMs7AJOSNyL2A
      +z6f8/DffvctrJxeOnZ2VNqWAdgilkQsDEzVyZfdz6g39A7A85+sMrFCluyIsUQsPI6BzXKW
      KCoMLFVgPp8PaKXY38cNMxOejkVEpz18mwhcyAd6UFIbtKeRLBCleH0xgd/77W8hmUwOWPLo
      wbNFlmVhbW0NiqJgcXFR6k4dBsMwQhMByBBLDcqjXygh/zfLZcmMYywFCBOSmU+KjIdl1yzL
      ws7Ojp8TiBlF6vU6LMtCJpOB4zjI5/PHdkSSoyXwv+bOoUNSwrZsNQDNAJRO3RQAtduHoXaE
      wEHvQBNCANLxG9oiBHe1LL5lVZGIWIHpiFZnC8Bvvr2E7/+tXzu2FZ+txowdZrKg6PMvQlVV
      JJNJny169OhRbG0Rc8sgpBP/G8f+M7AQPMg9opDsui6q1WqPqR1ApJWU7STNZtPfRRzHgWma
      yGazfpljY2N92zoMdF0HcnNSfp62DgA9C0VLdHZEALTO+/4QPHUdJMmhI8M9JYlydhY1D/iP
      WgpudgpU0TG9+hNcI6Pc0XrLsgB4v/Nf4/vf/MaxEb/jOKjX675DnhjyGEe+4Nmi3d1dPHz4
      EIuLi0in05ELHdtJCCEolUp9Y6EHXjJ5NmfYAYwKUWPlMxVWIpHA1NSU78PCsh4ztspxHCws
      LPiDMkqbAsNYPgfqboJoQ7AKRMGUomKCm+CfahmsFs4E76MUPxk7h3btGU67JmYUWR8Gmxyy
      u6tf/xW8fozE77ouSqVSIHiGaYwGjeFmxDw3N4eJiYnYbBEhBIlEAmNjYyiVSpHs0EtPjy5C
      1ljmx84kf7ZCsAgopm5lGHVuIwoK6g0paCsqROmGeRExBQAjimZuDn899xXcNOQ7mXLEzWF3
      ZRlXfuv7x0L8zABVrVZ9OY+5QmSz2djBMTLwbNHExAQePXqEnZ2dUN8gBl4dGoahdgBgtM5c
      YYiTnYzHIG4Cg0BTVdDGLjy7CXBRYQBArTpgteCqesefBgBtV9Cx41JQx4LYegXBGF3Riauk
      pQG71w9b5g0aF3tLi3j19/9x30wKw4BZ33nrK8vnKhrQhsUwbJEshkDEwEIwa8xROiVOojD9
      f1j9Yjm8SwUwfErHMMzMzOB/mnwXZ/NBB7/b+wksVU73tBkAYD4HANRcF1WhPLYDMH/63r7L
      2zHMDmCBovLWdVz6nd9BMkKF2Kl3cPbR8zw0Gg3f+5Y9z9xgRr3bxGWLmPDdD4EJwA4qECuM
      I7TIiJqVGfYMbzcImwD96vWdurhro0atVkNC6R3MODURQnooWqHRu9qOouOPjOnOik87Kz8B
      henouI6N2O22AFi/+Zt4/TvflmaDZp++1bob2RUXLLCEnQUAHLJ1qVRq5AsRD5m2aHx8HBMT
      EwOdnSCNB5AhzKggThAZUYrgt8l+5Ue1Z5DrR0Emk8G2MQ9gNXC9YLg48FyMK+Gu0QrQM1PU
      PqyMqaewXlzuuU5rmwDiHQZecQwUfvu38cp3viO1qDL7DAtuoZTGJn5KKdrtdmjOnmw2C0KI
      n/IdOKSTUb6fKLaI+Snx5zDIcCwxwSJPKxskMQGUeM+gE4I9cxxQFAVO8TxQD04AXaHodxBR
      RxII9mf4dTFe/56riyj+rX+Or82fClxn+Xcsy/I9dAuFAgghoT4/vNGT/Wu324FV328dx5Iy
      PTx7z5qmIZlMHsvOILJFDx48wMWLF5HL5XxbRKVSkS7KPTuAOAH4TsUhyChWRizjKALrixDC
      eej19aGeIwDWHQctr2MhvqemsZo6dKUuNj7HhcQmKAg8EFAKPHELOEBvNgoK4FlNO3SRJodT
      Iq15GE962Exfxenf+he+4ZDtxoxV4TUnvEeljChZTlhG7KysfucmmKbZY41lB+mZpilNwnwU
      8ByHYRgoFApoNBooFot+v8Pa3JcFGobQhlm949bLyxqyyXZcKj6TpHoU6wQUzxwHZcIdpYru
      qt/94lCKBVXFktoZ6luJPOqFJf/+abWE355+Eij3T7fP4kDaEILE09MdazM9rI8CeJKqo7lY
      Q+5X/wf/KFZmbWeB7+J46bruW05lbFKr1UK1Wo39LtlqH8Z/M9bLsiypJ2cYoup3HCcwscfG
      xjA1NYX19XV/d2P2Ihn6ZobjOxfWuLAdg2/8sCpKMbPxi1z5ecFuz07hr0qz3CTwYLSbOKfp
      AVdpEbbnYYsX0oX2u1S2EoYQBgEyRJHesm3MwLr6u0ikstjb2+sRckUwr8pWq+VnS2D3sZU6
      KgV7GPrdT2nHvZ3FkveD67poNBp+fAkf10sI8XOqsj4xB0vmbiOeGim2byQBMVEr71F3FeYB
      Ghe8HDPMbiCqX1kZ+bNfxZ99fJjn07Oa+O/LH0QSP9Dx56dcM8RQepf0ToBH1jSIMdgums6O
      YebMlZ6FRrbwsLFh/lSMh2bZnFOplNQdhTkuHtUWxCK2wlxX2CmZ7L64R6eyvmqahunpaayu
      rmJ6etoP8G80Gkin02i329HJcQdBXEKTaYoGkSlYPWK+0DA2aFhWSJRZWDlLC7PAh88BvesZ
      ShR4Md4/AeDRwz6rYnslInEbvQR4WFpIuwc4XJpXe7Jn2u22rw2qVCooFosBPbrneT4rcZRd
      mNXRbrdxcHAQeL/ZbNavk50/LLY5CpR2zpJjwTKFQgEbGxswDANjY2OglGJ7exvj4+N+WS/0
      mFSRmPlrYYgi9H7PHAXiJJoYH8dykeApi4EhCmSZfUSWjRCCbc8FtTqrWttrANQDuqwMJeHR
      Tz39IN1kWpJ6G46N5Zh9k6WuZHUyLU2z2QyoRSmlsVfiuBB3dla+oihSI1acgz5arZafykVV
      VSwsLIDSjmcqW/35sT3SBBhmpR1UFohSlfa7fxiEPU8pxd/73tv43/7kPRAjB0LkeYFkL2iC
      KJh3XWgKwd9xGvjFkx9iPTOLomehnWn5bAjTxriu4x9UwTJbMLwS4sqwpgz2KqPeAws2Yu3K
      5XJDy3Ai4hy6JxJ/WPZq/hlZWa7rBhIksGQNk5OTvjwxlCuErFFxMCzvGFerJE5IkY8fpI0y
      5HI5ENcEkJO6RoeBouPVSimFrqpYcF38qr2PFqVo5td9wY2tzAvmcyhmGwoo9pUEypMXYzQ8
      +Gec1TIK2WwnXQohBJVKxS8vlUr5WqaXgWFOrxSvM7eZfD4/fDzAMMQ1KOEnEolIjz5+QvGT
      RLw+Knieh7GMjjJFRwaI6ZxGaTDdILqEniIET8sZWO1DN2sKimt2E1e1Dq/8cwu4XdKhArDN
      wZNCDQMxmwITVpmKs1Kp+ItNJiM5QWeECIsTEWVCGcT373keMpmML4DH2gGiCucbEwbRz38Q
      iB2MMqSN0sgWhfmJHMp7nfr+1JiBZnRXSgDF5h7eskrBPgAQuVkmOyiE4HJzspNDhWt3zbbh
      oKO3nnRs/H6zY4R7FJFM1+Wuy/o+CCvJkhiI7gOUUv88AKZqLJfLSKfTPV6foxz/MJUuyzzC
      VJ6yJL/8othut5HP57G2toaDg4PO0U0jayV6d4VhdgkezDmLdSxqUKNSBY4SjUYNXqMjrLmZ
      SbjZQ4utRx1cor0uuJ9bQWGv3ynDZneCWJSiyrZtSnFAPZwV7q1TD9vnzmHqV74WaiQMYw15
      8AsIf3i37D7e1jM2NoZms+ln52AqR+YPNArwOxIrkyXk4lkidhwrE4LZKs/oh7mBnD592o8h
      kaZH51WJnuehUqn06MdlEDvcbwD62Q+YUMju4bPIyZ4NK09kifijhGTlRd3nQoOSKQAA3Nrz
      QD12KGGHGwplyHZ/e+65uNQ1FjWoh2kuTTilFM9mZ5D7xtdx4fTpyFw6vsajm9KSpQ6RjRPT
      9sRVbVNKAzmC2Dsrl8s+DTF5Igoy7RmzT6RSKf9YWGaPYIFQDOxEGkbYTG3LUreLYbiEdFL2
      9N0BWGBDoVDo24njAvPzFk/76IdBtVSxjGi8tkVYDJyQCRDVggPPgymUU+8aGAg6bFKnLQR8
      OPnG9BTO/Xe/Fznh+e+MsNlJkyJkambZWMjsOWIZnuchn89DURTs7+9Hsr88ofMnSlLaccUw
      DMNnueIE82iahkKhELBrhEWjpVIp+QTgV/+w9HIvEpZl9c0mMArwu5zs5a+ub2K94vnKY9Iu
      g9fJm+0q7tlBXTkBsKu3kTTa/kxo6i6eqh313HPXxXQzgwluYimEewdcOQweAHLpFakuP6xf
      /D2DaHCOysYS0glOZ9oj8TdCDvNDsd2CkI6Vmj0jq5upOVlkHX+d7ULME9SyrEDWah497tBx
      VocXDULC3XX7PRcX/IuW9ffzB0/wZ794CmiHOYK+Y+7hK/bu4T2WhYuSiZqY2MPVOXl43jUA
      H29YKJQOD+JIdOOPCYA110HCI6h6FNr8cxDDw1b+bbzzzjs9KdfDwPcpSj0adpQof02W0SMM
      nudhbGzM1x7V6/WAbMA+WUgjS3tZr9eRTCYjHebYsa08e0Vpx8JcqXTCSVVVRTqd9rOFy4Ly
      +3qDjlKNOCgIOczzMog/EHt2mPpEQZIQgs2tLfzJX98BUZMAuqZgItPuhJTbR9+GqcQAACAA
      SURBVOg1DAsepVBEGQoEC4qKjKriwPNg5BzMZVyQ2fnDOo9B2yJCJkSHKTzCymVJDNgzjE/P
      ZDJIpVKBchKJRKxwSlHrY5omqtXDAFTXdVGv1325QKwL6BObcRRj1yjAZjQbrONuR9gzc7Oz
      WBpTQal3+M/z4CjCah/qxBndlgvjJm54TTx1HDx1HHgAnjoOnnuuP6nShGBrfQrPmyoya/8v
      Hv7wX/ttlikfGGsg29HYM+K/sFVd1KUPo25mWhr+OUJIT4JdQkisTHCqqqJYLAbuE7NEsF0F
      OMxJxadVB2IEJw1KSPzKMIrJQCn1PRTj4ijEz1yD+foJIfj1r16BoqegJPP+PyK4H4TV2i+Y
      XVWA2fEmTqkqljUNr+oJLGsaZpXD4MkkIThr59CwFSzoZZxvfYCth5/09Ddq3HnWQ2QH4hBy
      mGo17iTgV3W2u4su0XGNl7J+siOe+PIJIYGJV6lUUC6X0Wq1ek+I6WdCHgSj2prZkTyO4/iH
      rx0n0ul0IFcpeyGnTy3i777Tws37z/GsqgJExS9yS1grPcQbTseS5YDic8Fh7LnnYHq3gA8P
      cgCAttHCN88HjWUAMDNZxe29AuYUFZNM3iHAxtQGUmqXvaIEqe6wJlUPVuUwA12/QwfDiCrO
      e5LtvoO8XyYI5/N5tNtt3+Euk8n47WLCar88pWEThGUjz2azqNfrfjAQ8yTg62GpOk3TjD4j
      7IsAFpaXy+V63GOB0Qvo9Xo9dAyuXjqPq5fO41/+X3+NXSsNmp2G0XiOS0r4pKQ2cEk9ZJVu
      N1XcftDRhriUgo6X4bYTMJpZXNUTKHke7tsWKDoGsdfGTeQ45cl/WU2j7QItfQqXvvedvv3p
      N04yFilKUI6jdRLvJ4Qgn8/DMAzUajWkUqlA5mfGkgyTlp2pd23b9v38GZsWZutg6JkAYRW+
      bC0QAD9yiXkK8u0aZRt5NRr7zhvEACCfcPB8bxNQNNgh7swM4utUPQVLZs7/29zK4aFj45ze
      mSRFRUFRSaBBPfxSqWG1oeOycfgiV/IOzo/ZuJ29FDvJlWwShI0dz6KICyK7xo9FlGzG7zyZ
      TAbVahXFYtHP2MDGuNVq+RFqccGrrGu1ms8pmKYppQX+fr5dfQ/K/iIQP4BI9kecDKPaxfhy
      +XEhegpqPg/qudiiDv6zXYeiyu0UE66YFisIg8hF5M10Gd87uw/XA9brGhKKB9sjML2urILo
      zMeD6O95opdNCN4uJKowB/E6ZWdETE5O+sesspjlfD4f2VaWZZxNera6M6MZc3mI8h2Ttims
      smGEnOMEewEyiCvbKNk4qRaFfSoq7Nw8PklkAaKBJHrPEfja5gcAjbZgi63dJiYuLHXC4lUF
      KJkKWo6K82M2dlodA7SanwttH9A7DuLKLpsgfA4f0Rgosw3wn4H+cLTD2w3S6XTAP59llRNV
      kzLwE4A9x86HYIeryOoPayNDYAIwHxG2NTEDxnG7vPYDG6Aofxfx71HLMlErKjHyoO0KqN0E
      0cVJIB98h3YOyAM61mACC5RQKApFPdHC+cThc2fyNu6WEigaHtYVCkIAOIeEJPORj7LpiAQi
      Y3PC1Kv8WIRB3CUYVFX1V39KKRqNhi8MRwnxjO1icQiNRiPQFk3TIs+gi1o8AxOAJS7iwc78
      fdmwLGugJLmjZINYmZHlJrJw9+6DZKehpifgtcuA56HsOnhGD01mux5FynVR9TxMKypmVBWX
      uqz80/wOrp2q4LN9A8/qHffiUxkTGb3jP3rnIIGW0yV281AhINPfR/U/qh9R/HPY77J6RSdC
      lsGNz91pmiaSyWRfnT+blO12G61Wyz8kj3msxmXz+F3Lb1ffJ3E8K2oU2IAlk0lYlgVVVYc6
      7X2U7QkMnuvA9S3T3XExK1CLywAovOYBqN2Akp3Bnfmv4I4/dJ0vPwfguTZ+b+s9aX2vjptw
      PeBRNYFWgoISBQXDw7mCjV/ud2QNJZn32xMXfB94q2w/Ioqqg39WVgZ7lnl0uq6Ldrvtv9e4
      xzOx1OusPOb52Ww2pXELYe0R74utBXoRE4AQ4vuTq6qKR48eYWxszJ/piUQCBwcHSCaTqFar
      WFhYiFzJRtnmgE86PChUcIQwsiA62z0JqFkFCRGMAYBw5w14tBMi49Euf0+AttfJErfTTsCj
      FGfzNigFCAFuH+jAmYWB+yCugH5bYqge46z8YeVomuZzFvV63XdrYYcfxmm3GBlo2zZUVfVV
      n+JOzbdb7GvAWhxWIbuZv3bck4Dpbpmqs1gsYm9vD5qmoVKpIJ/vrHrpdNoPeGYpAF8E/P6r
      CZBkuFxE9BSUwiKS27fRKiyCJIOu5F7zANQ59G36341pNDOdY17/cnUT38w8QE5p4MKYBV0B
      LPdw7C+Pd3jdG7/4A2xr/zNmzgonzUSAn8QiWxPG9/P9lqmEWbmyZxjvztwdbNv2eXV2bFIc
      mqrX6wEbEAC/rDDWNK5qPDIghr/2olggPiOArutYWFiAaZqYmppCo9FANptFu91GsVjsuzUf
      F6jdglvbAwAkmvv4jrmPw70B+Kupa1BSY3jDqePi3qf4d7nTqBSCiWqV9AT+BBdAKOClilC6
      GiSv3UBBN3GpcCjU3SsbuDoRFPLKz3Mo/tkPsPZbfxszy8swDCNUu8ODJ0xKKcrlMmq1GgqF
      gp81IZVK+Tw6I1zmmszO/5I5loVB07SehLpxeH9AvvqLkAW7yFZ/dk+gbbIKvwhgCVaXl5fR
      brdRrVaRy3UMSOw08X5JWo8LRE9BzXV2I9W18KZzmMmTUor1vduY1BJYpiamCfD7tSe4Ud/E
      R9kFNPILHT4GFMgv9Jw7mWnswarm8clWHiXPxZiiYst1cHViD02H4N5OGm41i3NIYdx10fj3
      P8A69eBeu4bzv/kboQafQPuFxS2fz6NaraJQKKDZbKJer2NiYgLtdhumafqhhUxlybLIxfHP
      IoT4PD8/OQfx7Ypy0Wd9kWnAhrIDyHSobOsLU6MdByqVCiYnJ/Ho0SM0m00kEgnfkNJsNrGw
      sICNjQ2cPXs2NB74RexajmAJJoTgktvGK57rU7ZOCL4GC4WDeziob2CTAgVVA4jiEz9FJ9Bl
      ya5jRelMdOrYOKPpGPdcfPhZEgcuxRViIKeqvhtjhhCsOi7MW7fwIJnE1Buv+6xiGHiWZnx8
      HIQQFItFAIfp0gkh/sF2DDwnwFbmKLBnGc/P3gtbwOIizkkvvKwqY9P4+xikQjBP5DLhgt9C
      j5PAdF33w+k0TQtk+M3n836C1TD042vDMGg+HU+S2zMsMIAQ4BuwsOU6aLgUU4qKAveiDjyv
      mzxX7fahc31MUTGGFDaI22M0e2Bb0EBwSdeBGx/h+Yc3sP/G61j+tUM/oSjtjEwjJJMPZME3
      Ybx/WH3s2UGi+2QTTbbAidoopkHkJ4WsbaFaoDDrKrseFmEzKrAViYeqqgGXCD4z8KiQSqVi
      Ha7G4PXxBQKATdeFRSms7tjNdZ3AVh0bFjoTAQDKnofTfSLfxNHWiYJlzqV4lhC0bt7C5tkz
      WFheDtzLL2AiEY3absLXeRS22jRNPx/pILYOMatF2GQdOjNcX8PQMYA/+IxF+2cymYB24aiI
      426dMKvIlzo+PrZZw13bOjy0AsC+6+IDRYelJgBQONTDtzUV4npzStNxa2wDDTuFRCOLWq6K
      3Yk61g7SyFXGcOB5aNmdbZqAYN/zUAagd1Wotm6jqTmwFQUZ18A8SWDHdbDvemh+/AkWV1YC
      KyAgt5qHsYyig5nIPrBnxOeSyaQ0Tw+7X3RRDoPneX6K9jADHb8I8+y6uDCGqmijGkBIuPsB
      q/BlgVIaCIAImwCDTtI4oZeX7Tq+31wD0Fndc4ra4cu7uKgDf5iax8b4OQDAWOkJirVnUCiF
      IdgPioaDa4v7qNsHmHYJxpMenJaHxWaHTVh1HcwpCnSiBL4DwNrsFr422en3zx4VUavnUPco
      rieScB4+wv0//COc+nu/62trZO8rbAdgMkDYbshPgFwuB9M0fYNUOp32V26xDk3TeqLAwspv
      tVp9DaBxtF5RdcU+JC+s8JcFRqgslUYymZSmTTl220XIdb7WcnEFf1FcgVd7jn9RvR+471n3
      zqxOAX34BeXrZ0sASvh8Iw+UktAIwcrWc2z8yb9B4te/i7mu0TBsEogsLi8byMDbFGq1mv88
      U2/yfDtPpJlMJlaCA0qpP/nEtrH6+XvDfpM9y/+miBdkK0G/hr5sMJWpaFZ/EdqqMNCXuDjw
      mN/dQ+6P/wR3//CPInloNlb8ai1LicMmRtTOKpM1WJlxToXh740SquOUIbuXCcmFQiFcCzQq
      wo5rkRsVjvNsWgabeqi5HY1MqxtXytdKCOC6DjxHSInoOqh4XmB3MF2gahF43DEyDYeg0l19
      G5Si6lGoxEODUjQ9DxrprtLd+9sO4NLOrtP2gJpELTy9uYl7776LS9/6ln+t09beBY9di6t+
      5MtgC5HMeDXou2EKDzEQfxDIiJ+xbaqqhssAMoFoEI2LzJ4wKsgm6YucaDZwePo7IXhOPUx2
      /6SdhuFsdRXfbm4FnnvuOWgKRJDense/rMygkuN8e1TASD7HP2xtYqzjKA1Qirbnoa5q6Jyf
      TdHcnMaHWxR7NsFpraMSNihQgwdQ4Klr43T3cD5QwPn5e2hev+6fGN+PIHnf/TAbkGx1Zhno
      eAyzE/d7Jk6Oo7DfWNmhmeH477JVop8bgmwLHBVkZeq6/sI8RtNEwUKXj617Hioe/L8ZGp6H
      U2qQwDyqYE7tHXJdT0FJBc/LUs0K5qzgvSYV6+n87hELi5IDMqqeh3muvjL1YNk2koILQ9Ru
      MMz7kx2uN2hZlFJfzuPZMb6tUcQfBf73WHuSrOFsFoVtocdF/GGglMbmL0daL9CrnB+mjGME
      eycNCt+dJFB/n3c1DFspkx0GKcc0TZ/1GcSyH8V1sFxJLKjGsqzB8gKJeRij+McXjUGCI0aO
      l68HCAU/HnOKgvWnTwPX4+zkvNamH/sTViYhJLbzHIBQTVHYO2a7RD9WjX2yLHJDLZn84Ikz
      btRCdFT9fL3AYW6Y46qbEIJnz55BvXAeW/OdmFyXAi4onoMEdgOdUjwnxPcS7TYUW37bD9v4
      pmLA1oLOYYqzjC13FoS7k/rPd8vofiQoxZZvkT4sV/cothRurChAJQJy1MLBDFcMLE15FMLG
      P24WC3avGOooy10a1XaZjCDSbKwJwLM1/fAizo4KU4ux5FnHlUCL9f/8G2+MtNyVEZYVxc5Q
      2nF/5v8Wv0dNhEQiEctQKKMVFug0CAzDCEyAKEOeCMZysfjjUIG4XyOitpSXxe4wUzefBImB
      +Y2wjo8aURmLvwjot5rruu4bDHmjVz8ZgFcyiOwGj7ByBsn5w+oIO3ZJtFmEge8ff42nnYGm
      ZNyKXzbYizqOMwWazWZAPfhFhGjQ4t9XNptFq9XqIVQWYyt7tyztiOh7I0MYizJMentVVf1Y
      Yp72RDqsVqtoNpvY3Nz0s8Tt7+/Dtm3fJYNFEHqeh3a7fTg+lGttvV7vaQQ7hOCLTvQyHPWo
      0LAyWTzq31TYtg1d131CFd8vG7M4R5LGBbPqDgrG2kaBpfIxTdM/WZRxBsyNns9GwdKyA8IE
      OMEJvmw4fr+BE5zgC4yTCXCCLzVOJsAJvtQ4mQAn+FIjMAE+ufFT3HnQiXT6wR/+MeoA/o9/
      /QfwAHx2+07nJurgF+/+FDc+/Ahmf29Z7K6uQ5Yb+bMbv8D7N27gJz//IFZD3/vFz4IX2iWs
      7tYBeNjd3Y9VxglOICJgCW7ZCszSFpy6jlpTgQNgrpjAezfvAWbHAXjj9g1MXHwb56eSqO2u
      44MHG0gYSYwldaxcfhW/vHULOiw4VIcNDbVHd6HtXkABLi68dh33P/sYr7/xBqq1Fq5/5zv4
      4Mc/xubqQ6w+P4CRzgONA1AtAWLkYFAHr169jFs3b3Ua6Jr46OZnaDoUZ8ds/PBuA7/zvW9g
      Z3cTpZ01lBsmitOL2Hl2F8lUCtnps7i4PCv2+QQn8NHDAqU1go/ubODKpdMAgOz0MszdR2i7
      nFWtq8799MFTfONXvgLbrKFercIDUCqXUTcdvPHmm3CtGubmT+O162/gyqVlvP/zn6Ha6mpd
      XRO3btzA1PwpPHm2ja++8w6a5QOYDsGb199CrbzrH3lZLnXM92ajjIbl4tnqU8zPzeH8K1dR
      zKVQrVaxV6rjnXe+gt31J1ATKVx/5zpKWxvHPHwn+JuOwATI5/N49dWzKDdsjBXy0LrXvvWt
      r2FzYwcAsHjlbezeeR83btzExbPLePfn70NP5rEwV8TNDz6C5RI/MVM+n8fc8jQ++8VH8JKT
      qGw8wtU3X+v8NjGD62+9hUvnV3Dm9Ax+8cEHSI+Nw2xWcePDDzAxtYBiIYWPbt4ESaSQz+fh
      2hZcDxgfHwcyk2htfo5SrY18Po/JYhYffPABphZXuvUryOdfflr3E3yx8cIMYY3KPj57sIav
      vvV65H13PruNV69efhFNOsEJTizBJ/hy40QNeoIvNQJaIJkz3AkOQUgnVXhU6CXzXOyX0nsU
      bYny+w+DpmmBtnmeB8tu+zEURiKFRCIhdZXmneNeRNzHi0DgTfKHjwG9gxzXFXrQeOC4vt1h
      ZfLtPM60KIQQ7O7uYnJyMvQedvxnWFtlhMMTlhh8FDUu7MghcWxkY8XKFgNEms0mtnafYXyi
      2AkrdZJYWVnx87Ayb0zP8/xP27aHDjhKJBKwLKtvgBU/AcX8/wyyzCNRsceycenJDCc+HCcG
      VIZR39svi8EggdMiBnm2n1uvuPKLLynKjVqMt46zKLD7WDiojCDCytZ13Y9tYEEv+wclACv+
      /c1m0/9u2/aRM2+oqopsNivNHMHazH/y/RCzQ4jhjXwyBjE0V7yXITABarVarGRIX3SEdXYU
      KJVKX5jtv222YZmdkEHmEz9InAKlFJVKBZlCJ1aXEIK22QzkW2VHE8XdWfvFYLAEx1H3yDJK
      8Iha+MTdU5YZgo9zDkwAdobr33Ts7u5iamrqWMqen58f6P6j7Ez98MmntzA+le3WEwxqWV/b
      xKml6IP0Hj9ZxfKZU2i3237gExTqR0yxTxZGCAg5dRQlELiuaRoMw4hML98vizcf7ZVKpdBq
      tfwDsvmQTH617/T/MFotjF0mpGOj0jQNpmnCNM3gBGBnQrEC+zVyVLl/ZNH+YvJTVi+/coQl
      SPU8z9/aX2QkWxjvzdox6OLSj+c1Eik0my2kUkn/fga3GxsdhZnpSTx99AyVShVXXnsVAJDJ
      pFEul/0jjGQZONi1VCoFXdf9VZ3FYzNiFY8tEsuKkgMYu8POqObjmHl6YAK7bds9Oz9/H6Mx
      TdP8Q7eTyWSvGjRO3K8YnDwKyGI9AfQIlOJvfKLWqLwwYf3g/42yDwwsl9Iwwnm/PkxNTeFg
      vyT9zXWj2TRKKVKpJJaXl5DJdA/o8zy4ruufyMOOpeL7JSYgIOTwKCX2jEwDNkgAPfvNcRz/
      gHRWlwh2nnRUCvhUKoVisQhN01CtVlGv13FwcDB8XiC+8UclHJmQLSN6GY8ntmXQCSkr56ha
      JL6dsoPbjlKuWEYmkwH15O2Nw2M/ebLaIXru3vGJIp6s3odKDNi2jUK+gHPnzvsaIDZJAPjX
      mMaIxeWKQuiwigm26oelYmHviz+LQAZ2JhlTYyeTSUxOToKQkBNi4qyIo9Jxx+WR+YGMq0Lr
      h7DJNOwLE5+TsXaDgrVR1iZCCKgXYguIVziWz54OXPI8DxNTRRBC8PjhU6QzGj66+T5c10Mq
      lcbc7AKy2ayfHODWrY/guDYUz0VatbBy+WsAOpOD8exR71jXdaiqGtAw8e9Z7C9fHoDAGQIy
      lpHJKSxzYCqVQjKZ9G05PRPgZWg4RP2tSJiy3UAm/bN7ByVgvrxhnpexUeKudRwghGBtfRWm
      3exmjPYbhJ2dPVDX63rukkD6UqJ02ra3u49UOomp6aBdw++P5yGbyyDXdSokhGB17QkuvXIF
      29vbePrsIc6c65x/vHP/Fq4V13Dvp7fQKLyO7OQpTM/M9RV6mazAq1fDJkyU2lSkGZZTiNky
      bNtGJpPxdyqGF59NNgKyc536dVqUCYYFX1fYiYL92iuWx38eBWFsmed5OH36FBaX5np+u3Dx
      nPQZSinq5RrGxwrA2TO4++BRzwSQPcOQziZw5/OPMVbM48y5Uz1nj12cdLFTfR8blTSs4oR/
      +HYUmA2Dr09897LVX1wM2fFLjOUpl8t+WpR0Oi3NexSYAHzFo+CHh4UoF8jkDb7zcVaKKLAy
      ZHVFEXAUK3actgi+fssa3DDFT1zXddGoN7jdo/MfBSB2jVKKTCYdEJr9Mumh3Dad19De/yG2
      1v8ay9/9Z8hms76swJJT8WB5QFlGaJ7YZUYtEYy/T6fTyGQyIORQhcsE+rB3EckCvYiXKEM/
      /l5mGu83IeL0o59sEff+FzVmlFIYicFTDjIio5Ti9MI86vXm4e/cF0UZoB80qBhZLKooZii2
      t7ew++DnmPQ2sOfk8Ppv/NMeKzATYNl74nO79luA2KdM/ZzNZkFp57C97e1tTE5O+mwQQ88O
      8EUEI27Z6sAQJWzGXUmidpOwFxEmSL+I3ZMQMpTlnh+rXC6LXE4eOFSq1QYptedK1lDw4MEP
      kfZaOD+jYqJew813/wKvvPlNpNNpWJbl2w4cx4FhGCiVS9ja2sCVy9d8KzSD+P7YJxsDPjuc
      pmnY3e1EFeq6junpaWxvbwMAlpaWkEgkOgJyZJdeMiskQqaLBnoJOswZjRG4rut+OXwaPb4O
      vqx+q1C/iSUD2/aPkmeUUorSQQm2HeSxG40mMtk0JxizdhEAFIamA4KhXLRhdMZkgLaEtO/N
      qTIopfA8imJGwdfJHfyXv3iAzPLX8OYb1/37dF3Hx5/cRMusYXy8iI2NDSwuLnafPTQmstye
      4oLHWB2g49W8traG8fHxgGMfO/b18ePHGBsbw+Tk5NHtAKPQb7PywgiJn/EylkcEfz4U2+4c
      x4GqqtB1PaDLZkIaL8zJZBBeTujXlzjg04W7rutbMgfFwsIiZmaCxys9evQUK4J6k8fO1k7P
      NXGRo5T2CgERYD0X34nIUlNKMTVmoEls/PTdH2Nx4RRM00SldoD5hSk8e1ZDvpDD+upTbGw9
      g+dRJBI6PI/CdW1oqoE333jLf3+srlQqBcdxsLGxAc/zsLKyAqDjesGMZJqmIZ/PI5VKYX9/
      Hw8fPuz1BpXpU0UCkKn8hgFbjRVF8Wd1GPqt+gzii3QcB7quI5VKwXVd31DD0Gq1YBhGQBXH
      T4JBBeO4YOcbs8mayWSGiseYmJhGvV5CNpvxr+m65ifAlWFnbx+1Roe9SCUMnFnpqDLFI4kG
      mY6K0nHziDOJKQVmZqfQqDfgoYl0Tke2MO3X7XkeFpZmpM+apoVbH38Ez/Og6xqMRAqFwpif
      9n12djageTIMI8DzE9Jxn5iZmelYh2WViIQuEsCoZAVd15HNZgMmbxkGyfLMu0awdvZz42Wn
      nuTzeT+lNo8wrcRR4DhOwHo5rBNisVjE/fvrgQmgaRoePXqKhNGbHn53ew/jE+NYOXsa9Vod
      1A76VgVkCsl7dhwHzUbHRZpwbh6212u0ki2WAEDQIfJU+vBUnLg0lkjomJkvwrEdNBs2Lr96
      BZqmodFoIJ1Oo9lsotlsIp/P+4urDIqidAxi0l+5ToiNkakihwHbksStLOr+qHtE49ggk5TJ
      AWH+JqMg+H5tGtYNvSPPBF+jYRiglGJmdsp3agOAjfUtFItjSCY7mqNsLovP79zHxHiQhWI4
      2C/hyaNnXCeAarmKU4vzcDzOjwpAtdYGxg9v5eVHxrvz5QwL07TQqLcxO72Iy6+c9QmcrfqU
      UuTz+UjVJ4/AyLFoJqD3hRFCAivEsIIx24LY9s+2/VQq1SP19ysnbGKKhNYvzz2lnTzy7JAI
      5oMiq7MfVldXMTEx4VscXddFpVLxhTCeIEeFiYlpNBpVXz8/MVFEKpXE7Tv3fSsuALiWg8uX
      L+LZ6ro/flGHiExPTODi2ZVYbbBruwC2e67LxjxqFGVrhGXZKB1UkM0UMDU5izeuLkvfRSKR
      QLFYHIg2AxOAeQKyRrOQO1YZv0rJ/MN5sMnEJHDGgjBp3fM81Go1n1jDXoS4jYZtq+IzPMLk
      B3YfM9dbloVMJuOH7UUhTBul6zq2trZQKBR8N2HmsttsNo9lAszOzuHjj9f8CQAA6XQKb19/
      TXq/bR+yXjSK0x9gpXbVdP+bYuGwPbVqHQoxMFGcwrVX3+57UMswHEkPC8QTeZxtmZ/h/Llc
      hmH4LEW73fZ5XMZqiOq/MINSz/YZAzLClO0QomaHOWZRSv3Jz8DOuPJ5XtvuOcCNUorJyUnk
      cjl/x2QWTk3Tji3YiFIKw8j0v7ELXde48RiN0U7R4p8AGQXWrEqpgXNnLmFycvJY1fCx1aAi
      OyQjWNd1/UPkms1mgJ1ixMRUfiLYZOlXTxw+X7YDiKu+bLUghKBWqyGRSCCZTAYC3PkJLArJ
      rHzLsqBpmm+OZ6dWDnI86LBwHBf1+mEkVu+4AQAFpUC7fdj+qAVzkNXUC/FKlSLiVse20azZ
      +MrbXz/26ERK6WB2AJ5o+MERCYzXq8edvbJJEcbq8K4Q/SCzHYjtZ2AHwbXbbbTbbX8y89FO
      sudY+dVqFZZlYXJyEpZloVqt+n4w1WoVMzMzME0TY2NyofNIIEClXkeQujptXV/fxOLSvL/W
      O9zOFmXhrtXq2NnZQ7PdRtJIYHZmOrR6So/uRdxutbEwt4y3rr9zLO4kruui3W4HDJ+xJ0A/
      3osVyBP/URHGFoX9xiAaX8LK6Fcfc6gSVcKi9Zf9zibx7u4uCCFoNBoBLcXe3h4opccyATRV
      w/h0QfpbrVbHzMyU317TDMo3j56t+oYvCmBv9wDT05M4tbyIdDqNyZlJzmpd7AAAHKJJREFU
      PHzwGDPTU7HHLgoyuaPdNpHLTODcaxdGTvyUdvyB6vW6r3rOZDIda3zUQ0CvejEM7D6e7TlK
      R6JYnH4TTEwBchQDlmwXEq8xY9bCwkKPwZDdz2QC1v5RGtUAIJfLwbYt6Ppgxn1VVbG0NB8c
      MxAsLy/57aOUYunUIlbXN2FbNs6dXe4p56h8uueoOHfueIjfNE1UKhV/zFOpFDKZDFRV7Z8a
      UbQOhlXSY+w4YkfC6hvUCHccW6kIRuBsrJirBR+zzIR/hwtWH5VBEehodvopLcLYyd7rnf7w
      /vOJhN5ho0I8RJklOBaE6urVNl5/7c2RvyvP89BsNlGpVAB0aCGXy2FsbMyPdQ4sF+z8W8a7
      qqoK0zR9jU6UqhL44niTygJrjhOiPNQPo179gc4J9ndv30Y2m+oQGOk4vlXrbSiqiicPn/r3
      ttsmnnYNXAcHJczNToOXNyntPTuYwQmZZIO4TrMRchwXzbqJ629+JTLd5DBwHMeXyYDOWCeT
      SV9BwRCotVwu+zr7er3up0rUdR3NZhNnzpwJZT+GVVkeFTLBNCq7nXhNJMawVZKPEhP72K/P
      o/ahksEwDCwvTGF6shi4/nB1B6eWO45xsr5tJI0e6xPbucK0cFtb2wDphll2PyuVGrwkhRKr
      TxTttomEmsE7b1+PZJ8opb59Kg7YblupVHxtHVNds+wVPAKlFotFX3gjhPipJCzL8vO/dPo8
      Go/IUSBMMxMlQ4TJCFEYRb+Oi/hZebJVuH8OT9IjlPICvwhKKVL5TPAeCqgJDZ4HxOGELMvG
      WHoc5yU8v8jGhb1fGSilaDQasCyrR1XNQiLFcNfABGB+8mNjYwEfHV3Xpbp0GV7kBAjT8PCa
      GdnvccqR/c6rUOOye2H2hlGP09jYGJ48tDA5HrxOSB/7DelsAIMsBLzFmaEW05N1q5XG8tt/
      B4srFwLX+ZXbcRxks1nfnSTKHsDLU7VarScrHRtr5i3KKyAMw5BHhMlWgOPgW8WGDitDiKvE
      IG2UCe9hxreoHSXKz+hFLAqEECjo5c/5fBDSBQGd+IFEQu9wQpzRzzRNrK5udI1lnXL29g5w
      9nw8/yARz+xFzH71HyCXy/nXmGG00WjAcTqCPBO+KZUHY3meB8uyfLsNAD+9Y0//uto30zTR
      aDQCY9BoNORB8eIKJTMkjRrDEP8wq3ncdgwi2EfJRbxqmK/jOMZRk7gjtNttPHu2dli38OWg
      VMb5i2f99IrPnqxhpRsfUKnUsDSVwxjnUHfXC/eR+mH5FaiMDePGbcJ8iKQGnPneP+wk86Kd
      EMh2u91DyMChD7+qqtJAnWazGfAjiwJjeVqtlnRh6wmIifp+nBNgWAxqmJHtFiKx91P7xsWL
      1orV6k2sbwajvajn4fyp8KNiNxJBNaiYe9V1o50CGQgIzpw7D03rZVcefVLGqeXX0Ww2Ydt2
      wLIO9MpGzFlStNqzSVMbKFY52qctVLQ+CrEfN7sUp/5+dosozdAw2iz24vrlwOHbINY7CGQy
      mZEdQ2oy79+z9nQVl0PyA/F1y1hdAFBVBa4dHIfolKPyMS8uXUNx5rTvRxUmT/LsCnOgTKVS
      vlJGRshiBolBF50jK19Fa6f4fVTlD2LR7Sekx2lbWObpqHJFLRnPUo6SDRIJiJWTTmVgGIeB
      IKqq9bUMK4SEqjxlRjKla0CSCdNhDnFMyyRbVMSFgFLqh8c6joNareZ/ptNpJJPJwDO6rocG
      MsXBUBMgSkXGOjIqtaFsArC/XxTiyANhq0+/Z0bVNgA4e/YcPrtzEwuLs33r9p9XDs8z8zwv
      sIarqgpbJGoSXu7DR08DE47ZCQwj3nnN/ILB16FpGorFIkqlEpLJZOAZZugalt0ceWrE4z6j
      i02KKOKJk7IwDni/pn5wXReGYUhTgx+XLCC2S9M0FHLjcBwXmqbGCmpXFRWPn6xhL3vgt/PW
      rc8wPl6E6zrI6YeeuoqiwO3Gb7OgId474MyZU37cBI/9/Xgq0n47bSqVQq1Wg6ZpSKVSvpHs
      KBh4AoRZM6OIZNhVUKY/71ceIJ+Ew+bnjysQD7qahx0AErddYfdmM3mUa9sYK8o9Q0WoqoL5
      hTlMTBT9Mp89XcPc7BQ2NrYwMV4IxPXW6008fboGhRAQouDsuWXWKsSZ54No10Qw93TbtlGt
      Vn22s1AoDK1GH2oHGETn3o+ARCITX27YJBgUw/LccQc2kUhEZp6QCZvHITMVCgVs7631v7EL
      VVVA4PmuBryRiFKK1Y2dbjqtDvREApdffQUAcPv2PTx+/AyUUpQOypgcL0pqAIDg+zzqjqhp
      GgqFgl9etVr1285cHmKXNWjlg76oOFbWKP45SlsThjBhi+cxw9oiEmZcMMdB1r4wNkgk+lFr
      zJLJpB/zSynFg7Xn/m+WZcG1nIAl1zQtpPO5QBmsLefOnenpw4OHT3y2Q9c1rJzp2Aw2U88R
      Bs87ZFPCOAj2WxgYYTNrLv8Mc3AjhPhOcOz4pn7lj1wG4DsYl+2QDcgg/LeIQes9yrbMYFlW
      IDXHi6gzDJsbW7AsC3v7JZz/lbf8681GE81qE/Nzh0mnTNPEzv5B4HklYpGwLLuroXFRrx3y
      9tVKDdOTE4F7y+UqKpUGLl68HMpO9iNQ/rmwYCu+DFVVkc/n0Wq1/BgAtpsVi8We50NPiBEL
      HhRxn5WpwUTDTD+tEnuGEX6j0ZDmB+2nRQqTZ2TsimyM+InHZ9NgbZO9fH6x8DwvcKoM/10k
      FF69ygfaKIqCqelJLJ851dMPPmnB4TUtcMpMv7E2Eh1r897ePhZPHZ5CSUB8QnNdDzs7Bxgb
      m8S1axdDy+LHrbNz9SYl48eJnfIiY4vFfqVSqZ5zw/b396Gqqh/zDURMgEEImCc+1qC4uvZ+
      4Yth7RHVo/zvmUwm4G/yIpFKpfqmeRQxiNo4Sl4COqkeM9kOi6OoSmBsVE02ARR44sTsujO0
      2yaePVsLqB5LpU5wiUIINO0wYIYl2wKAvb0KLl26Frna8/1xHAf1ej30d1n/w2RFmazFUCwW
      /UnG7otMj95vJ+i3pckaxCOOtTWqbva7qDt+mQdZt9vtQB6kOBhkp5W9XPa867q4//AuZhc6
      J74oRMHTx6tQ1O7iRIHSQRmWY4PPHN14cgOlg0N1ZtrzcFD6GKAUmp3E4plf8/X7anehU1QV
      Tx6vIp1JgQDY2d7r7noKTp8+37m3m4w4bn9E8Efd9lMtx2Up2Ykx5XK5k7MqrFAZa8JXFBej
      kPrD2JWwNr2MdO4soRjLPh0Xw2qmgOBq2Gw2cf/RHczOH+Y9JwrB4tJ8QFevKAqWTi8GymtX
      b+LKkpxQXc/Fe8+3/UO3O+PescAuzc9hunu8UlIhOHfmFDZ2apiYmAAhHbcGPhHY2pMH2C01
      ceX115DovqJarYZsNiulE34CMHaPh4w1jKN0YezRwcGBfALw2wulQW9GcdsZlfZiUPTT5rxo
      sHOo2KEPcTHo6i/udgyVSgUHB/toNhu+1rFaqaGQzwUmgMxw5NLwNigEsCpbeOp5AAX29g/Q
      ti202yamJw6F3r2DMubnpmG2W9jZ2cbsbO+5ZUsr59GyPsfu5jq2nm9hbm4OjtvGxx9+hJmV
      szi/vNjzDBCSXjEGjfajA8dx5OnR+UJGsYIPi0En2FH0/KPQyrRaLd9XJY6FcpjdlP/O2kop
      xdzcHMqVA0xMH8o+5XKl5wwxGTF5EdnhCCGY1XYxP9vdWeY6KV12DmzUuUCVt96+jkcPHuDi
      uWVs7+7AGp8ITQNZ21uDaekoNW2oXgPTc8vw7KZ0J4+zmw6rWUulUtFpUcK0ImLFDC9rNzgK
      eCIaRVntdts/ieS4YBgGdF33DUAMp5aW8fDx58iPZZDJpJFIJLC6uY5qpQo9oQMUqNebWFvb
      ANDR3JhtE8TK4bM9FQQEBbWOpWKQhbw4Bfzo0/u4dH4Z6VRnN1EUBbuPP4Wzm+r6BxFQpeOJ
      OjNVxNrqE1y4+GpP2y9cfCVWH8VVXfY7/yl+7weW+jJyAoRtuVEVvahJIG55Mo3AiwZLBCxi
      kPMN4oD3pQcOF6tMJoPXrl7HxsYG6vUqstkMTq8soVKqYm6+o/tf4lSXALD66BnOvf1r/t93
      bvwEu+3OrpFSLMxlXWyWHVyeT6G6v4Y9pYCpiQIAioveL7FEfWkaf2l+C/V6A+VqA4srvcR/
      FMhWd1ETOEhZLCYh9IQYWWX9XmSYimpYAggr74u687Bs0GGTcVTsJKuHtxPwO/bi4iL+/D/9
      e0xMjmN6ZjKSHRNdmI2pFYx1heSDgxJ+8ugufuNiZ/wn8kDbamFru4SHz5s4JXRF3/kQCe8W
      3NR1iTsCxScffYDx+dPw6mU83WnglfNL0KgFJIuobK9h/swFJLVwBYY4fjIORSYsi2Wwf9PT
      0707QNgEkP0dhlGyFawc1skwN4eoCfKiERbELRrTRjFx2fsS+eDpmSksLM5hZ3sHBwel8EAd
      IcKFb9P4eBHN/TEQcshqJRMqarUWKu/ewG1Q2K+P4+rpDhlNZYDlcYJ6l6yC/WvCSM1haW4M
      9z+vYHlhEaVyCRtPHiIzOQelVUV6YgmzExn/2TAC53+XqcOB+Cr2ngkg8v7DCohh94oqLbET
      suf6JcMdVkV7HOg5ZoiDjG0ZBcLGTdNUzC/MYWZ2BmvP1rFy5nTPPU/uP+kpK9Bm4f5G28GT
      dz9DlnbYpDufVLBZy+N0ooVaksCd0wBpqvQMVPIYa1s6JiansLm1ibn5WRjEBTWyaO4DRiK4
      cLC28O+fp0kZa96P7vhyewxhLKU5Y3f4rVV0LZCxJeIKJwO/O8h49zh6XNlqzw+OZVnI5/Nh
      RRwrmJ+6zBYh21FHOWnDFgJVVTC/OIf1tU6W6ABCqq9UqqhWatjdr+CB1+gGtwDre00Y9cOY
      3LRnoXFg4sxZG3epB1UhIJxrBjsUm1KKuaUV/7mVlWUAQHKu40yH8XEATuCgQNG7IOp7lIwq
      Ej//fGACMN8JGfpt3/zs47+zTogEESXEijwtX3ecXWjQoOlRghAS++zfUU2AOOOTSOiwbAs3
      PvwYb7x5FaWDMhzHRalUwcbGln/f3t4BiKKgXCrh6pVLON0Vmh/cf4h3loAm9vG5lgJRCLJW
      ExooXMvGvVYKdb17UqTT9tsjCuwH+wcYnxCSF8UYjyh2PC5nIu4k2Wx2+PMB+t0nygGDvOxR
      8cfHDdZGwzBQr9f9lB882CEZYRjlJODrrlVr2N3d7/zWvWZbDt548yo2N56jVq1heeUUitde
      4eonGJvq+PRbltwp7eziBBb/yd/H+k4Fv/zT/6+7K21OIznDzxzAiOEQhyQOgy/J556Js9na
      SnYrValKKn9hf2Y+pFKVfEilsoezW/HaXskStmRJWAhL4j7mADofhh43Qw8MBmQnzxeB6Gum
      3+5++z3/itDAQDDixwdZET9rloiUyEH72ZwoHb/E7v5L3MqnUDxvQtAbSF27hbVYZET06eTp
      eZiF3WHrEEJsh/uZMsRMGoxzApyJ6S6TT3eeIMuAIAi2kZggCCgWi8jlcqhWq7Z9erlchs/n
      QzAYXE5SDAdGEoRLMvysHQ4Brt/IQ5IkJJJx1Gp1boQ3wDKR7vf6w88Gms0Wmq02LuoiEtEg
      ZEkE6V7gT19/jp0XZXymWr4AktbBT/smBnfd2c+AGkFSAA6e72CvpOFuVsXRyRmSq5YCjyfl
      ccM0ltltAVGRsSiKi/UHmDQg1mzXKSKdBh5PN42fXvYCIGTUPj0SiaBYLMLn88EwDEiSZOWh
      XXDU42mwn1mwjOEgALIkQRBF9PuDYeabAO7dv4Nv/vVvbN26gbW1UTv+QuEAAoBmq43Dw2Ns
      pDeQu5bD82od28cnuBIycT+rQPFLiIcDEIemFHdWDQAGvn36Z5QjMWxwzCE2t4ZhWjY38cDx
      GztnNKk5NaajiQbZZ6R3UzYpuJP15r0bURTt5Ogzz44X+3xnp3RQs9adZUy0L2D5xO/sFwDy
      eesyR02hWWkFIe6mEcsap2n20NU0AATFoxKy2TfBsVbUFYTDIaytJxAI+PHy4AhXchl7sSoB
      P9KZFBrNFlLpDcSGeYQNrYur/RbyCT8IBGhGH4FQCKdlEWnVehdGH+ikP4ferWN7u4JIJIJM
      JjtyOjUaDdulkULvNFDtDLAej0AURZRKJUiShEAgANM0MRgM7BNX13U7aly73bYFHpqmYWNj
      YyJrRAixDRabzeZkMShbkf42rZybXNp5F5jHYpP3gDxeb9Lvi0SlUkGn00EqlUK/37e9wwDL
      OWcZqVGnIRINY33DstTstLrIZN4sgP39Q7SaLWQyKahqEKFQCK+KJ2g2W7h9ZxMQrAC4Thap
      1dFB1I/wWrMuy2thP7o9HdFOAU1TxKuVewhk7mIzkxrm7LV28oP958hl0nj69BFWr3wAoXOG
      w/1d+FevYF0FTiodNM+OcP3eL+xdnXp2ybIMTdPQ7XZtmpEkyQ51TgNpUR8QL/Nsmiaazea4
      KQSP/+IlmZ7Gz7uJoeY1B+AtMHaM7Dh5p82yFgEhVlju/f196LqObrdr5wnWNA3hcBi6riOT
      yYzVXdapyMIZNn11NWLv6vT3XD6L54V97GwXoGsaioevxtoxdRNZxk84G1+B3yejk/8atXoL
      8UAE6w526uGPj7C2nsSz3SpapozrYgu9ZBaGaUASBnhdacE3IIinc0glrDERQrC+vm7PcSgU
      GnFwYunAublM2v2tZ7VohZ7IrrFB2QYnKaBmmThqEjHrJdXtpHGKUnmSJ5YnXBaRiaIIv99v
      xwaiO9dgMEAgELCPcjfMKiBg07d6Hd9If27jAPDhh3fRaDTxunyGa1dz8Pvf8NaHR8WxOoIg
      QA2uQNdNaI6Gv/n+B9y/fxtqSIXebqJ5eIKHT3fx+69+i3MiIp9NQ+p1ULpoYz1hsTFupvcj
      45xAP27/c5MGcU0hnAVnxbTb+aKkNDyid8OsaVtnQSzGDwciSRIkSYJhGFw2ksUs70JRFHQ6
      Hc/lBeczO8bw9MkOFEVBdMhLRyJhRCJhPP7pZ6wl48hm0ygUDkBIH4W9F9i6ddNql20SZEyp
      lkjGoYYs04aAGsa9e7dxfFyC7Fdw+85Q/CqHkMuoXA7BTecky/JEbfsk1hwYXWRziSjYi96s
      9ehALlPm/zaLeR7QWPc+nw+BQACiKI6ZMFOwUrJpoNrVSSiXXqNnmCCC9dm6EFs0SghBobCP
      eIIuXAFbWzfG2lCDCtJRPw4LezA1A7+8fx17+8fYK7wAIQTfvSohEgrB55NRrzch+WWcV6sA
      ISCvdxALCqg83kU3/hGyV9L4zw+P0a2fo2vKWPGJiAUVxPOb0OoVxOJ85ZgTgmAFIaYbgJsC
      lTroU+ekWCyGZrNpO9ZTLCQ4Lk9rO+0h6N95iJ930kwionehXKMiUdM07azxs/gL8+BlIafS
      G7jKeFhtOpJaHB8Wkb9qpUI9eVXCXuEFzs8rSDIpZipnF/jwRgq3bzDRHwQBW8N7wMnJKdbi
      CShKAOXyGfwrfkQiYWuHHexgK2WxfQ+PHqNa30Y0fA1r8RAG/SYebb/Eg08+Rn1vD4pfHFsA
      brRBWc1poHnOaB1WCsWynBPDo7OF3TqhcDNdcGv3bcC7pE9jt5z1L0tEyoKaL+u6DlmW7bia
      LBbPmhGXz+PIZN/I6zeZk+CFp+ii0/v/LC8BIPj7mQBFUdGsXuDjT+6jUb+AoelI37zv2opT
      CEPNwMd6c8j/2YjR9DTgzfvEE2BW6Y0Xnnxe4nMuArcL8fsKmm52+dIpps0JPr8sFscguveX
      TqeQTqesecxYMvvyeXNkh3aT9BFCbNHnyLg5YncW3W7XNlH3FBjL2agXLELM6aUP9u8ksNas
      zvqT2l/kc7idhMuUSFGcn1+AdlGvNyyxpgA7Z1j59ByCMEpItUodRcZdkhDg+8fPEU/E7Gfo
      DkQ8ebKD1WgUhmHgxChDEATUanUE/H40albqIr0dx8nhAKYQQCikAgLQIwQvi1b71Wodq6sR
      AAI0TcPFxQXi8fjITs1Ld8uyj26stPM7TVruPHXHWKDLtNeZBywr43xZbyu1orvOIhcxbyzU
      F3XZSCYTyA89u0RBQN7hCqkbxph7ZL/ft8OfUBQK+8jkcyP/OzosjrW3sqJACQSwGh3aAV3N
      odVuo95oYi29DgCInBfxY7GBj+9u4eT4APsvi/jDH7/EP/75ELH4hp2mFxjlJpzE7SUvMwtC
      yJjwwaabaZW9YhESFi9tsJpkt7Hy/s+zQ6LfeUfussA7wv9vMOX99XxBqKSN82objUYbX/z6
      Fr79bhuCMAAk/1j5aXMyC60627KNBnkF34VYchZWxSt4xO787uWyv6ixEGLFt5ykFFsGeE/2
      Ls54JRhEMJRAKirCuLmJZkfEV19+Cq2rwdDH00ux31nQDZDnfTeLcnUsMtwsIsxFEQzPqnPS
      WLzy8V7LLxu8/k3TXBorZBgG6vU6MJDw+rQKABj0RZSHn9+My4+z0xoICAgZjpPIOB2Wo6MW
      Bb9dVxhmlR/0RZRKFYjiGzZF13vQ9QG6Wh9kWL/X78M0Byif1oBhP+FwFLV6D5KoYEVZQblk
      td3v86173RYAa2DoRbTMo1dZlqdrgnkN0RXIQhTFmSKi0b5mFZXOssKnLdJlsz1uKniq9FqE
      TsAJyho+ePDZQtudF4QQPHu2gxvZDRzVDdzJ+VGr1oDeCqKpBMxuiztn0zgSn8/nOQiZs21F
      UfhSoFnDmFBtJ5W9TuKpebszfUinxeg8eB/Eo5MWGN0sJEmaK8uhE7IsX7rG2wsEQUDx4ACQ
      LJIrdTVLPNuo4mWtDqV3gUjiBraupzw7UdF8wtMsCtyEEdwTwOvDsKAqf1YS40UPwJZz3geW
      dQ94n0DdJenmsQgIgmAHN3jfLtt371zHWVdEMqpAgAwQAYT4EJNWoNUaEDkxgeRhWlbW+I8S
      e6/X8/ScvPulJFmh3QXC/FoqlWz2xssNnDbWaDTso4ieBlRpwSY1oBaSzvo8zDN59Xp9zOFi
      VlzW5RiwNJWyLKPTGY+P+baoVCqIe7SveZeg9KDrOkzTtANqUcUVZW9EURyhH2dG+2lwis4l
      SUIsFuOfAGya+kkNArAJu1qtot1uI5FIoNPpoNfr2S6DsixDVVX7qKcLhTdB0xYG7XsR94Rp
      fVwW6HuiaVbnZYlardZIROj3CTzbMUKI7UPhtNhkNyLTNMdOgUnviacIddZxlQJNY2Fo44RY
      TgmmaSIUCtmWeoqiQFVV+6ihK5oQgtPTUzvlpfO+4HXiJ/F97XZ7TK3udt9wXo6c5Xif2bKT
      yr1NnV6vh2Qy6ekduEHXdSQSiekFLxHPnz0F8UeweT2Kv/3lETJXk+gZOrK5HI5fnWItHsL2
      7gt8/qtP3yip5kglOwnsIhtbAG6EzxIOT7JBPXYEQeDuPmydfD7P1eZ6Hfy0y7Kqqp4DYzkX
      37u+MwiCgErFSlq9urpqbyCNRgORSASGYdgBp6jjzf8ERAVkQP0iCAL9Fl61+7h4sotPN5N4
      9LqLhECgiyKCzKbo3LXnkdyx88wNjjtNBOU1Yd20/7OfedkgJxGll53A6wti+3lfLoyEENvB
      hqbxoZHuKpWKnX8gFouhVqvZmw+NivAug4JNQvZKdmiT58NvfvcFFEUC9naRyV/DyUkZG74L
      mIGQTfxeMY/ARNM0/iWYbRwYdWABLp9YZt2Z6W45CW97Al02er3eiPkEbzes1WoQRRGqqqJa
      rSIajY5ZnL4ruBEobyenzupOmyBn/UlRBZ19OD+z5X0+H/4LfZpkKjaZ3nkAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='MN County Population' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MN Regions' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MN Regions Clusters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZAkyXkm9rnHlVddXVV9X3P2zACYweAkuDxEymQiV0uKgi0kW5lWetCT
      ZHrWo/SiR71IZjK+7NJkJtMapV2RImjaXYqksAQIYHERAwxmMIPu6WP6qrOrKu+43PUQ6ZEe
      nh5nRmZVD/mN9VRmRoS7h/v/u/+X/052dnY4IQQCBwcH2NraQlFwzuE4DmzbBgB4ngfXdVPv
      l+tSy0m7R76mgjEGxjkoIQjDEBzRvQQEpmmCEJJaZ5G6TxuMsZn3V7+LNtf1HpRSHB0dYXt7
      G0EQgFKKMAzRaDTAOYdlWXH5on2maSbaF4YhAGA4HGaOH6UUnPPMewRs24ZlWQjDEIZhYDQa
      wbIsWJYF13Xhed7Mu4tyKaXx88PhEGEYwjRNmIQQUErjBzzPS3zPA+ccvu+j2WzC9/1EA+SG
      ZA0I5zz1XsZY5rOUUojW8qiwSSFROZRSLYGIz2ll696hLhBCcgdcEIVgYHG/7rm838q+S7vd
      xv7+Ptrtdkygw+EQ4/EYzWYThmHEv3HO0W63YVlW4t183wch0SQUBEGifEopTNOMJ88wDOG6
      LmzbRhiG8DwPnPO4btHuIAjAOUcQBLBtG4yx+LM80aVNoI7jJBiCMQYTNYBzjpOTkxlC1jVG
      hyKrQt6zhJB4YNIIoijxiN8XRfxiRs27T9emKshjdhViBaeUxm0VkyLnHK7rxoTYbDZnVlrG
      WEycohzxvoQQMMbgeR4MwwAA+L4fl6GOk9x2USeAmElEubZtxxOwDmL16vf7YIzFv88wQNFO
      Eg0TS5JoiEw4eR0vz3LyfXInFBFh0tovyqkqXi2CAQzDmJkRi0C3rBd9JouZdWMUBEE8poIw
      W60WHMfBcDiMRQ3DMGCaZjyjq/V6nhe/q0rInHMYhgFCCDqdTkyUouwy7ylWHPFZpUEyEY/H
      4/FMmTMMsL6+jkePHuHq1auZFYqCxIvLDKB2RJEXkP+GLIRBjZkXKlqejgHzRLBlgBCiJX6d
      eKMTQwXxZIlQRcVOtW5dH4kVgDEWiyaWZcEwDBiGkVgV5NlYPNtoNEApRRAEMWHL7RYrhRBh
      hEhVVgTv9/uZYi6A1NVhhgE6nQ6Ojo5yKxYVjsfjxJIiKi4id8ryrUz8urGtIpKUXT3k5xaB
      LEZTr6l9WgSqPqfOukXbJ8RJwzDilUDM/K1WC81mMyZs8YwgZrksSikcx4HjOKCUwvM8MMbi
      FcM0TQwGA4zHY1iWhSAIEmV0Oh2Mx+PUFVPoCKK+NGZWP4vvlNJqOoDMbaLBugYU5eTEcgWC
      NPoTCrFuQNVVooyYkGZVOYsoQsxlrEI6kVGs6r7vYzweYzweg1Iai0GC8MTkJ8vygiaazWZs
      rTFNM57lRT22bWM8HgNAQoQWsG07ZsAi/aET5WQG0cEwjOpKsI5osjTxPKQxjU55zVNoVSIp
      2xYxSy0DRU2Aumd0M1ueiKQirW/CMMTx8XGiT4VIA0R9JGZw13VhWVbMAEBk/gSAlZWV2BIn
      xBDbtmMLkGma8H0/QeiWZcVmdcuyEnpB2juofdFqtWAYBlzX1ZrlhRVJywBZlpE8pXERs6dQ
      xOQOzhtk2b6cp0OUsUXXjTyxSDbbCQQshEHSGbSK+CRACEGz2YTrumi32/B9P7b7yyvwaDRC
      EAQwTTNhg5fbIMyaQRDAcRy02+3YzC78B47jAEBch9A1wjCEZVmV3sVxHFiWlalPCH1GywC6
      ZVHHZTrZX31+Xoh6xGDIv+fVYxgGHMeB7/taJ4mM0yD+MpBlbXCA0MWYaAX+7Ls/x7ffe4zP
      vXIBD54c4mTo4+//2mdx+dKluD22bScITJ5pxaQyGAzilUM4o4IgiE2pQkQSBB8EQWxZzHKo
      ZkEwWRAEM/qDvHL6vl9eBFKZYBFEr4PneWg0GoU7RciyspKetRqU1R2WAdUszDlHmDIj1j0O
      1GrgftfB/R8dAzAAGPhf/ugH+NXXNvDFz34KW1uboJTGNnxZhBF0IU9YQqyUxTTf9zEYDOLV
      QFibbNtGq9UCEIli/X6/XNsVy5MMmQZs20ZhQVfXsUJmFy+2KBEImCpYYsnMgnhJQfw6HUKF
      2v46GUEoiVUg+jiW8ZEMO5ChWkTK2NFnTbE8Jsr4n72Kb9zx8MFHD0BI5OVtNBpoNBqZ4+55
      HobDIXzfT5hUZecXMF1BhE4QhmEsdsnhFzpQStHpdLC6upqpN6jSTSkdYB7Ytp2wIPR6vdL1
      uK6bkNdlYk2T9aoSdJ0zap4lo4iJN545QUAwCftAUvkVZekMFK1WK54ZhfVF14Y8szUlFN3+
      MGGwEBMTYwyu68aMIeJ1RPuGw2FM9MKqNBqN4vJN00Sr1cJwOEzM+pRSWJaFRqMRrxgqhGlV
      mFKL+EqCIMjXAeoAmbwsgNgjJ7vXy0BnaxbmMtUkFtef4iTJe8+6mCDPnJclmqmmZVNaTXTP
      6VY7QTxC+RT2+DKI20UIHu6dJJ6XVwNh8hSEzhiLRSExRp7nxYqqINper4cgCLQELtqsez8g
      il1ijGEwGCR8E2mQrxfSAeYlAMe2Y6VHuKNlWXAeCNnScRwYhhEzlwp5pkyzG8vf5Rm1jjbm
      zUizIghm2qF7nyIQhGWa5gzxi89FViBxz97xOFYwRf/L5Qj5XhC4UGhF/YJIhVeZUoq1tbW4
      rTqZXxdQJ8v6vu/HSnkZ38EMA3AeBbZdu3atlsEHMLPkzlumSkxCXkyb+XW/FWWCulbDPPNx
      HlTZtSzS7OHqKiyHOMh6kVx/3zfQ7fYSnt0wDONoS2HZEeU1m82EWZJzHjOFMKUKiUAQr7pq
      ymPebDYBTOlKVraLBhmKsrQrgODGOqHOZKIhZQhMtTrpxAaZONLKVmdclaHU8uZlAlVfSWtT
      md+LMFSer0RFo9FAq9WKRBXMGgbius0mnuzs4ub1q/HMLBxPYlYXNn3RDuF4En4B0SeyF5gQ
      EhsMBEOJqFL5PYTe4DgOCCEYj8das3wWRN/UEg6dBt3ynccIeUqYeDYtWGweYlXlbfFbXUyg
      i42v0jb5b96qV7TdlmUl9Kms54lh4ae3H+PVl1+Mo0HFyiGIH4hm6MFggFarFc/yomxhPpUh
      ypL7SHiYBSilWFlZiZ1ledGjOp1QXuEytVCdCbEoxLMywQdhCD8IlH9+wtSWV58sy9dldlXr
      VeXiMibFLFQlfgFhlhRtSxPxqvSJMDMX6X9KKd572MV4PI4dlHKYtJiNhT42GAzQ7/fR7/dj
      3UEXv+/7fmIvglgBxAoifvc8D+PxON4TIPpGJ/6kTRCxUUHeMSVD3Y1TFmqobGRCIyCamVud
      zYsoZPMizwIl6pDvq0N3UZdqWYHMqkM34wuRQSe+VWFYYXcvAp80sLO3j42NjTiwTcz+ghgF
      QcqRooLAhTgk2iq/txClhsMhgiAAISSW++U9BkWQJt7GO8J0cdIiAnBZyFNcPilIe0/h/hei
      nS6kWYe0Jb/ovSpc18VoNEqdTWUQ08HDpwd4/daraLfbsd1fyPXHx8eZzKTSncwAYvWQ297t
      disxddqKKOKMTDnATODChQu5EXh/h3IIwxD/9J//OXrozF7kgPBucfCJq0uPa0d38OthudCA
      IviYAX+1+QaIYQEgIFYL1NavOuLfw71uHMMjJIYgCNDtdksrpISQ2IObxtjqaqkDpTQOuksL
      mxF+izAMYQoPYd2Qlz11RssSJfwgAAFgmGbCEnEaEDOhMO3N0xbOORqdDfT8duZ9onQufZa/
      N6mNS2FKG4R8K9UZ/ZzvFR0QgLbOgZrJUBPZvKyGdDw66Mdik1g5sjawZKFI5KdQstN2dwni
      VxVpFZxzjEajiAHmCZ3NgqywqUQvPIIz5jXOAR4lNgknLyCUrtNiAmCqJOt0lTLteu3qCvbv
      BkBGKDMgWcrU35W/as0JhsmwDumY4Rw4DH8ELjEAGxyAOevT71JAGyEEPZfg+OQEhBB0u92Z
      MnU6jw7ivjSiFd5l4StIYwARepG1mUbopEK5XtiuD6GgaYlc+S5bgE5zxtdBNe3Ng7defwnh
      qPh2U2A25geYXRnyytBdU/t5kxL89v676Dy7h/XDO/j0kx/hrYMPEs+pXnROLPR7vdi7n/ZP
      rVcF5zx2qukYV2yfXFlZ0QYWino8z4tFH7GhX223apJfqB9AzN5ZillRh85pIeFxZgymZHVJ
      8ySnYWNjA9c3m3g8yr834ayLKkten/ylBfwmRfE6Arzevx9//xaxZsqSrXqMc1BqzORu0jkS
      1etyOTqlW6w0YnIUq69wtMlmdpWGZKOCaEMaFsoAQPHOkHEWVwJCCIg8YCwEIdOkXEXb6gfF
      LV6ETCI/5VlLuV438iwtsl7XoAFW11YTO8XUMrLMumn3E0JiRZbzZCY6efXSOS4bjQaAKPrY
      dV0YhpEZ/LdwBhANlP/mzaCJ5f6UmUCuX97KxzkgNmUVXQkIIXj9cgO7H7kgZv6+hiJtqhOz
      xJ/iwZ8QH2MhWMhgWWYqgZX1S4j7er0eACR0DiH+rKysxJkqZLFJGHSEMi6iTrOsQsvZ+a1A
      J4Om3XMWoGNQc+L6L8uon/nUG4A/qN6Wyk/OIk02zq1rcn9oreFPv/H9eBO7GDPVaJE3lrr0
      lUI3FEFz/X4/9g2IsAt54jFNE4ZhYDAYoDfRS0QcUVqEMFCCAeoIBVhGmcuCzMRlzMgbGxvY
      WrEL3SsTpqgrPflfORTpe6JRsWXxg4PgZ7sU/+Sf/zm63S6azSYcx0Gz2USr1UKn00G73Y6N
      CKqTL6s9iXomZmhZ1+Ccx2laBKH3er0ZrzohUea5NGWc7O7u8iIDWESuK4ssJfgsrQACcnvn
      8Z38+Kfv4es/fgZiZDOCrm+s/lP8Nye3Yc/ZN2rZf2R0cHv1RvImaoA01pGFWDxxj3Bjy8Gl
      7XX4H76La08fgxEK7+Z1fP4f/aOEtS+tPep4y3FPwr7faDQSmSPENksRgi22U8bhN1Kgnho8
      B5TUAepmAh2RV/VLlLXInCZeunkN+MFTIIcBVAMCB0BIsf3FWWOl9bQaDkhrs1DZalmcc3B7
      HXd7BHd7Ht7e7+JFGs36x/c/xsP793HjxRfjeB7xjBwrpItIkMUc4XEW94nMdUI3kDfmi7xD
      clYIEYatwqxCMLIJa2aQFE4uUv68xKuzN59lvP/BL0DMRunnVItQGmTz6bJ6QhZPZBPlOqU4
      /Gd/iJ+BIwABMw3QZhNYWYFz7SqYaaJ9+TJeeuONOJmWDEJIfAbA/du3sf/OTxA+fgyyuorV
      L38Jw8EAhAK204DvjfHmZz8PABgMBnEbsrzCpuM4leJ+VDOUjDQvZJ53UnVS6MrOg24pPUvo
      9Xr4V3/zBEbnQulny2pMWZ7hecueKTelyxlj2CAEG5hMlowDgyEwGILs7gEAHlCC40uX0Jxs
      xpHRarXw8PZtPPv2d9B89BgviQtHxwjuP8CYunjt9UcwCMfIY/jZ4d/HjS/9A7TbbXDOY5Eo
      LdSe5h1AISArfWnavtoxad63NIVHfC4b+qDzI5xVfHTvAWBX23EXxUYVuE9MOCi3l0Edszwr
      kVyXHMDHC9KE0AmuMo6dO3diM6cIhxZOr4N//Wd48dFjXOTJqAFTKMmMAZyh7VB86uRf4/BP
      /lu8980/xmg0QqvVQrvdjnesqTB9359JT5EGndMq67oqKhVlNPmvaZqZypOu3uXZycuj4dhg
      vaeAnSYC6dpO4j9eGOD/aF6CTHacMxDwyFEHPv3MOSgYKMRnDsIZLo2P0SQThprU0OQnuHb4
      ARgHHq9cAZyVwu80b3/7nMNut+NM0r1eD0dHRxj2+zh6732sTUKhtRMdQXwslqCRG60h8Ozr
      uPfHf4nbG5+F746wfutX8NLrn8VgkDRBm2KZKJKJN660wG86D3BVC4rIJpCGNK9i3RDvMM+A
      b21tgjU2YLWzrStp4JzjCdKjRQXS8p3ywMOnn3wHNw0KSO/yGveB8R7GnOP3G+vwSzDATBtL
      3t8gBLt/8nX89df/FCYhoCFDOwiwRQi2JVNooo74O4dBDRAyFXEEI9xs9cHcb+NBz0L34CaA
      z86EVJtAPoFpX7KIHVnjJCIk2t1DCJlRenSEVTa0dtGz/7yh48ORC16DahqHPGfcI2dZSKzM
      0bKR/uA0Ai/7vprAGMN1lcABgHOwvPonK4BgeFVSeDBexfZX/we8vLYOzqPzzMIwjMO3TQCJ
      XD15yBODityjE7fOsuIqUIep9cqlC9g0voMBKuoBqvEhw+CgOoXi56TlgissFIlFk98yxpBH
      u3cAkpT/o2vVLItVMNUppvqj+J0QgotmF/e/+y/wcP0GyOgI46MnuPzF38PWxSsYj8cRA6ge
      xywUETWy7tF5N9PuOUvOsLraMR6PEcy5BaOomVkXwsGZEP4j5hHEGx8vq+hrOstcosylGVoz
      wDkY4zOTA+ccTRN4Y/BNQBL93//WDtZ+77+bnhAju5zrWAUWtcnmtFEHEzx6soMe3UKxYIjF
      gHEk8osC0rtxDh6Mwdxe8iGe/MAn87yWCtjy9ninmXrTPlNKYREWn2ugzQxXlyike0b3Oeu+
      TxpuXr+Kc417qH9Xrx4zK7thoWs2AO5p+9khBP9F/z5CaV+ANGqysTP+JpdCADwKA8BaEouT
      cs4+zjloOJ4e36S7oW4CrCLKlL1f5JEpYs49TTiOg3OOh361sx9KQS+yACAkScrKfRtE74dJ
      3ieJSdHF+MruHG1eNDjnuOGc4KO/+XPc+so/qB4OXYaoZafHIsUj1WIkYk/OEjjnCBcsIWaF
      hpRZs1UnmOoIjcuXnnkeVm+Tcqzf+xMc7u9NGUCNyRaHJWfhLCmpchpuIP+EwNMC5xyD8XwZ
      4rLK5pzrZXvdfRke3izvus5LnMYQy0BZEmSM4XzTx9P3v50eDSpSS+SdbpIWEHfamCet4yIR
      BAH6Iw+69EB1QYxG1uSUFZdV5JmZ+K9JxdE9Z2NSzATn2Hj4L5MMoMbkiHyMZaAywzIhwmDF
      SlD1kLVFglIKQg0wN1KDC/VQUvRO/l6F1vjsmQBFdT/5SKxEkRMxl4OXnpHngRzOUQacc1xp
      Fzwkr6wDSOcBFuUsQmQiJNr1I3LGpOWNOS0wxgBC4gwOXzz5CK/6EzFItiUS6Y/CGffDADeN
      2eHianfKZfHkT+JznzEQJTNznoVO3pubdk8cKjJz5WyCMRbFAhU5GLoOL+ii9AUhpnmeF3+e
      JxV53Ygm6uj/hmHg4s0bOH/3fqkynjGG7TkO25PbMi65Mst5kbLGMN7BVbl15TCNHK5eRkz1
      RWT3syLfqxAH8DWbTRiGgZWVlTjX/FmwBBmUgpJpTvrtv/f3sFvaGlZP30uGy+LPaHQ8Naw5
      cabAEtcA9U1Km8/jgqSX0SlIabLfWYDYJkcIiYP6HMfBysoKGGNYW1vD6urqqbRdZ/rdunAB
      B5cvlSxpuW0nZLrVUDVji9TnYpuh7niqZYBzjsAHRkHUN4JGywQsLiUv0KIhDmhwHCch+rRa
      rfhwbdd1sbq6Gp8kuCzoBsMwDDTeeB1sZwe0IGG74GCIjqyeFw85wWNuSgokF94sNMDweWs2
      EXCe2VSGGmC3SFBOEE6qK3rgnwAHn8YCAVM5vw55f9kYjUaxDiD+Cn+GIPggCNBoNFLPyl0m
      1i9exAnj2KDF+niNUAScw6hhTJ61tvHB9qe11z598DN8IezOjL2a4VsXehxfZ8tjABLFQyfr
      L7oa8YwVQLzkIlKnLwryqSTyZ4EgCOC6LizLig9kPg1wzgFKUWYd8gjBH1sbk/FIk+SVTD5k
      +sEMxvjdsAebpEvoxBvgS/4xiKJsl50IlykMrcJAz6Po2NUC8Eyx1J1F5bZuCL+A2AEnw7bt
      +NzbZbTj3MYGbl+5jO2nO4WeYcTA/e03QA0r/2YNyGAfH+3/FA1CMDD1Y20EI6w+R6s+gMKO
      AHmHnNgVRgiZrgA6JnieRKCykEUgscrZ0oHei0ScwOnmTaAgA8wLAuCaYaBDKX6eMq5BYwPv
      npj4Ms8+1V7+q72nQvueMYYnQQBz6sYG4VGYAwVAQaJcrBxgiDbAMABDMLxcoEY1ga8Y8xlP
      8FnbiLIMMMbgeR5s246P6VkkhIn2/I3rOPjOd7FVVGkLAzAQEEK1hw3qwEIfYAwI/ZhMKEnZ
      tEQN/MXWm3h8+AH+Q5YM2C4zKeTdqV7nnKPPGW6aJjolRe4TzgqbXdV3iDfE/B0iLPNcNEop
      Ll27hp9vbWLr8Fnu/TcJx3+6828BAD90zuGjC2/lPsM5wxeefB+3uAdKCDrxppf0Z4jVhGs2
      wdUNMSXggeNBONVwCKHgPOf4IwCtKpMuj/9X/BE+3TyfGgtUtrC/TStGXaCUgrx2C/5ffwdW
      Tv85hODGRG/5IPNOCRzYIATXqGo8zdnTXbT8FNgguCGFbRBCwNjUk6xuW5Tvq4KqpBdviq/6
      sPxXZzOWGSpkLDon+O8YJYEXv/AF/OL9n+PVo+PCz1jBGPTkkf4i51MK5hw2DytQdE5EgNg/
      DP3e4WRzpiHaRLlP0MiiYsSKYC4RqEjoBDBljmCyDS3rWJ+zhGWsbo1GA63r14ESDPCbcPGb
      /bvFbtaJ1JpZNzET55XJZ4Pn8mhBLVPne5Ljjco4tXxWfXzmNvLniU2yw0SYnwLlRHLOo/wv
      Z9EUu4w22TduYLDURALV30m3UUYdS458r7Huep6DTYcVQrB3uFr4fhW5DCAa2Wg0ZrheDZHN
      gkEpjMn9lFKEjMEPAvhBEDPEWROPlmUNu3rrVXx8fnvh9Qhc9vvT/QgaQjyi+ftAEoRegOAT
      IPWtqpSQqem0yvPqD3LoK+c8PulDZNIqAt194rcoMpJgNBxG5wWLhlASH3hwFleCRYJSCuvc
      xtLqewkhEKZvFhplnF+W2Bc8za6Vi8RegpoD+zipTi+m4zhotVoYDAbxLjDOo5P5gKl81+60
      MRxkhw7oZgHdLBqGIXZ2drC1tRWZokwT/X4fvu9jdXUVnufh3LlzcJzqB8nVhWVZuS7+8i9j
      58Nf4GLOIdp14jQnmjS9oUpUwjzBd3EwXKeT3KTq+T4IIo+pOIBMnNBRBqpCI/5tb2/j8PAQ
      7XYbQBS5KcJq19fX4xP+ThvyarhIJrAaDRxRiosLpsl4ksogskydbhI5WtVcLn/WJfBNEH/R
      KgqsAGnmVlMcKOz7fnweK+dRzvVwEvtddYO5rNXL4bSUUpw7dw6bm5up4RdnZfNNnpmvtno4
      x3oQAJptj8tH+r5uSmks86czQT7lCjoQE6S2f/mE4Ui22ETmEYHE+alBEIBSGp+1KieYmnfw
      ZSKilGJvbw8rKytotVoAolBmkTHa87wEI54VLFoEoqaJOwzYx6wFRNcL2p7hfHI4RTIqlEt/
      OQCPk4S7IBMT4ksTBYVRQ6zy0X3yLE5gKEeaCoIvbPgQToS0JhZggDR6Mj3PiwODgiDA8ckJ
      KCl2Sotqw9WZtUTl8nXBYOL81uFwiFarFYcrX7p0CU+ePMGVK1diXeSTjsFwhL++9CUYTvV8
      KWH3KYxV/U6zhJgReuBufnLGeHyhH1eBWbPllG4ELe0xhu/ZGzjvD/E5PozLqWOSK7oC6Oh5
      JhSCAvHROmkMoHNe5Nl8ZQwGA6yursa7uIBpJ3Y6HQwGA9i2HZ8M+LcBqysd0IwozEIotUjl
      OzFV/SdLcRX/giBAlxq4wwleJhwPQfA9ewv3124AVgvv+0NsPfk+rmtWuqoQDFDFYDETDk2k
      DRN5TCBbeLJc4TIYY7h58yY459jc3IyXQ7mDxedPapZpHQbDESwDpTbJzKDMZJpxbwDgw8BP
      5PnnAGatngT3jQbGzmoU8AYgpAwHZhPd1WtoDffhr1wAtZsgPNqdx4mNbztbuO7updZfVvyl
      pLqYHjNAmQJkpbYIE6gIwxCEkMRmalVLP2tOsUWbQ9fXVsEDF1jigpc2wZkguGUmzeDis4rv
      NbZwuHUr1gPk1CijlcugBgXhSUfZCg8AEuVJUvUAIY6XmfwYMyqPCxXKiEyA8ikbAqq8phJ9
      WaKVy1Of07Upr5yybvcqWKRlyjRNXFibj/oLd3/uK/BoQ4pmXGbvnE6GOqJlIUvsywaAX6xc
      xTdoGwFmx75KAuUgrD4paW1usn1WnaHl2V/8Lps75XvnhW6VSbtPrn/mOiax33MmlpJPI18E
      GrYNzLElIa3XZ8aDTBVbnRm6b69ilzFcLLA5ZZO5OOA8tV90YxI01vH9C29j9+QeLo2foW84
      +JR7jBdOYfu5lgGCIIidX67rxidIijAJ3eysE2WKIu8Z2X8g36+boXQdXhdDGoaxUL2k7y4v
      XUvadMI5BzHMwuqEo7EAqhY/Ieao93y8/iI+xosgAO72n+K/Ormd2BexDC987AkWlYgBFsuW
      cJQBiLncsqyZcNW6lVbdaqKWr+ofKqNMUYepbfF6ickXxwB5k4BMoJznm7izIIIdDSWVSmrb
      ALwy2o+Jv6wkQeYYXyoqkq0xMnzfn0kkpSN0mVvlDF1ViaZuWbuOPQjCSbcodFoLDP2QXj+a
      KKRLBczd6m/SXfGYE0JgmiYIIbAmfwvN4gR40NiKc5bKYu/CHZDyl6JKXhF5PK+8Mo62qtcF
      CCFgnCOcc4Uqeph4VTSs+gebc56ybTanbwHEKUcIEhq2Tm8AmUYSq//ycksREBzbKzNJe5eR
      k6pS4InQEYIg0HdGAchpKooszwK62Ujna5BnD0ooCC1w6HIKRBYHNQls3Tjf8PEZ91uActKu
      Yo2fHoABoOtROINONJOFLshgB8nYAZ6g9egjA8IApP8wUZb4HLBw8j2d6FXjh3yvPF7C3J0F
      3fjLInbuRDdPLNBMWRmcngYhd6uyW9bzRYlfbZNarmq+lXUBdSCqphUMgiBOnLVIrK2v4yvb
      t+EYxQf0zpGDtZNrcMS7hUkzUpqxAgAQzKaHJISgz9jMKZZpoS5CfJZ1SHlPiVt7iRsAACAA
      SURBVHhWLkNrTk2hgyL0EYbVrXsza8y8slcRu3zefbJMKd9fxDewSLlx0Utyo7MGt6RNu443
      jfssZ0LS9qtk/5fHVJ4Edeb0OmH41SNoKz8pLERif0AVa0FRYlYZhSOySMl2fXVw6mQC0YZF
      h2ZYlMCmFczIhe+b9QeQpHZcum7xuGxEEZ7+ovqgaF1VzDPU2nOCo0LzRRRdxuBFQC233W5h
      NExu0dQtuXXWv4xjlwZ7H6GRkrczHSXu50poA5KiifgMnn3MUZavJW2mz50cOcPvr90CiXOf
      SuXE7ZH+ch6ZPznwEgHexGFGi9NhyiKDzlmhexkg0vgXRRRpDi1xzXO9VOJ/nuF0zoEfltt5
      ZhkcXR6iQaqLAXFfTjzEFFF2NxmCNmZWWj41g+qU3cRxtQQz/Joot7kOYjYS9xLpvpl2i7/j
      6vlVU3WAtO9x5RlEOg/yVh5CSEIZXYateFm4+OKn8fGg3JFOV1c8jKz0De5Z/SMIlyMifDL5
      zyYEAZ/VB7PKUW33Oj1OJNJKKzdRfomFjc5hBZphAJ2yqevERZzDq+scQO8ziAdvgaIXAPjh
      rKl3UWi22jh55T/G7rCOc2CmmM7AJLbvJ/QaHokSiffU6rv6fmCcpYbHlNWb0mggC3MxQJYl
      RjZz6e4xpaM2q1hI5Fki64XVNhaZleqCQZZzLprQM5i9gkZJaaZo66Z+rRwHpNKuNPNntGrw
      GX9BpUmp4iTDARhRwvRKz88ckqfOrFn2WZExQpf1oQjRqDNElZl20SKQHIC3yJVATDL82T2s
      VTztJA/lLHQpimz8ZbbcyJSKeIUpj3R/T1y+dE0oyPOsAIm5pswgy/cKZVicKFiWUMoqtKel
      ACcGumYYhgHDMNDq/qIe474GgoDV4nXv02MMe2EQrxjxHTzSTP3JLyOSnMBkwwn3etLMTkRl
      8ffYFkUQbQayW5ltS6MrivxVLQ2VTQdiZiSEwLKsysSfhtjDSPXnKMrmtufpHLM8HAfNyrvC
      dMYD1TpTlEwoicS/SS9HO3g5wAnwjHP88dabgNkEoabeUsNC/Lbxl/jU6olQMcB5dKoL5yT+
      HingBA9IA/8P/92ZdqhmefW36G8U3FdlXqolCY0Ij64qwgionkTGOShjmW/2SSJ+AKDtzVKb
      YvLGXDilgNmVM1W8BUebEGwK8S96OK7M4AzUaoLY7ZlyZbTNEOecYuLcIDBBvGxnppjsCEmG
      3h8/6+BnT16I076Id5h+Fr+IgsXCNMf5AAK+78cZHMpCJ1/L3F0kdmdR5tg0LLou02mX3hV2
      wEIEgY9EAByUj6oNXvrO5eA7QhDw2WA8+VEDsww1Cw5aQjHNdr1J92mkjA5JHshRpAwyOZ62
      lhUgDEOYphmfwpgV6iw7RsqYyCilM8630/ABMMYWu+q4xc8JENiiBq5PNrGLqNUsBVKG7j6P
      MTwMg5nfBQw+EVxyvLsEye2sWeNdOJxjYn1KpGesIHmIibM2BiCUTsONefqBzrrtcUXQaDRA
      KU0wgJgNliEGJZS7Ra46w4PS01KeopjV1vRrGe83CZeQTY+6cmiJtOlcOCik8lKdoSBzJcSN
      jAFRu2pLRMknm84557FSLFaEmXsrcOx4PNZ28rLFH3lAq9adZcXa7byF//7Dq+CJLNEiAkYC
      C/EbJx9ghQLnuRMbtNMURd27qG0RMAlBUCRxVtYN1MBH7iY+MxNYnVIekDCfZtHIzARURfec
      MFGtmVhlH4A4c7fs86nexpTlU0eUOstB3ShTLmMMINHGHJ1TT8Zn3/4c/u297yJsbGWWyQMX
      N07uYZsYiclaiGh57ctaxahs75eQHJ+JAyylGkIofEy3eIqEArrxDTnBT4eXQSQPoMrAWX3m
      zRwCWAy1iUAqMuXCnBeSY4GyPNRyXcsKVZBRRAxijIFxhjCMxD5KZh2GKra2trDRsbCfsvem
      yLvKhJbVxryytI6n6Q+57dA5y3TwQ+AjvAJC08Pbs9AnNW6IqQOcc+3uKdVTrMrVgqgImW6u
      LlKXXLZa16KQx3jTs9CmjBJOUs5ntY8xhrV2o1gbMtolZORF9EPkHNOHR8zeGUGd/RP3EgCS
      vqDr13mTLOjayjlfDAOkyf9FCdQwjJgBdLZgHWSmqqujdCgSuwREAWK6NlqT/cVZuHp+FZzp
      l4CiMzqRTJW6tub1Ua63mKef4hhPSimiCYcqw+cvKJlhOSW9wAlaWdRMOY9YwhjL1R/Udi9T
      DCrWZykKO8l//q3XXgB6TzLrB/JNh6IenUhUxXEZEw4Aovhtsp6RGT56Xnl3MvV1VqHHeUY+
      TowF1EdEYmO0KgYVkZs5n6bZy5vt5WcWGadTDSmzFePgNLsf1tfX8eaL2/jpQTlza9ZsLK5X
      MUHP1pN0jqn1CqJnfPYQDK1eJ4tKedYlDVxw3JMcgdPQDPFtmhom6S2uyRGmIggCOI6jZYC8
      zp9ncJbtFc5qR9rvYQG/Beccv/blt/CzP/kxuNVOv69Em8pmXT5mDHcn46d6ggGOiyf38KSx
      CmLYypXIOpQW5asdH/knHgX1lJmUHULwglktgMosWklZCBlzEWVnrQxnAYQQmIaJkLA4BXzZ
      tm2e28DvfPEK/vSHT8HNcrvEdCi7MWWNUrxops+PN/kI39/9G9w3mni8eg1B81x0IQzAWAhq
      NaA6trKImkzuUY/pLRJiM7cIVDeRyi+waCY4K0SvgzgTWXjIy7b07c+8hu+9/wi7c2SMVlHX
      eBAAX+YeLrojtJ7u4fud83hstPHvDJ/AAcf/u/oCeDNZnxwFIIeUEExDXXTiVH57q9OAuQix
      gZDpvt355c2MWUPS5rP0ADVT3DJBSPWEXOJ5LaiBh8TCxRJHDemIqepEMi2Lo0UI/v3RIYDD
      +PffPbqN/fYxgiBIjZ+KzeWmEekVVftpDhJbiA7AGEOj0Uj1B5RB1gygmlV1EM+eFf2gDDjn
      2FxxsKMxiBFq4sRwAD6avZhRXlFYRfuKA9Qw4ll88hPc1UN8ZesIgDFViqUVQPw1DAOccGwP
      d8BcL9IBJowFzsHCAAHneLJ2E8TS+0fUt+IoviYshAGE21sl/iqb2DMjCBWift4IvAiaZoi0
      YZrnbesUKwghiVToLudorQ7j8RCiTSJFigSfcfzS+AAvkNGMxYgxhqMwxO93LqUygMaqWnjC
      q90RZlkWGo0GxuPZvJNFCV94/WToCF100GmFQywDnaad8W7zRUTqPlcpW72zQQi6h6u59ca/
      Iemdle8VfoeiDFl2Eqx9BbAsK1Vz55wnrENZ5kIBddXQWRPSAuE+Cbh+7Spw+y5g1n92QBlP
      sIq8Cac96uCH7zYh2INP5BJRrvx0yDlsZiA0o1OIdO38wt472AJHCwwGOBhItL0SwGEYALYT
      t6vMZLgQEchMMZ/pFFrdb6kxI8geNPXUmrO+MnDOEUy2LKadX3b54nk4/D14mGWAx8TCtwhB
      7OVJlh7/sUIXm8xPjaGXZWZR1GCOFQAALhATF0lkm+ecxxXoQls8cDxGEJs9VVGJc463EGLb
      MAHM9tOHmgm36ARYOwO4rotmc9ZunRa6kGbdSbuetSNLfS7XAXPKEHbvLNi2jbW2g32NKfRx
      5xJ2Vi7m1rF5eBv/5fhpqcngblA+7WWaxa5Y36fvHOM8mXtIBVd1gBJjXVkHSKtEiD9pq0DW
      s/J1cU9R82Uc3LSgQLisSEX1vlJbPQnJPL5pOBziWX9WnyqLrHbrdK6irCKiDVSdYt4xKNrf
      cp2lysccoRB5Xr3xeKw9UEKV44voADpkHZa3KBSd1eQViMURk7TyGWX7BwdwBycg48jcmRBX
      NBGnuvZk9WeqPrYEybH4ilSOCdJ8HQIhgHtvvQnj3EY1Bsjr1CAIYBgGVldX0e12CzUq7Vqe
      viD/XrR9VVDUgypnuqBkfiPbysoKjNYmiLMycy3s7c5dPpA2FsWJrnz4WhIGgD5nOA5DrE9E
      QjGm7/oeDA7cmEgU8jjshCGOWJibFEtm8nvbWwg6Hbz0q78Sbd199uzZzEZzIPt8V/k+tVHi
      mlhWZYtQXUSpI0bR3rT7xCohRyeKdqrKc9776crWhX2o9cm/qfWJOtX+9X0fCF0AswwAXiwV
      TTAJx9CtQmljkre2xCJqoRZkwyAENw0TfcawBnmF4+gQgpspm6PG4HjFtGBK/S8jXo0BPDAM
      kFdexpVf+1U0Wq2YPs1z584tTHywbRvtdhuu62I4HCZOlKkLeeKYes88KGpi1U0YVesfj8cA
      va2/WHArYN9exXjwCK0SbXAnBLLoU3EEopVEyUdEJqkclXaX6Uufczy49Qpe+q3fihy0nEVl
      imNda2l9CjzPA2MMrVYLKysrGAwGtddRRNwpKr6o5YaMwdEk/coT33SrRVUG6HZ7AK3hbOKS
      1QvnVKH7KjVIUZw5B9MUxDX3qmXoGESsCE9feRm3fud3IocpIn0sKpgDhNTrCdZZYIIgwGg0
      Km0dqQtVCY9xBkIiN36n08k1VwLpzDiPTnJ00gVXYu6XAlawzTUKDzpiz2tB1vU9SrH5q78S
      MwOhJDY9k4lYOPcKoIYl6BCG4akQP1CNASILTqTEep5XywHZRWNTVLx7+yGoUYMXuEyEGFA4
      rWHaCuByjh+4Y5wvMHEAQMA5GprZXCcCFcVwfR1XNjcRshCEUBiUImQsClGfpKqpzABFZG+B
      ModinwVQSmESMvHfA6NR8YjLLJRNq/ijd97Fe7tc5/wEEJlBmS9CRTNMnaGPIWfg4USHEb8T
      +VuSP1yE+NjuSvdBuS8i/R7nGBPgJKaF6BIHsO4wDHwDb3ONAq/AYwxP5CzWBYk+K0rKeOVl
      AIBpTJVocxKoKcZhrhWgzNLuui7a7Tb6/WKZwupA1dnftm0QQkol9tJ5ntPEoSLtOj4+wV+9
      tw9upG+J3Pa6+K2TD5UKlJsIsBsG6BGCcVzvNEyC0qmJMBGf43j49Kt7ue3Mw+7AxKO7Dq6S
      bDGOYNajCwD7jIH7PiiJvLYUBHQSU7TPGEACmBJLCoxu3sRLX/4SwknGwjRUZoCyM3kQBLHp
      aZmWhSrPUEpLZ7XTRTGmMUBW2zjn+OFPP8Bf/PgRfFMfUSlgE4JrBVYUxiguUgon7V5NU8Y1
      +DAA4EI7gHfjMXr3b2Alo63TqM8ktgjFLStpBGA8Oq8gMDy8fOtjmDETR6z9nvNLePU3fg8A
      iR2SRorFrHYrkC6Ls23bpTdlnxY45xgMBzBKpNtTid+Y5EhNe+e0VSAMQ/zpN36AnzwJQXKI
      f9Go0zB+rhniPgmwgvRVIK0+3TRLJ9YbgxA4BmBKh4szDjQvvQZCKDgi3weRmHnGf1TiPUrB
      MIzYKtRqtUAIWYgZNA1VFSdCSCni16HVaiVioXRt0a0O/9effRc/eQoQWmxeqkub0rVPnx20
      YvnANHN4xj16lGvH0CdorG1PPPGT2DC5HkXRrn0FEBtU2u02CCEIwxCu69amSD4PUPWctJBv
      eSCCIMCD/QGIsb6cRiI7VUqdK4BJObgZACzPmjV/rYRwBL44SJ1kij/AgvYDcM7R7/fR6XRg
      23YcD/RJR5rDK8s/EFsnTBO/8ZkL+Pp37oAYFiCyOGXgkHGMJ+bDLKxQgmPGcEGRwTPF0dCC
      zwBrThmBcw6TcKxe2sfOAxsOSa4t8uceY3gWTnMRAUCY0QecAz0XMA2gaQImBWwD6D/4MR4y
      ChMhbrz8mrZNAgv1BLuuu9A8nWlY9rlhWYptGUvZ599+C48Ox/jJTkERrm8gHD+dtVMqcEAw
      LilKUBCUtHNk4sqqi++bHrbD6b5eYfkhAMCB86aRPB2KAyzj1S7xBnZvR2eDsYs7+NT5ESwK
      fMH7JsI734QbEDzy/nNc//RXEs/JBoqFMoDv+9HRn60WgiCA67oLV4JPY+NLFsNl+UpUMYgQ
      gt/+tbfx4R9+E65RoxJcoUvq6sV4nwaAjgFcTHNqpOCIpTsgHUJwmUQk/EjpXoMATZPBf/Qj
      8E99OaEIywyw8KlyPB6j1+uBkOg41bpQF6EXScQ7D8q+s+M4ePliuu3/eUZ76xjughyhXONE
      IITgleBnePDOv5m5JkzyuQxQVySl2Cqpmy2rll+HeEUIydy9loUs8cY0TbTbbbRaLTSbzVLt
      /PUvvAYrrNFhWJHm6ibVl7aGONrawyBlI49uF1jRNjCuHw/bADbu/d84OT6aqYsxli8C1RG6
      IFuDGo0GhsNh7v1F6563fcJuXxVyp8vM3W5Hs3gQhmAZjKLzCWxtnsPXfv1VfPRwH7949AxH
      QRvQOKZCZwX/rHMNBoAL/R28xqStk3FkWUQcIThGvj8j2qitOuIMa4TCJwQf3LmgFYU4ALIy
      wJuXyzEpIcD2Rh8f7K3hHExcKnC0aa/Vx/21YfQikxiLuE082k5KAHg0Q7TmIahi2hb9vjAd
      gFKKRmOq8ARBAM/z0Ol0ZtuXsdkkC6cZVyQIX2tDJ1FqSOEMczU5kuRydGW8fPMaXr55Df8e
      Y/jBOz/Hv/nZDlyq9J3VxNHGSwCAbbeLl+YM2AOA+0GAm2JF9NPNlve9aglLHx908CmjgR5j
      uOP7WKU0DpjTjftmK8CbF2dN6OpmpHcP9W31Q47ui7+Ha6uriWeFZLMwBmCMxTM9IQSrq6ug
      lC7VGbYo6GZ89bp4T8dx4mjSMquAAKUUX/7cp3D14ib+yZ99AGJVyxRddDOP7hndc4PAwP2+
      A8Y4IOXfF9hqBFhzkn6PrmfC7kWEuEIpVijFIQvxIAhwzTAmXtvk6p/mkJuREoi+nTteG9uv
      /4r2WWDBViABzjnG4zEajQZs24aXMXsUjgJMIZqqYcdFkTXz6+B5HlqtFkajUWqe1CLlXb50
      AZc672vzhAKIT2xZFhq9DtZHkdNOtz3y480nWLs0wNGY4s79bRjcwAaxcDFMhkNsUgMrhCfO
      IogC3wiuUIosLUAE8BEA+0MDP+P2lBEAME7gvP01bDeaiWfkNi+FAQDElhbbzogHSVG4dTpB
      1n1nBSJNpIiNEgygW+rzmIAQgo4VIDzYATEbIM5K8lTFnLZUDQxUv09n3Ox0LnTvPN7Z5Tjk
      DK+aFtYygutsQvCyYi0LOce9MIBggFRxc9Ku7VaIz2wmt9t+6F7AtTe+nPjt1BgAiGbDZrMJ
      0zRTT5HU/SZvcROfs/b/nhX4vh+3R171qjAAABCzAWNlDdwfgQ/2wUBAWudADQu7ZhPw5rcc
      ZZkp5XbnHaR9daLg2mEQ7xHIgjrJUUQ5Rg9piMMRwYbDZu5NPK8pk2om1IXHAmXBcZxor21G
      7tA0C1Bim9wpb6opYxrOI3wZ+Uwwmb2sJmA2QAIXfHwCxhn6xKhF/Mvq2cSxRwXLK9oaue0P
      nC7MzSNsNQK83gyxNzJwt2vhhRU/dnoXGQNGZ6UN9ZmlMoBQBHVEME/0JrA8ppiHwPI2zOQT
      cNJrDKsRpwx3CcF33Gd4KRxFRJLSHfLPutuKOqqK9kKZ3uKcI+AcAxrgyxvehNgJzjdDrNnA
      nRMbL655MJA+OcoI2DS5chqWxgCGYcBxnEKzv/q7QBbRLDv+pyzq8adklN/exl+3NvFXxw9B
      WpvR/dMnlcS4MumTxK+vP/sF3mK9uM2y6FkFZUflYfMEX3zhMH5X0QbHIHhxzY+YYNXD3RMT
      HFMx5+nAxCvrPhrG9D3bwSEGgwFardb0HRUaMrN2LxVBGZu9YRiVIkOzRCP1+lmFSkRVVq78
      WwnoykXAH4E01qopvpQmsmLNGwlQ5slnPMDFS0cwUrjGpEDbYtgdmVh3GC60ppPp+YaP/aGJ
      ayvTo7mIszJ7RrFCr7RMtOI8YIyBMQbLsrSEoFNWZOTZsc/6TjMddMSVNRZFLD3UdECsBog/
      AMd8Y1tHGEzRpz3OMdzew4V2uqkYAEJOEa1oSskk9kaAc47DMYXzlf864YwVkENo5pYb8jrY
      sixYloX19XVQStFutxPELMSXIp2dN9OftnJcBToGmDu8w2yAUxNwe6e+MhYlMI9ztJuRqVwX
      EyTQsRgORgb2x7PSO+dTGthwQjx7/xtgnCNk6U7IuJRFKZOMMayuruLk5CQ+PaaqvJ7XtjRL
      0WkTQVlU8dqqIGZ0SCF3e9rEuqnPzTH+jHMMYg9uhBEHTHDYIlP2JJWtuC4+6zRDnb636QTY
      aoS4fZz0G8g9RUh0MicdHYKFYXSIX4o5NGaARcnR4sA8AKXyglbRS9TjUM+6bqDOcvI769pe
      9l2I1QTr7wFmE6RA4Nm8+Hhi5bOpLOJGTq1nYRTFxjkwBId15SnWJrZ9DmAcEDgTMpYzbAN6
      8ZZjNmwiqm9adxhEG7KyHHaJXlmECFHlmNQ8W3kR1CG/1o12u43xeBxnm5NRhHHTjjjKAmlv
      gQ+fIfRHMNeuZpuSkB57o2mM5lnggmGgmbPCdxmD3fZxvjUl7IFPsDucpkAXf1WrobjmM8Bj
      wEcnNmzKsdmQlN/JPfZ4P5EES7eyLnxaEJvk82KAZMI+6zN3Vfi+D8/z4p1yQDqj1iEG8TAA
      Hx0Ck9ky7D0FbW2CTA7cY6PjSer1KXZh4Fu0iVT1dfLzIWHYU0KMTxDg11m15AcGAQ7HFD6z
      omRdLGL3DYdjqzErIK1YDPdOLNxaczEKCH500MRrG16iv7yN12b2esj9Wmg/QFGIqEd526Nl
      WQiCIBG+kDbYcsNUjv2kQMz8hnIIRBpUJijLCjz0QOw2iD0No2aDA4AaUeqV0APtXEg8c9i5
      gO+WrCcu2+3hl/d+VKxtyts0LeCLF9zEO/shw72ulWAAcX0UELy8FjnLWhbH+WaA880Qci/R
      lFMOEn6AQq0tAMYY2u02HMfBYDCA53lxINh4PIbrurkzncwIVYm/jpnzLCE5aZRmgZlfaGsT
      bHQIXkfC3TmgU3CB5LilrY5PhyY2nDBKkTi5zvjsEblZyr+4txIDUEph2zZM04xFHOHlZYyh
      0WjEjq/RaBQfmp1m8qvbi7uocpcBXcCfkGN5MALrH+WUgEjTnIQRoLWlVgDa2gIb7IP5w3o3
      hZeas7KZ+dmYYndoIOAEHxw3wDnDMKBwDI4rbT8RHBcVR7A7thEy4FI7QN+ncK5/PjeGrBQD
      iIGxbRu2bYMxhiAIYFlWPEgi0rPT6cDzPIzH40yxR+cUy2pwGZyGLlFHKnVAb5YmZgO0szZ3
      2QBAmudA3C6YNwS1W/kP1IyskQ0YsD828Pq55NFd97smzjkBVuzZWKAr7cnppBbDz585OCGr
      +Oyla7ntKMUAnPPYs9bv92NZX8i2nHOsrUUD1O12EU4OgVa5UHWE6eqpQ/5fJgMQQtBsNhEE
      QS0MIMpclB5EqAHj3Evg4y7Y6Ai0uVGpHM45WH8PnIeAP7v10+McP+QmOBHJbzlcUNCjTawO
      GDbtET69ntwl2PMoVq3Z894sAxiHBCuYjU9ad6Z9/ulNFz7bx91/9T+i/cV/jK0Ll2faJYLk
      SotAYkZXB0YMuhCD0o4VyiN+FfPGKS0DpmnGCYCrmH2zsGgxjjRWAX+IFx7/APe33wC3y6dk
      IdSA0b4ANu4Bw48T10ac41sXPguSUu6F3jvYsn8CgGO7EeJgbODIpXhxddZntO4w7A4MnG/l
      T2wWBV7ld/EXf/i/4rX/6D/D9vXrieuCpir1bhpBxocOKKf6CQeYTPxCVMh6kaqOIDm8Yhng
      nMP3fQyHw9SYJNu20WxW288rsLD3ISbeDgf4rb138PbTHwBByYO5M3T0vKlrp/kG/ufuV/E/
      Hf4H+NZuZK16bcOHnZKoQ7fJJQubQYDwX/wRdu/eTbZrImXU6gcQnljP82JiPzo6ijNEjEaj
      OGnuw4cP4TgOTNPE5ubmTMPEZ7XRZxFhGOaKPWEYzn1CJvOGCLoHid8EKXB/hF8aPEVT6A4k
      eYfoOQ/A97bfBHVms3N8hoT4DBvh/N47+KvVmxh3Lua2KVqhJ5/NBv63zguRM01YZwDAzLA4
      URPX+C/wm6s/wc2OC8dIH+OGwbEzMrDVDGf0ABU9j+And87jcujgHAnxwZ//Beyv/UNsnDuX
      uK8wAxQRRWIP3ERBNk0ThmHg8ePHGI/HME0T3W4XhmFgZSUyUTmOgyAIYJrmjH4go2jdZ5lJ
      ZDSbzdKpIonVhLmqzx7NR8d4e/gQGzkiU58xfC/nhPm3uIdXjz/Evxwd4s7mrfx07SLOx7Dg
      btyYbXfGo6+4P8Q/vvBuagi0DJMCVzshWIGzKQNOcDFoY2vS9lsnXTz+p3+A3tf+Ia7fvBkb
      awozQNGY/16vh7W1tXgTwnA4RLvdjo9JFeKRYCjHceJnszZfFGWAs27/t207OqHcNGtNycgJ
      xQhAnipLCAFGz8AmYg4HABbOZOxsEoKvugf4wU4f3+1cxbh9fpK1Wld5RZ8NC7Hm7+DDIwvS
      WobpqiVtJp5UcTA28Lnz6SLaw56BnkcxDCjOKax3mXHs/eH/idvgCAGQjY1oQ0ydoJRiOBzG
      voDhcBhbhlqTE7rVOuVZMGulybomn8h+lpmA0ujkyeFwWHi1KmLNInYbu8TE5Zwz3psA/pPu
      R3jBVIhZMwUTQvAl7uKL3Tv44OQjfKdzBQer12cYoUqMEhApz/vjl/HvKmKdwIgx7LIQN+W2
      Mg/kfFLR7nkEd3dXYDsBvMN1vBBOFG7plcTEmhDqur3FHJDR6XTAOcfx8XG0OeHwEIZhxD4D
      kSak2+3i0qVL6Ha72NzcjExqGSJBnhimRlKeRUYYZ2SJS8P0nXO3xJQuuwgIIXidALcGj/D/
      nTzAg42XcLgmizrVV4DrQdlEaQQP+hYa5rTOw5GBK8fb6BBaugfMum3lIiNcu91OeIr7/X6c
      JqTT6cSMMhwO0e12sbW1lTsjlpKX59wboIZWnyZUz/Dc5VV8jhKC62D45d59/GX3MQJCsUkp
      wHyg9zBRvroDeRYcJ4GPL9EwN0JVxjVqAU9uJMofBwEILVUMbvs+LLKg5xiuhAAACBdJREFU
      1Igi4hGITKIrKytxBKSwlcfu/YlneREbcYCkclyUmLNi8k8T9fXQfO/UIgS/QwLshSEIA7YN
      A+DlnX+/YD7MNL0iB/OOCifATdMsxgBVLCzi3kajEYdGjMfjOEZIjocXFqBFoEq5dc784oBA
      EQpdFST2pKajxOhUboeM84aBp2GA274PkxBcNgw4BfvN5RxOTXOLpCpnIuQcT8IQHJGDDiho
      Bp3XxEgpRRiG8YZ4IevXFTJQFMsOjQAiK5gIHPR9vzJDRh/qbGE9uGSYgAEEE+ICIbiuhHvr
      3tkCUK/PPB99zmEQ4AI1cHVi98plgDrs62IGFKCUwrKs2ASad17A84hms5lwDM7rBAMqWxsT
      qLazQH1+FiYhuG6aOGEhdsMQF6SzksXmExkjIPdwv0XIBBTRfuG43QuoYwacRzvz4+4LQ3gT
      gjAMAw3HicMXXNddyMqwTIVWxAb1+33ttr7nBe/5HtqEQCb71RxH2xo1cBz4eBgwXDX0ou2Q
      cxywEDdq2qc8D6MUPiGm6grAGEPIGSTveLL8yRldYlUQodVpm8WfBwRBgCAI4s1BzyscIGmD
      L4gbpoUPrGM8WR8Az87hSpiMgTrhIfzmEI+kzfMhAzbcNlaVLNJFp6yqU1shFpyX+AhIagtF
      yYyxePdY/ByZHqxR1nl02hgMBrUeCggA3B+D9U+ijAhAok855zgIA9yTJOs0tXmXhVMBPHVo
      CII5RCWLcrx+YYjx5gi3H6/DP1nBNiysUQpOGV5/cQ9NyZbf8wh++P5VbJEpSY4ZxzFn4EqE
      rep42wtDDLmBBmPTuDyp6eLjgDN4HPCkDZlLTY6rg0zQut37lFKMx2MEQRAH1M1Tz7IjROvE
      m/4JvnpyP/X6fRLiZo5ZkQO4wSMF8IAx/MHFLwFWS7oq/nB8cedHeI2Xd9wBgDi1sWFyfObG
      ETg/wu7AxL3HW2BjC0cjiuZKUjQ8Tw1cpeaU7aT4jEdhiKspZ7kRANcMMyHbx5ILgLvru3jr
      ShccUz1qQg2LZ4C8+VqOd3ddNzYbiu/dbjc1hKJ0W5Zs1697tcotL+cyIWSyXVJYldTQkaS1
      aUgtIKzGALN1Axc7AbZf3YEbYDL7K+HuM7/MU99U3acgMKi+5IUzQFrcHucchpK0yPf92GEW
      hmF8pJIg3NPK/3nWHGJVUKX9d9uX8L97yY0sm8N9vBSOE5Qqlyw+H6eENRsEaFnqU0WwGNH3
      VEWgtN1Owmoi6wOGYWB1dRWEELiuW2nnVVki0O1iO8vIIpEqq9F45SIeJ8PH0AldvOLnW7Vu
      p8y4WViGdqdGHZ9K2oQqGRvCMMTx8XFsXREba4qiqgglM8FpK+Bnm/2eD6hjuPgVYCJ36jJA
      yLb5IgTGOYfrunGOoWazWdiJVocY87ysBEXxfNjT6oVqUl84A1BCQCdewbhiKa6l6qyaRtDq
      C4qAuyrEm5dT5u/w/EF1iC5NB9B5YuvI+yNDiFW6zfS6PERFUHVj/iKwCCYsGkj2ScXzlzpN
      gYgqzdMp5iXcM7E3IKf6SuxRmqlOqw8WU++pO8JkqOJKHlzXheM4hZxjZ4KA58SAc9wLhHNt
      Nqxtn4UwVAMNTyedY87B3ROwsHiY9iAY4+Mw3wJ3QID7PQvgHAw0XmnkvW3yKI8Cgj3GwHgI
      yKlzJzftMwamYXHOgT3GAASgGtssx+yZxpwDD/smQk5ghhPbOqUENOM070WgymYVGbZtJw6j
      /qSjDTK7l1cCD4Abhjlx5EYBA+IfNJ/XOcdXn/0cNwrE+4gevhP4uCSlHJ/me0sS2UW2BnZ/
      DWPO8QdrtxB2zue/4CST4fXDD/A19yBR75UULzAA+JzFB3PLOiBBdPLMg+4K3vmgLRzc8Dhg
      eg5uGJZ8QgxObXUrO/MDiJNMPa+RllWQx+eJncMFNtAAgEVIHJZMKc11NpogsLQTpb42Bg5C
      KQhNJ+CZkgiBWcbEDeV+6bMB4BXeTmw+GDKGfYSwCYn2BAPRCrBsVI00FfK+nFakyOA971iI
      HUoq9OxYukrS4hyka5qaA8TOOlRHmpyD6BONmulTXfTPDAOUbcYcenzteYEWDUopms1mQvH9
      xBP+BM/bWAnUwVaZfpw5uoWmFnpGIXSFZrOpPQT5k4y8BFRVE1SdNRQ+qK8GmMAZWvoKQGSb
      AxBnn3ueGPhvJ+Yfn0WNMT2rxC82w+QhL5vc8wjGmPaditl1iuNsjvwSIL34mfIEq8Fx4rc0
      uK4bi0FnlZHLQgT8zZNDqAwWvXZyfrYZ7Ux4gtUoUUHMcvY4HcTs/0kSgcQ+B3G+7cHBQSzy
      7Q0GMDP2QewyBiOQ9wRnE58LjiMWggR6qVv32x4LYQeaIMSMOpjbBRerecL0FIdEJr6PgjEe
      TN4j7x0AYD8MYWhakPbcmHN0J3uNyc7ODl82Acnp0ad+iOlipAauZc3uwiL0PJ4IWQR37tzB
      rVu3lr7CEULQarUwHo+X5mys4x3L0vKprACq11cXcakLk9B1UBAE8WEb86YfPIsQ20RPg8HH
      43HtG/sXjdJO1QW1ozDygtTkjTPqJhogIpBer4derxcn3/0k4ZVXXsHdu3drP3wvCyJH0/NG
      /FVwqtSiikIy98rfZatIFrOMRiPYtr3YRi8Zpmlie3t76c4+kbbyk45TZQChxMoMoPtN3ZmV
      tsyxSZY5y7IS5TzvODo6WipBijMe6sZZ2Fet4szJC7oOKpqvn3OOIAhgGEYcLXoWO70MDg4O
      MBgMlv4Oi/CtsDM4Dv8/RNB70GbqD5QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mask Use Bad vs. cases per 100K' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mask Use by County' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZgkeVrf94k7MvK+Kus++57umdmZnd05l7249uJGLLuLbCFseAS7CPFg
      IUvACuMH25IlywbpERZ+How4JMDXPkZgC4S4zcwuc0/fXUfXnZVnZMYd/iO7q6u6so6sjKxq
      YL7PM/N0xvGLX0TFG+/vvb6vEIZhyLt4F39FIZ72BN7FuzhNvCsA7+KvNOTTnsC7eBengfn5
      eVTpXQF4F39Fsb5yFzsQ3l0CvYu/mpgcKyHFUgh/mbxA929FEIRTnslgEYbhX/p7hJO5z79U
      GsB1XWzbPu1pDBzNZvO0p3AiOIn7fNcG6AErd5coFvO0fRnfNmm3TBLJJAIhlisgCT6CINCo
      bqImCpQKmdOe8hEQcufmdQwjzlqlweRIgcXVCpOjRe4urzIyXECNZ3FaFVaWNikUM4ixOG6z
      ztrGJsXhMUaKGWqNFoQhmUz6tG9oX2yu3cV0RTTBpeVL6GLwl0sDDBJh6FOvlCmXyzRtn2aj
      QbW8wd21LarVGvV6BbuxRdV0sG0H/gKtUJpNk9A1Me2Q+tYaLQ/WNiucPzvLyvwNWm5ArV6h
      3XZxWzZrG6tYnkA6k0EIPARRYm3pFoGknvatHAjHcQjDEMcHQ/Romo13BeCocMwGnqRhtdus
      Lc2jqSGZ0jiEYLdN2q026XSRwlAWRVFw/gItxUbHpyjk84yPDmHEkygiZJIGb731JvHCOCu3
      rqJocRRFQtZ0RvJp3FBE13VkfG4vrlAYniSXjJ32rRwIWVY6QuDZVNs++WKpYwT/ZbGD70u4
      pmmnPZWBotFokEwmT3saA8dJ3Oe2ANw3OIIgQBSjUQxmuYyjgO/J2JZFXBOw/ZCVu6tMT0/g
      CzJ+u46eKpCK631fz/M8/ttf+kMalhfB7PuHocBzj88CMFVKc3Y819d49/82zfmvIP7pP+np
      XEGUiH3r/7Jnu2maxOPxvua1c25RjrP6y7+CcPVqT+c7fkD6xReQHvoIao9dQi4W9xwvQ8dt
      mEwmaWyts7xZY6RY6AQJXBMvFFnbrDA7PoTlBgSCjN2qMzU1fehk/PoWa3UTp94AOYZqZIip
      IjMzM7StFmCh6Unw/Ugk3XEc0ukkih70PVYkLjivje+0sMwGyTNjbG5u4jgOpmmSSqXY2tri
      3LlzXLt2jWeeeebQ63mehyzL+EYcNZPvbS6ijPHQMw7DkHa7TblcptVqcfHiRW7evAlAtVpl
      dnaW69evMzw8jGmaXLx4cd853p9bv9g5Tj2RQMn29tGotVqgyNyoVTk/VMIFGqZJMQyZn58n
      CAIymQxbW1tcvHhxtxfIsR1KI6PcvvYWipEmFY8hCSGFXIr1cg1dhvnVCuMjhSNNxicg8AUm
      xke4u2kieS5aLMXd5VWmJ8fxBZlELNrliuv6ON6jIQCJWALP9VD0OLeWt7gynsA0TVzXRVEU
      CoUCS0tLlMtlfN8/+gsUBuD1amPYtH71c7uHAeLxIWr6JeQQwulhDMMgCALGx8d544032Nra
      YmhoiI2NDS5evNjjNftD6HsEjnPgMXI+R+ELn9/+XQxD1tfXOS+KBEHAaKnE/Pw8by0uEgQB
      xWKRmzdvkkwmqVaruwUgNzzGyt0lzp47R6Ptkc90vhhblQqTk0O4lomayJFOHM3Y8ZHQVYVa
      vY5r21gtF8v1kbUY6Uy21+dxJEiSgCT274IJQ4F+FUDgtEikRrHMBgQejWaTdDqNKIokk0lE
      UWR2dpaxsTEkSTr6wIIAYg/H7zcMULEgno/Ttj3MZpOtco18oUC5XOaZZ56h3W4ThiFTU1Mn
      HnwTBBHhsOciioTegyVvvV4nlUhw8/ZtpqamWF9fp1qt8vzzz1OtVimXyzz11FMsLy8Tj8d3
      C4AgCIyOTwCQ2KEth0slAFRVpdfVoqIoNGobSGqaIHRpN2oYyQxXb94hE5MwXcBpkR4aI59O
      9Dj6XlxdLFM1Hw0bQPTbtAMFgJ/48Fk0tfsXPpvt7WMQ2g38pZf7nh+A78fJ+xukAdZ+mzOj
      T6Jf+SFGRkYAiMU6H7t8vsclVwRwl1fw33770ONaf/hH2/+uOw7ZCxc48+nvQE8mSSaT5PN5
      RFEkl8uRy3WWVOl0J14x0ECYrqmsVMpkS1PoioDttNnavI0sK9xY2uCxmWHKlRqqphPIVXLp
      RN/u808+dw436P9LFYQhYgRfvDAMEUQRMQKtdB9iahT12e+LZKxiEO6am5idiWTcKBB779No
      M9Nd9wmiCF2M7hQdzSZlHwQhD/JyDlQALNthdu4MrcoGng9ty+fCE+/FbptMTc+wvngTT5Ip
      JeO4IazdXaDliSihjaAlGR8Z6vma/9cfX3tkNIDTbqLGEsyNZvn0Ry5HNm5QX8b5k38eyViV
      lkfWePAaaC/9nUjGjQLtl1/B/vKXu+6Lf/CD5L/3P9uzvVardZY2R7SnBioAmgy37syTjhsY
      cohnNdnYEPDsFjYKk7OzmLfWqDSaFIbiIKoYqs/WZgvsAI4hAI+SBihvbZHLZsmmYrieD4Ao
      Ckh9uguPpQEEqavdIG1uohYeODWksaf6mluUOEgDqFNThK67Z3voup3/dn71fZ8QELoIxUAF
      IKYrJJI6ohjiOE0Ko2NsrW0iuj5h6FFriTx5+fzDt4DvOmjJ4605HyUN0PEkrQDwL/6PVwD4
      xhfP859+7D19jXscDaA+/3m0933PnvmVevE+nTAO0gD7IQxDauzNCJbHxhj9x//dnuMHeue+
      G+DaNssbZURrCyWdZ2p4ErOygdO2cKRuX0KBscnjr0NPUwMIgoC8454cq4mixXf9Mc5N9G9M
      HkcDSKNPdt1eqVQodgkQPQo4SAN0gyAINMOQmCwj7XjmYRAgp7sn6Q1UAGzbw7QsHjszTq01
      jOCY+EKIL4ZoBNTrdVZDD9sX8C2T4YlpDE3p65qnqQGmhzP8D5//uu3f5XKZTCaDKIqRuhCP
      ZQOIP0fyC3++Z/OjnAbTqwaQh4dJfPHH99gABwXpBqsBAgFdlbh27RoNR+TszBSWWebm9ZsU
      RyaQ5ZAbG6soWhJDjSb94jQ1QDqh7wqgZbPZgbxgx7YBuuC+W/BRRK8aQEokiMdiCD0884EK
      gCyJyLqOG0hcPj+N7bhIosrZ82cojE7TatS4XMhw7fpt8oUcmxtrtJst5s6fQz7mO3zaNsAH
      npgiEeukBVer1W1/c5Q4ngaQ0Z793j2bH+Ul0HFsgIX/+V+Rmhhn4p8eLVdqoALg2A7l8ia2
      4+G6LoIgEAYu169dR45nMatlbLPKzZvXafvnKWQM7i7NMz57BvmYGuH8RB7TjiIVgmNFgt+4
      vY4iS8yNDubrDyBoSaTx9/Z4koR35/d3bwvBrzbxzE4AUojlkEqPRTTL/qGMjiC3j5Z+oUxN
      ImWzCLUayXuB26NgoAKg6jr54hChu4YQeLTckNDxOHP+AqLTQJQVLFTOzM2iqCGb5QpPP/tB
      4n0sh047EvzG7Q0A/t5nX+SZC6MDEYLjRoLbi3+6Z1ssDGnfk3Rp+iWMb4omvhAFjhoJBkh8
      5EPEX3yRZBD0ZG8NVAA8z2Vl4Sbx7BSiKCKKIYWRccBHF11ES6SyVUYVRSRFZXpmBLHPF+ZR
      iAPMjeW4NF0c2BIoykjwVq1J7l4KipiZimTMqLCfDSBqGtpDiXnycOer32w2MQzj0QiESSKk
      80OokoTneYSByDuv/RmF6cc4Nz2CAYwNR7v+PG0bAOBHP/siiZhKuTWYJVCUkWDH9HDinddA
      mn4J5eInIhk3CuxnA8hDQ6Q+9cmu5/SqcQerAfwQRY4hSwLJTJ5kGCB4o+Qzcer1BqlU9NU+
      p6kBYrrCpakio4XOfT1SXqB9UAzC7exZaeTxSMaMCvtpAEFRaH9lr0sXQCHERcAF1OkppEMS
      DQdrAyQTSK0KQthmfdOjtrZArDDM6vI6uE3UhEEqlsWsbxEaBq3KBqqqc2thmQ9/9KNox8j4
      Pe04wDe+eGH79yPlBdoHlZZP1ug8aO2lH4LplyIZNwocxwvUcF1ikoQsiuQ///3En3/+wOMH
      KgCu1abVqJAqTVBKqEiBSyKXIa5nWV++haJorK3dJZnKMTpawkrFqVWqzMzOIB3zI36aGkBT
      ZV6+urz9u1mvYiRaiILAe86N9J0DdB/9agAxO4OYmSAMwdzcwLjnBhWSw5HMLyr0GgcAoNUi
      ruudZ+35+JUKHFBtOGAvUAwjmcEsL6N6Ka7fWeSMEHDH3CCjSYSWjRJPsLm+SGF0mEwmRybT
      X2DmUbAB7iMMAwSh89L/8o9/C4YWjQD0qwHUF76AcuFjhGFIvuAhKf1F3weF42iAIAxp8iAX
      KP/5H0B73zP7Hj/gdOg2tfIa+dEpRClkZnaGdsskYxikEilihopAyFZg0bJskrH+eWUeBS/Q
      mbEcmaROs1HHiCcQBBFdie5R96sBhFgO79bvIeRmqHkGhcLRSlxPGsfRAG3DIH32LNK9nCy5
      VOIgK2ygAlAcHqVlCRC0adkiUuCg6TquZSPkle0wfDYXXbXRo6ABfvSzL3J2PE+5zKOTC9QF
      6gs/SDD9qQhmNBgcRwP4732a4td+zZ5coP0wUAHYWF2jVl3H9TwENYEu+uiGzuZGhSFBIAgC
      PM9DkiSCMESJIC33tCPBAC2rk6c+KC/QsSLBXRCUr5M9++gSePUSCb4PQZKwX34F+dn3H+n4
      gQpAMq6wJCdRgxqpTIzX3pnn4pRCrpDh9Vf+mJGRcVxCZEVnZX2Lr/6qgy32o2B+tUa1dboa
      4NxEDehUJ6VSqegv4LTw197qf5y1tzCnP0EhO9H/WAOAt7FJcOtWT+c0PQ8hnSH+KAhAo+ki
      eDV8WSX0BWYnRhGlEF03KBRLZAtDBIGDIGrEYv2TM0EnGc32+x+nH1oUPwj5+f/7K0zlVT74
      3ugFQEgUUB7/tv4HCqF++w+wNv5k12Z55oPIE/sbjicF7dJFtB7tk9B1EGSJoNVGNA5nLxms
      BkgohOU0slPDBbKpJJXNFfygCrECm5UKoucwc/4ScT0aYtX/+Or8qWuA+/j6988NZNzQ3MR9
      7d9GMlYiCHAfcs+KyRF4BATAfvtt3D9/tbeTgoC2KBB+6pNwVAHYSY0YJUJfxrXqFApZmo6H
      HJOQ1RgryxXOX5pGlZJIoojvWDTc/teiruvy1Fwey+t/3d0vMdZHnp6llNZoNpsIgkC73cYw
      jL7m5Ps+kiTRFgzk6a87/IQjwLIsdP0BLaX61GexkyM0ymVEUTxyTs39ufWLneMEU1MIavcP
      Y+IbPkWgaXt4YB3HQZZlWqIIjUZnnANoG3dRI5obq6y4AoYQUshlkRUF33OpNUwCzyGby7G5
      tUUuk0VRZFzPR5ZE1jfKjAzvTUE1t+5S26pSzGZo2Q5ZX2Sz7jI7N4dd38IUNS6cnT3+03oI
      juPw5VtlalFogJC+KM5feOIMxWIR3/fvJQKKbG5uIssy4+PjLC4uYhgGjUaDTCbD5uYmiqIc
      SEG4TY243EK681vHn9wOPMzIajzzHUjJ5HajkatXrzI3N4fruiwtLZFKpajVaiSTSeLxOI7j
      kEwmSSQSkVMjbs3PI+yjAeLf+i0E8Tjz8/MUi0Xi8ThXr15laGiItbU14vE4zWYTRVGQJIm5
      ue7aeNeMAy/Ec9rUzTLr5RquZTI8VGSjWiOhQK1hIosO/+GVPyM/fg4Jj7QhY3lidwFouYyM
      jyArCpMjKWzbJmWIuK7P8MgYgR/gey5BKKBE5Cd/6cokjh9FHCBAFI4fuHrt5hqv3VwjuKdJ
      0oZEXHSAkNUGXH/nTT7ywlNIksTdu3cJw5DJyUlWV1cP1TyCUUC58i3HnttOPKzp3He+hPvO
      l/A8j3b6PAUxxvrrdxgZyqK7ISMj5wmCgJWVFUqlEpVKBUEQ+tZu3aBdvIi2DyFX8zf/HeJT
      T5HIZqjX6ziOw8jICAsLC4RhyNzcHGtra6TTaZwD6BV3vXVaMslMMcvmegypUSMzOkchm8IP
      fIqFAiEhvmsxe1YkkSmRjCm0mxVkv/vL64ci0zOzrN6+yu3lDQpxFU2PYZl11lY9nLbNsqYi
      iQoXzkWzXv6D1xeptvbSZZw2pvMas0M6oiRRNkMaVkij0WRzc4PR0VEqlQrVapXR0dFDxwpb
      m7hv/PpA59uyA+RL38BSTWEsbzC/eRNbLVCvP8bw8DCe5+F5HvF4fGCFP/bbb+O++lrXfV4Q
      EJuaokJIPp9HVVXm5+fJ5XI0Gg1qtRrDw8NUKpUDA30DbZK3tbLAn19fZCSboOErFBMygqJQ
      L1fIj4zRblsMlwoIEAlFt+M4/OrvvBGJBtiZxtD/OAKqGJBJ7+8R+tizZw7NFbq/PKgtvoV2
      60t9zw1CwqDDXLcT6lOfw1VziKKIcsQ0iUGwQ6/+1m+hra135jQ3R/yF53cd57ruNnXjQTjI
      PhlsUXwIl69cZmt9jTQeTiAQmE3qLYdLpSHkCOkC7+MPX1+Mxgbo1wh4aJzAdxGl/V+mr31m
      jq4sMd1GbG3ivvEbEcytO5SLn0DUC5H1iTgu7Lev4r7asQHirrtLAERRPLLRfWrUiOm4zO+/
      /CqjMxPYDZtCVsf0s8xMGGysb+D6AZNj0WYgvnBlAieCOEDwEGfmYcglY3zTB/ZGLe8bwVtb
      W5ERzApGAeWxb4pmrOwM2hPfvmd7u9lEluVIPDvHhXbhPFruQT5/5Rf+1+1/u56H5boku2iA
      9Ld+C+IRbZKBCkAYwvT0LOmhBDeWFlhHQJTaoOnofo2rC+vbAhBVh5E/emMxmjhAjwpgqpTu
      KgD3EWXbprC1ifvm/xbJWPLkc9BFABRFOX0NcPXqvjaAHwR4QUCzy7Ir9alPwqMgAG0zwA7a
      mGWPWG6IjC7gKins6iqmF1IsFimXN7BabVrtNrFkFl0VcVomsXSeenmd4uhET2RZ+bSBpvWv
      AnrJBfqp7/nwoYG8SOkHJQ0xPR7JUH51AfMXv/XBBlkj/h3/ett1e5oQk8mubY0AxCBg+Ed+
      GL1PSpfBagACHD9AtB00BSxPxLdWiaVLJIQARRaplTcJZANF1RFCl2bTQhJ1Kqvz+KFGtW5i
      FI/ebzefimHoJxsIO0ratGmauwJOfUFWEVOHe4sOQwgID9/nvVantm2f+hJISiaRi909OG4Q
      Yvn+njhGrxgwK6rE3NlZ1q5fhZiB3/DIFsbYqlSZm51BEgXCsECzXkdPpFAkcdv7EnhpXnn5
      KwyN95aoVa61aUaQDNSLAPzov/z3B44DAr5rIasP/lwffmqGT73wMDHwEeE5BPW7xzt3z/z2
      ajrzF78FxwvxBPAfKs0TlDjGX/uFSK59GPxGA2Fjs+u+/I/8MEEEsYeBCoAodMixWq0WTtvG
      aoLZ3kKMZdG1B0uGXKGLGlMUnn+p9/rUQjqG4Z5+KsTD4wSehrhjGZTop/hHVhFTY/3PjS4a
      4B6U4F4npod3KSfXC1g6aAkkSYe3TzoCBioALafF6s06zUaTmQtPMJRJML+wQDqT4c6defLF
      ApIg0Gq1sNsmudIYsX3aCB0Vm7UWDav/eoCo3aD3m2XcxwtX+khB9hyCWhQaILw3u7332XYC
      ZBG0WJz4d/xiBNfqHX6jgbC+3nXf6k/911i+z+yP/QOkzNGXyA9jOxnO9yPwHT6ERCZD+erL
      jJ55jOF8GsuyMAwDod0AReStq/NkkjKqLGObTSQjg5I+fkDM8zyyCQ1Ne3Q0APeWQG0lJGY8
      WAIFvo/X4/D3/0aBIBMkonEf72fsy46LIIqEevzAiqqH59Yvdo0Tj8M+rmMx8FE9Dz8MdzXJ
      63Vu259bx3EIA58AEYFwjwfgOG7KVrVGcqiELvi88pXXyWbibK6tMTQ8jCiEBHYDKZ2jXN7C
      SKbx2yZO7PgF2q7rsrxRo94++XTowHf5Lz7zAcaHdtOg7CdIYeDj9BiwuB/RdK0m/kZvhSIP
      Q33PZ1Ae+2aazSaJxN7mhDsXFwfl0jw8t36xcxy7XMZdWjzw+KUf+/H9xwpDlMuXMe41/BMT
      cYznntt1zHY2qGEYNJaXuGP7JIUQIQzIFkuY1TLL5TopFdLFYQxVJRAg9ANM20Vw2zhtE9co
      cGZs93rNURREAZaXl3ADheJwgUIhh6wZFGIC169vkhudZmIiBQTYltdXUpXjOEyM5Gk7J68B
      Ws06QeDzxhtvcOXKFRqNBnfv3iWTyWBZ1nYcoFar8dhjj6Huk+Z7EO6nCTjxNNrIuZ7P3wk5
      M4wci9FsNjFNkzt37vCe97yH9fV1yuUywHZ2ajqdplKpcOXKlX09WYNIhTCGhlDa1rHHcj2P
      IJvlVrtNIRGnkEiysLBALBZja2uL6enph2wAQSKh+lTXVtHTY6y8+Q5PPHEZ2w+RRRHPbnFt
      fgFRCBFEcNGIiy66ppNI7s1zsUOBSxcvs758F1UMcEIRz3VJSBLltsOTV95DIAV4nk+z7VIv
      ryNLIQ07QA1dRiZn0dXeviobFZOGFf1y7jCEIfzZm/M8fX4U0zS3G07HYjFqtRpLS0tIkkQy
      maRSqVDqgcF4DzyLoLpw7NP1r/tppOJ5wjAkk8mwvLzMxMQE7XYbTdMYGhqi3W7jOA6KorCw
      sMDjjz9Os9mMzpV7BPi1GsLa6vEHCEEeKpIrFhEvXSQzO0tjcRHXdXFdlzfffHO3ABiFApOy
      hJUZot1qMDPxOJoik7rXbxUgm+t85WURqk0LKfSIp9KYrTawO9qpigK3bt1CEAQqtXUcKYZZ
      LlM3Q5565gpvvfEWAhCTA9ZqHtm4xsb6GraoM1Ea6vnlB4jHlEiaSPdaFO/abfL5fOflLubY
      qtbIZDK0Wi2KxSKXL1+m1WqxvLzcf52wKCPofTDOuW3CdpUQqG9tUSrkmF+8SyKRoNFoEAQB
      siyTz+fZ2Njgfe97H4uLi5w/f0y37TEhahpi/Hi9owVdx5dEyGTwVIWhXI5KpUK5XKZYLJLN
      Zjlz5sxuAbhPkBSPx4jHH7i7dnYR2ZkdWNQeHKN1UelCGBCEHnIAsxceZ3l1g2wqC4HF8vI6
      SV0ils5itnwm9Ba+GOfMTH8RztOiR3ctEzeUOuvXVzYZK6T429/+7HYukCAIpFKpSIrk+22U
      3frVz27/22wFxGaeYO7JT6MkHttjD9zPX7p4sTd2hijQCz36w8j/wPejPPNebNumaBjbdsXD
      TckH6gYNkJmcHmfx+nWuvv02ajKH5LmoMRGr1WRrbY2Y5TI1dY6VpQpGBGS5J0WMJYpiR9vc
      P96/5yS4d0raiC73Z8+1IyTHLfgBsiQixAuE7QqICoJ2vK9u1DgWNeI9yMUComUTI8RvNECS
      EBQF8aEl3GADYXjcuL3KaGmMzeVlVK+BkB3Gq9coFBJIyhlUbMxWg8cuR8NMfFLEWJOlNP/j
      F75++3e9Xicej59I6kCU5LjVtk8m9mDO0swHML7xZyMZu18chxjrPuq//hu4QYAbBBj3jOrE
      V3+U3Hf/jV3HDVwDZDMGDdMmk0khSzImsLWxgiDLOJ6PkdKomy2CIMC1HZSYzn1na7vVQiDA
      EzptL2P67q+q1W6jP5QOe1IaIGlo1E0bURRIxNSBxFH2Q5QaQHyoUbaYPxPJuFGgHw0A4EkS
      ThAQj8cRRQFlYm/wccANMkRGRkZZu/4OxA2a9ZBEwmNo8gzTwxluLqxQKdfITU7z6pdfIZlM
      YQUCmYSC5SuUUjKL6w0UKUCWdWzXJWkoOIGM4LZoOy5hqHDh0tltoTlJasSf+9KXmSql+Wdf
      +HpSqdSJZU9GqQHiQYhz44Ggay/9nUjGjQL9aACA3A/8LbLPPksYhqfTJtVut7j65jXWr7/J
      6OxZREdgZXWLRK6E3VJxfIdkssBQPotTTSOIMbKGyq2l26ixPPGxCZylLYLAQs/rNBsmVf+e
      se37qKrM8vIyc+fPbvcSOGly3KShUTMtGvUG8UR8lxCkBmQHRKEBBCUGsk615ZExHtgy+zXU
      Pg0cpAEEUUTsEsDbCXFiclcMphsGKgBaLEZasnFLk+RjEndth3Q6STKlcnN+jVjCoNWuc+v6
      Vcxmi3gCrr7yKmPTZ/AcG0/RefLxS9vjTUzs7WF19tyFXb9Pgxz35770ZVzLRFZju+prf+nH
      vhldid4miEIDqC/8IOoTn4aNDdShoYhmFi0O0gDy0BCj/+yfHni+4zjb9C77YbAtklyHVtPE
      D0FSDfKZGEPFPJ7bJpvIsL65iSQr5PJDqGqF0HWZmJohnckeO1vypMlxDV3lPWeHd7k770OV
      B2MQR0KO6zTwrv82Cc/HrUogSChnPxrNBCPCQeS4ohGj9Sd/0nXffYQhCIS0gxBJEpFLJdSZ
      mV3HDLZRtqJiJOK06i18p0W56uLZbTzXIpkbwqw3yeaT/H8vv8qlc9MIisbFM/2F+E86DjBV
      SvOxZ8/u6wUahHHcbxwA2D6/1vZJxySQdZSz/Y0ZNQ6LA7RfOdg+6O4FOkEB8FyXVqOBnsgg
      qTKFTKcM0jErNN2QubNnqVbXGB8ZIhY3iMKEPGkbQJEl/uD1BVrNBroR755EKAggCFyaKpJL
      9Z9PH4kNEC8gjT2NubGBURw6Phf8AHFUL1Ds6acQuwRi7y+BjHuBMLEL9c6ANYCCZhjItkW5
      5qIoEo1GhfL6GggKgWOzsF5hshCnaVrMTfdP031aDTLCoFNBclAC3d//rpfIRVDIEoUNIE29
      gHLl28kmJpAiLNiPEkf1AiU+/CHkLmnTUhCgh+HpeYE8z6VRXkePF5Alj3gyw2gpQyKRwG+3
      2Ww4DBdzFIYKIEC73T4S0dFBOGkN8P5L4yiySMs00WOxrhpAEEQEAQrpaOgDo/ECGXjXfouG
      VEQ783Qk84oaR9UA9ttvY3cJQHquh+M46DEdbWQEdXYvD+3AG2Vr8RSeWaXqCUj43LaamLUG
      mUwMQY7htiwa1TLVpo1lNsnmMniI4LSJpYtMT4z0dM2T1gCfeP4cSUOjUglIpRxbB1IAACAA
      SURBVFJdbYBHtUUSgHvxu+ARFYB+4wCO7+MEAQlF6az/T1oA/AAQJLKFInlZJfBcRCFgZnYO
      q1VGUtKUcmnKa0tYbkixmEOUZARECsUhoHdvzklqgGcfG8fQOz70kwyERRUJFgvnUIeeiGBG
      g0G/kWDovEHq3Byx2Zmu+weuAQh9WqZFIDqk4gpba1vkh8YoZR9MSJFgWNZJGP3nmp+kBvj4
      c+e2+TxN0/wLlwukvvCDNHNP8WhaAP1rgPteoNEvfH7fuuHBNsp2g44EKjJN20VVYoSyhLm1
      gi9Oo4cmQRDg+CLJmETbsvfk+/SKk4oDfM0zZ3Zlg55kLlAUcQB57iPIFz+B33j0mLTv4zhN
      8nZCDAKEwEc7v79rfaACoCgiVqtNLAb1apO4LpJMp8kmNJphyPW3XqcdKri2RyahUHNEnn+m
      v1D86pYZETnuwTB0eRebczKZPDkmNc8i2LrT3xhnRAQ9Q1o8vN73tOBXq4TLy8c+PwxD5DBE
      kPevMx+4DaDIApqRIhvIxFSZQDawfVi5fQ0tmSWXTBFTFDzfJ+72/+V+Yq4UTZO8IEQ4gBz3
      z95Z5s/eefDH+baXzpDL7DWCBwFBzyDPfaivMYLyDex//w+pVKtkMxmQFPQP/b2IZhgNlJlp
      NO34y2LXc3Ech/qv/Rqxxy4Rf+GFPccM3AZwvRDXtdFFl82aTUxp8UdvbjAxPsyd5QrnZlRs
      y2J2pruR0itevbkWCStEryWRn3r/3jylQSG0qni3fjeCgcBt+XhbnUgwj5gAuHfm8V9/4/jn
      BwGO7yMoMnIiAV0EQAg7GEiTPLNcxlGhvtEgWRwirsm4VgsknVarQSqZxHcd3ABimkp5a4uY
      oiLEYqQT8Z5pqVzX5Rd/+zXaTgQ2AGFXwqheEQQ+Z8ay5NKdzMWnz48c2ghjP9ynDGnefRv5
      7X/T99zgAPYLSUX/0I/SarWOxNQRFbv3TlqUjd/8d0hLS0c+15Zl8h/+MOrU5JHntqtJXnV9
      maXNBmfmZgjCEFWWCX2HtXIVCZ9MfojQc1FUDT/w8V0HLRZH3qezg1/fYrXaJKlK1FttAttn
      Y3mReHGKtAbVWhO8Jut1m4wRRxACRFmiUdsiVxwm3qN+chyHm6tNaqfAC7QffN8jETfY2lwn
      kS2QSJzj2tV3yOVyVKtVJicnWVlZwbIshoeHD+whsN0kT3SQN16JaIb7MOApMRLJJGEYUq/X
      abfbzM3NcePGDWRZptFoUCqVWFtb49y5c9y6dYtLly7tHadH7KRFqWxsIF27fuRzHVmmfeUK
      a6LAxYsXWVpa2ma9SKVSVCoV8vk8m5ubXLp0CUmSHmKFSKWR1ja4dusOYuiTMAx8u03Lh5gC
      zXabxZs3yOSHGRofp7GxQqowzNhw93RaPwDPaSNmRskqAVtVi7HJaVDixJWQyt0Nsrk0U2mN
      XDqFazWwXJHplIF8zI/JlbkSdhTtAXpokfT43BAvPd59CeS6LrZt02g0sCyLrfIm6+vryLJM
      LBbj+vXrhGGHiGx5eflITTQEPYM8+1U93U9XhPc0wMO2jqRu2wO6rlMul7e/yplMBtu28TyP
      er1OMpnk9u3bNJvN6Nj07kGZmuqJP0kWRCrtNtrSEvVGA93zaN66jejY3CmXEXUd5+ZNTNvB
      HR5GKhZ3C0AYBMixJMPZJE07QPLbiLkiStskXyggEKKKArFEjnw+Qy4ZP3ChLIkgqzFss4aY
      VBCBcqUO1KjH02iKiOcLTI/f48gxYvRB9gHA6zfXqLcjYIfuYQmUSexvqLmuSxiGbGxsUCqV
      UBSFoaEhNE2j1WoxMjJCtVoFdrNvHDg3q4p36/eOdOyxsIMAt9FoIMsylmVhmiaLi4sMDw+j
      KAqyLNNsNimVSgNplOfOzxO88eaRj6/JMrFUgs2midE02TSbuH5AGIZkFYXm1haSLKO4LqHd
      8X4NtEleeXGe2+VNstlRClmD9eVlPEEik0zgCyK6LKHHDBKJ/hvkQWcJ9Au/9Sp2BI2ye22R
      tB98zyMd1zBie4Xk/GSBx+eOTpC13SRv4Q20q7/W99zCjgo4UNM1fYVk9h4X1NRzSMNXuh4X
      FTXiziXQype+hLq8sucY7fx5El/1gT3b6/V6V9qZU2uSJ4kyo+MTrN6ex7PimI5ITINGo47r
      OlxbWeH8k+8nkYiOWu/1W9FogJ7dQPsNE3QM8oc7MUJn9d2LAGyfZ9Xwbv/Hfqd2JEh+iLvQ
      eQ6CkdtXAAajARa6agBxn4TJ/VjrTq1Jnuu0+fI7N3nyzBiLa3VSOrQ8na35G6SGpzoNMjyP
      VtNkdXONRqXK3MXLJA5pN3QQVFmih45K++MY7Ojf+6n38uTZ3azNrVaH8aIbAe2xIYigRERR
      2OU+1fd+N+q9RtzlcplERM39eoUgywja3neh/cortF/Z6wSo2A7Ze8eXvvhFpAPa0t7HwOsB
      pqcmaTQq+J6DkR4ljk/27AXcwGG9IrE0v0DNUJHTCTKZLFqfZYQzI1msU2qQ0a2MM+pMUABB
      je/7Je4V3e5TjD8gOT5qn+BBQC4NobhHT9Uw6nXUe0sg4Yjv0cC7REJILJ5hSHUIXR/XN2m3
      HEbGJ7AcgZF8gqrpIoYSQ6Us/WrS2ysVGpEYwb23x/hHv/JHe7b5QccIk/dZg37/N7+Py7O9
      FaWHThN/9fUeZ9dtoHsP+yEB8Fdfh9/7aQDUr/tHkOrfvXkceGvrhNdvHHhM5nOfwXhvJy8q
      5Tg9s24PVAA6z1UgFAQ0Tca3A2JxA90wWLizTMJQqDsBgttkdctndnqi77LImZEsVgRGcFQu
      Pd91IAyR1O5JfvFj9EMQ1ATScDRMeofdZ6Pt9d2I7riQS6VDNYCUfECn2Wg0eu7FPOAukZ3/
      JwwNz1dpBS6qCIEoIwpbJLJF2q02haESnlDj1q07zMxMI/Xx3t1eqURjBB+iAz70nmm+4yOX
      Dx3FsizCMOy70m3XzJwm/sqrkY23H9T3/U20wvTAr7MfvLW1QzVAecf+putid1myhWHI8E/9
      5C5huY8BN8kTkaSQWtMCu8FK1UZwGmSGhknGDZYWlyhm4ixuwlgqgStBy4NkH8vO2dGTsQGG
      skdz3UqSNAAbIIE0Ek0hy0H3KcaHTrQfwMPoaICjRzVTYYDcxaUbhuG+DfUGWxMshMhBQDqd
      olbxmBhJYrtZdEVgdW2jw9ilxJguFvAcB6tlM9TnjG7erUTSIOMwAXhnocyv/s7hQRrfczoB
      RvXwF+l/+sGvRzmC8dbRAH9+6HH9Qn3mu4+1rIgK7toa4bVrRz6+kU5z/ie/uGe753m7OnTu
      xICN4BBCn/nbt0lnk2xUXAxdxAkFioUcaiyOubXKwkKLSt1ElFWmJ/prAD03lsWKoMajl1SI
      g+A4DkHgo+uHL4GOqikENYE0+p5+pwYcLOiCEkMRTs8LpJRKKEdo0HcfsWMk4w22IAYJJ3BJ
      5nI0ak1mp8ZxvAC7voHjS9S3TPLxNI4gISGQKfXf/fzm3cqpNMnbD8E9L5Ak7c22nRnJ8KOf
      7b0Xcug08Ze/EsX0DjR1vIU/RT//yWiucwy4q6uEV/fXAKUv/jjSjoYXR2nm9zAGuwTyfYxU
      muriEvFchrffuooVwEQ+hhTPklFFmu0Wftgklx5GiaC1US6lo2knR424H2KaQiKm4rkOhN2X
      QKXcMYNjkoqYHFSbVBEh2YlOi4khaqe4BJISCaQDru3XaoQ7SlEr5TKFsTGkHoKOgw2EyQpD
      pRLNlbt4nsr4cIaGrxHTBSRF4ua1a+QKoxQLw1iehRz27yk5rRZJD+NTL5zjuz/+1GC8QBFQ
      I+4LOUby235++6dSrw/mOkfAYdSIq393dwFPw3WRv+5ryX/P3zzyNQZbEum5zN+4TWWrwuzw
      LHFRo7ZZp1lv44YBQSghSQILC3cpTY8zlO83F/TkibG6IaYrXJrqRFMH4QWKskFGqCaR9B3u
      QWG3Fo5ScHtFr7QoyUQCowv3z0EYsAaQ0RGQ9BR60GSt4WMoAjXTY3ioQLY4SqNu8sz7oyNm
      Oi1qxJ345PPnOPdiR3W7rht5LlCUxFjqi38b5bFv2nd/vV4/tSVQz7Qon/4OsgcwQHTDgKkR
      PcxaFUFUqdXrNEyf6clJdFUm8H08JIq5/r/6O/EoaICJUpr1ignQ4acPQ1rug7GKGaMvrRCl
      BhCyswT1u7s3yjqi0XnpTzMX6KgaQIzpiIkkzljvTpSBa4B4OotZv0syVUTQAkRsQlEnDC3K
      a+vIWZ16KxVZN5VHQQPsRBgGEO5Oh/7Vn/hWdPX4jz5KDQDwcAuJnY3yTnMJdFQNEP/Qh8j/
      55/A7SFx7j4GTo7bqjeIJdNYlgOSRrvtEHoe9UYZs60Snx5DITpSqUdBA+zEc5dGkSRhV5KW
      1mfXmEhtgG5xAFnHffN/B8CS0yjn+6NgOS6OrgFiNP/D7+0iV9YvXUQ+QuebgTfI0A0dOQDH
      dgk1iabVRFUNYnGDLPBnL79GKW8we+4y6UT/X5tHTQN89dOT6Ir0yNoAh6FeepHkKQlArzZA
      xbbJ3qN6z//A9x9JAAZaErk5f4f5yiY+AnElTstxUHGJJ9IQ2pTrNpqikMsmcHyPfG6CbPr4
      uSeO4/B//sE7j5QGyCV1RFHYl5ZjqpThzPjRaoG3SyLvXkVf+H/7nhscnvLhCRpq8oERLM9+
      CCG2l2czqoq+neOs/c7vopXLu/brFy4gD3evonNdd9tmEZPJ7abYB81tsBVhosili4+xOH8L
      v+GjxWQk2SBwmqAkyed0VhbmkfER43ECv39ZfNQ0QOB7hEGApHTPU/+mD1w4sgBsj3mSGsDy
      SekPlmzGZ/4tUhcBGAS6aQD5+74X/Ur3LNxWvU6sS03wQRioAMTEkNfeeJ2hwjCppEEoAYGH
      GOoosRRms87c3CxaPE21skU83r/H4aSb5B0G33PvJcM9MPJL2cR2KvV9evVeEEmTvHs47D5D
      0yf20S8gpjoeFmFHtdig0Y0ct/3Kl7Hf3J2EKKbTZD/znY+eEQzgBaD4LhuNKqW0xmuvXefx
      Z95HLpMgl3kgrflc9oBRjo6tejsiWpTeK8K64UEu0IM5xXX1yOnUXeE7BPXVCGZ3v2Jj/zuN
      uy6Cnt4WgJOE32xCeXP3xod/A3KxI5TdGCEOw0AFwHJcDM3AFSRkr0HVlEil4gSuheNqiIKA
      JMuRvGj3cWYsRxS5cDvXxh9/9iznJo4XDBpEKoSgJpDGBp8NCtCqN3Be/vl99ysXP4k89Xwk
      c9kz9sgw6hFp58s/87PU6w1SqU5UW8xmyX7npw89b6ACkB0eptK8iRVALGZguw7ZdJw3X32N
      8akJQlHh/JnpSK95426FuhWFBLCtAl66MnngoQchCAKCoP8l2U6cVDYogG36GM393bbyxPuj
      mUcXuCtrB2aDPoyWY6PdW2rKpaPVWQ9UAMqry7R9Ec1uIcQ0BFknn8vi+CFW00TUjcjp9AZR
      D/D7ry3w+68tHPnc95wb5oNPTgOdSOpAKsJOoB4AIO2HSF1qVLXnf2DgyyJluITiH/1jlg8C
      sl/7NWjnjp4OMVAByA+PUmvexBM1BM9heXWVyoaMFk8Sj8HC0hLDo6MUM9H5yE+qIuwgjBUf
      JJf5vn9gm87joKMBoqoIO1gFmJZPUt+rAUK3HdH190evFWFN1yP1/HM9XWOgArC5ssxmrUYh
      L2ERJ5lIImNhJFIYUsDEhIzrOCwtzpPNl/DsFkYqg7IP2/RR0NEAEVAj9hEHuLtR55/8mz8G
      OtFw7nmBvuHFC8yO9m/sn1RNMEDY8pEMCWnoEurT3xXJNY8Kpcea4OynPoEx2dtydaACkMml
      0as2rXqLXMlgs1rj3PQIjm2ysrWKbGTYnF9kKGewtnqX8uoS6bHznJs6frHHreWTYYU4Kh54
      gSQ+0o6mHdFJsUIAxFwXX1EQlJPPCeqwQhydHj13DEfDQAWg1bTwAxtRCnEsF1nRaJTXMQoT
      tOyAsWIM02piWzbjE9PIokg637srayci4wU6pEXSUeE4DoEfoMf0rsxxx8FJaoBWo46eTBG6
      bdq/+XfRXvj8iblEj8ILBCCl02Q/91nq9XrPHEYDFYBEJom4soXn+WiaQLtloqbTtCurmJ6A
      afmcnRritdfeIFOcYnK6/zZJt1eisgGiD4Q1o9QAq69FMtZhN2qbHob54DU5ibX/fRyFFwhA
      KhYAHr1AmFlrEk/FUNBANJiaGKNaXmXyzDkCeYtixqDScLh05TKK4LC1uU697WHIAa6oM1Yq
      9HxN1wuw3ZNrWfowfuCb38dT5x50t3ddF0EQIjWCCUPwrIjGAmSNxN/4za671WPQDUaF0PcJ
      j1Do7t1d5u73/S3cMMDqxgtEZzErj4xQ+rG/v2vfQAUgnk5gLpcJPYfSsMz84l0un5mk1aij
      CiGtUCYZV9haW8VHQDcMbsyv8OSlswjh8XyZl2eKRBIGOKYX6OFmGYPwAgl6Cnm6dzaJh9Gh
      bg0R5P1fcMuyTk0AlMkJ1B6em++66PswwwmCsItB4j5OTAM4lsiF8zO4boCuSEhaHL/dQMkV
      kGMpzs5MIgkwNjbRV7Ps12+vn2p/gFeu7W7o0FkC+dusEP/8hz7eVzEMQGjV8W7/fl9j7BgN
      EGje+J2ue6stD9HozFeafp7Y1/xXEV33cHTrD5D969+F8ew+wbdyuWv55qHZoGEYdkr3Ioae
      MLA2GlhOi2Jex0JAV0XalkvoVYkl4qyvLLO5WaY4Pk5cAlkSt9dyva7pXNfl/FiG9inRo+8z
      0C5Bch0bguOpKN/38TwPV4zB6Pv6nxuH32cKuD/bID2HYHVfet2fW7/YNc7ICMJDUXTXMLD2
      mUM8Hu+676C5bYuFKIoQBpS3auTy2T0OwOO0wLHqJkZCQg2zSPE4fr1JYSTDjdvrJFWXmi0T
      0xTOX7jA6vwdSkM56qbD+EhvdOE77+GNO5vUWhGEgg/BeDHFf/mZ59A07WA/eoSR7vvN9ASn
      Tjj/B72dLMrEv/u392x+uIXozqqq48ytX+wcx1tcxH9tNw28/ee9uX+zX/wJtHzu8DapqqpS
      Xllgs2qhqSKmHZBJxvGtJtcWVknHZZLZEildwvYFhMCnabuInoXgt6mKeR6b3l2oIIvQbtsE
      vkUrFAgcCz2WIKasEkgqhi5jN3w2llcYGi9x9cY8SAqzU+M93eROPH1+LCIb4GBqxHwqRhAE
      NJtNbty4weXLlzFNkzt37mAYBrIsb1OiVKtVZmdnj9wEbz/cV+VKooB2/qO9nSxIe9byYRgS
      BMGuD1uj0WB+fp52u82VK1e4ceMGgiB0XIy6jmVZzM7O8vbbb/Pccw+iroMoiInNzaEeoUfx
      QQglEdM0uXnzJpcuXcLzPKrVKo1GA03TdtsA8XQWYeVt5tdAwcesbBJKMplkHCNugO9w88Yq
      iBAKULdC0rJHNpdB1/au212gWBihVdmg1axSb9sszC+gxJPYZou0KmALChNzYziOy8UzUyyt
      bOAFHLtN6ms3106sT/Bv/slVXrpU5GvfO0u73UbX9Q4VjK7jui6Li4tks1l0XY80Ie64XSKb
      N7us8+8t0WLf+LNIQxc7/aKr1e3m2JqmoaoqN27cYGpqilarxRtvvIFlWZE1x94P7nx/neIB
      vJdfxn3uObKqwubtO+QTCYJMmuzUFEtLS7sFQNViTJ17jJim4Pphp3hFVvE9t8PkDBSLneWJ
      KEDbdhEJUPUYjr3XXSWKAvPz84wOD1PKZMlYJm3LRfBtfEfizq0btB0JRQ5otRxScZ2Vu/OM
      zJynmOhM7aidyu+jlIuTGGBBzEg+uZ0i4bk2F+fGabXb5HJZTNMkl8thGAaSJHHu3DlqtRpr
      a2vHylXfF7KOmO3el7hXhGGnyF7QOvOzLIt8Pk+73cY0TVqtFpqm8aEPfQjLstB1nenpaZrN
      5kBffugEuOSRkcMPPACe75EfHma53SKTSFJxHZpmi2zT5Pzc3G4BECWZ5L0XT1YA7n3V1Qeu
      pZ3qMiE/2C4be9eNjg+XLl3A3NqgbtrUNtept9rMTY+zWK8yMTbCZrVBKpFCENvIkkg2P4S5
      eZfyik9cCWnYIZfOnznyDQ+aGvFHvvMF0vGOR6darZJMJrefSTy+t8glnU6TzWYjzQiNmhpR
      f+mXENNjQMeRkM/nyWQ6ZY8XLlzYPk7TNNLpDo9TskuziahxGDXiUdB0HKRGg7ws4wMqcN/C
      jH3uc4N1g6YTcW4sLhJTZIJQJJ/Pkc6GiMhkc3ECUWNmIkmrVsbzQZNi6DENy7Jx/QArCFDU
      3iqnBk2LslVv02h1tF3ghzSd5raqyKdixCJpUXkw+qVFEVOjIHU+bkEYIGYeJJCdxIt9VPRK
      jQigDA/DDs2U8tx7jVr2OnCUsdHBCoCRyVNs25RXlkjkR7BdGTEwiScTbDUcdNGh0fLx3IBU
      rsRoKc9En9ccdFH8r+xoiuE5FpKibhvLP/qZF3n2seMb8EdFv0Xxxl/7RaTRJ7eN4J3dU2zb
      PrXA18PomRoRGP3Zn0HeUV5rmiaKoux7TwMVgOrGKltbW9TaDmGtimwkiakKtuNRL6+h6cNI
      kky+UCL0fVqWjS6L+IJ07JTokyTGqlarjJQK5NMdG6VXdofjol8NEIYB/tYtCDtuUHY8a6tc
      xnAfBJPE1BiCHA1rX684jgYIalXcdgvo9Bl2Ne1A79Rgi+IdmxYyZ6fHWa7aGH4bUU/SrGwx
      PjWCoGZIxxUa1TKipLH01gJDhQLxwjhZ43gCcJK0KIHv8ckXDL7xpYuHHxzldfulRTngXNEL
      aO1wwRnf+atIpceOf60+cBwNUP/139j+tzw6QvG/+ekDjx+oAATIFPNJNja3cJ2Q1NAovmtS
      DwR0UUCLqczfXSUpB9xdXWL6zFmCwCIMO+1FbS/EiPX29TkpDaDIEoWkzPjwyTMn90+NKCDm
      Opm3QRAi7kj79uwAXXsgAGJ68Eu6/XAcDbATYiyGefs2qqLucuQAyMPDCJI0WAGQRJGh4WEW
      NtbI5/KUt6rMzoyztdUg8DX8Vhk9meLcRAFPlPEci9W1dUalGE3fpW3ZbFYavP/ZZ5CP+E6f
      lAaYLKX5yb/+3KkYjX1rAEkh+fmvdA2EBeUyyinRoT+M42iAh1F3HAxZRn7IZTv2L/8FUio1
      aHJch8Vb87SbLWIoCHKMwHdwHBffrbFut8mNTQICiWSKQkJhbW2dlgNzIwVu3rqDHtN7Ks46
      KQ1g6Cq1dkDdbjJWTCIN2Ce+E31rAEHEL98E7tkAO+Ye90P8cvXBtYx8VyrEk0C/GgDACEMk
      WUYd2V1lKN5L9xgwPbrK7MQIdV2mUq1gGArzd8skExpuKDOUS2CWy9SyeSbvcbu/+MID5rGL
      l6/0fM2TtAHue4H+9T/4FpIR0bsfBVFQIzp//DNdtzctn8SOInjtAz+M+vR/0te1josoNEDL
      80hMTpD97/9x1/0DFQDHtli4vUBeCSmURmhVKgSCjO+DpIhIssTI2Dih77EddOsTJ0mNaDYb
      xIw4v/uVO8iSyFe/d/ZIfX77RaTUiIKE+vi3bf82y1vo+QfeLKl4odtpJ4Ju1Ii9wm61kDIZ
      Gr/9/2xv0x9/HOUewe5ABUDVdOaGhygvLWGurtIKA0QUrBDec/Ho0d1ecJJN8gLfQxDbvDXf
      YTD+wBNTJyIAkUaCJQ3lW//V9s+sbaN0yes6DUQRCRaDAFsQcF99kEVa+MHPn4wAeI7F229e
      w16Z58n3Pcv8wm2MZIlCdnfVlFWvEMazxCJ4d6KwAT7y9CyyyKHp3+12G03Xt22F+DGIbo+D
      aBtkgPPnv7z922w2EBJHN+zF9DjyTP/Vad0QhQ1gSxLpr/rArlZP4o5078HaAKpGJhGwYWSp
      bK6TyWeJa0luvv0ynpZCBwRFIbBazD7xDEQgAFHYAF/7vjOkDOXQ9N7Qs0gaas91Ev1ikPTo
      DdNDiR/9tZDPfGRgAhCJDZDNkvn4x5D20WoD1gAObdMiBOKGgSMIrK8uEk9k0fNF7NoWRiJF
      oy6iROREiUID/NEbi0cq8AgCD1Fc52EX1cxIhkvTg6MRH2SLpJwXou7jc5bPfR1CbHddrSAN
      Lm3iMA0gGgbxl148cAzX9w/8Ow5YA6jE4gHtRpv11btUHZlWeZnhkUmsholX3aBuBagSR/bz
      H4aT9QLZSIqyp3Dmk8+fG6gADFIDNG2fhNZdo8lzH0Y0TibdAw7XAHJpiNTHP3bgGJZpIh7Q
      BOkENEAbz/f5/9s78xhJ0/uuf977raq37urqc6Z7emZ251h7xmvvem1nbdhgb2yuyLFRJMKR
      yNECIY5tBH8ggQSIK5gkDhF/IYSQQRYIIjkWEGItxmaVZdd7zMzuzrlz9lXVXV33W/WeD3/0
      MX1Md1d3vdU9NvuVRprurnrqeavq9/6e3/X95odGSKLRTcdIp/KEmoSnT6AaFsmUdeABmK04
      VJG8wOHnPnFu2xFI71MEby8MVCSv3kZPJ1DGPoJc3JyBkYzDLfrt5QEkWab5P/5w1zXqtk1c
      19FUFdmySPzMpzb9/dA8gBcqyPj4nk+tsUzM0Lj0zk3OXfwQ1BskH9FLfxAcpgcYzyf4xc99
      NHL2570wSA+g+SGuKmM8/7cGxvvfK6KIAbwwxJckZElCHR8/XAPwPZdOq0UsmUZTQu7PLXPm
      iWmWa1XyGYuT05NofgcROzgX6FYcVh3gq7/wcWT8yOnde0HUEknm819HzqxOmLVtrEQctIOL
      FUaFfusA5oc/hPKpT6GqygpN/SNigQHLpBqY8RhSx2Z+0UHXFe7fvYOeTHPl7bcw8yNcvX6f
      F148HdlrtjoerSioEdm9+yIR0/GdFQM4dIQ+olvvfx2xSo6lxdbbHVw7OLLWh60IHYew1epj
      gRBf19BisaPJArlOl2a9QtfRSMhdzGQWu1knM2RQNxM4zTr5fIryYpVc2tsZpQAAGMdJREFU
      QqXjCRThY1opDO1gWxvOJkgdAj367/3X11YLYQpf+/JzhzIJtg7VfHjH7hNCCNw//tfrPyu+
      oLOakdDO/XnUk0ejEQxrM8G9nw6Sn/885tnNlWvXdXf10AM1AE2TMeIZkkmdhCbT7XZwuzat
      epVQjlMYspDCEKe2wO26SUIJmJmZZWL6DFMTj9aC3QvlapumEwUzHHs24AWei6JqhIftBfwu
      Ya13xZrdsPUI5zgh2mo7tHAakbzGQRHU60gLvYsBiu524t696FoGagBBCGHgkbCylGfvURge
      QdU10tksQrJJmio1OyQIfIrFLIFTQ48lyaQPnm0Yyiaw3MEzww1l4nzpZ6Y3DcUfGlQTOdPv
      8CirR6DN1+k7Cokv/Vb/a0cAJZ1GHe7dA7Re/gGtl3+w6XdNzyWmKKjy5s8o/9dfQo7HBz0P
      AO2WjSEW8YSK67sUR0aolhfwhMTcsklckUCRWS7NopgGIyPjZJIHJ0NarLVpdaMIgnc3AEmC
      eDw+cGqQR8J3CGsPIllqq6OLB4cb0O+GoF5HKpX6WkPxXEJFxd/6OYUrN8mBe4CYqRGLp2h1
      axj4dMMEQ6MTuHaTpu2x1LaZLFh4iSG0sIOV7Y8/Zygdx4pH7wGefmKUF5/d3MDXbrdRVfXQ
      s0CoOnK6fw8gAGnLdfqtFp3v/kZvC+hxYj/3T/vex05QUqme1R53QmiaDP3qV45mKF6RodP1
      6CgNAt/HlS1MOaBeKaOqEh4JhocMFhZmiec1piKQTF2q2zQj8ABb740Nezvxl+d5mOYRpAt9
      l7A+E8lSAoG04Tq7tk88qO3yjIeQjGhqNzshaDaRyuW+1uha1q6ZukPzAM1OlUI6SatVR2gZ
      RsYz5DwJRYFs3MSXo/kiFdJx4gPwADdnKvyTb2+mJA8DH1lWQYKvH2YmSNXXiaz6waM8QOGz
      f5PYSO8yo4OEkkyiDu3tAZJf+DzmuUfXC440C7TmAVzToZjWuVeqcWLI5O6tCienxzDN1Tbi
      PglQN2Kp3qEVQRaolwJX4DnIqo4kSRxqIsh3CRuzkSy1teAXODaHL4f3aATNJtLi4p6PE87O
      ajlHmgXquC6JmEU2m6GyXGc8Y/BgvkKrPsc7V+M8de4UUYeQlYZN3e6/FaKXMWSva6MaJpIk
      85Xf/C4AX/8Ln+CZMwMWkQscwsZcJEtJik7ipYdEu5VKJZJ1o0DYbOL3YABL/2rzeOfYb30T
      ZZXa0XXdXbN0g6VGHCpSbdxmsdrAt1vU5RDTsHjq/Hk8X1n/goWBR8cJkIWHFkuuN8Z5nrdp
      kKEXfPKpYziHJJHkuu42JfihTHTebCdI8QLauZ+PZC0hbf5yPIrf9KhgPPkkRmb/VWlpQ8Ab
      j8eP7ggUOG1uzZR55kKWqrDwfBdF0mjWm3i+xGJZx4jFMDSfWzeXUNx5MsefIvRd1LBL03ZI
      ptN02h1i8Rh+p4WRzNFp1hg5Non5iK7LV648iMQD9ALfc1A0ncnhDP/8r+2Tr78PCHsJ793f
      j2St+C/8m00/R6HyEhWc69c3jTL2itb/fujRup6PriibuI8ArBdeIPtLf/GhRJJt231udztk
      M81TZ09TWighjCSpmIzTaaIn8oStKnPz88hanGOjKaSwC3qcu7dvEU+YpOJJdEWwVJojO3IC
      u7mEphrUyndZWLQxkhlSW5gYfN/n6VMFnCh0gvcxFF9IJ2i32498TJQc+mtrOYqFduLFSNa0
      hYG8Ye/VavVAad2ornPTOlNTyH3OJ3u2jW4YyFuOQcH4OO12G0msgDAMsZs1lqoNRsYm0B/R
      oN+1m3Q8yPZYqQ38Lpcu3+D0qWPMLSyTzyboeCD7DolkksXlBidPTkUWB7iuy2/87n8/tHbo
      qPDVLz7Nc09N7fnFW/ty1K7/COX7fzvyfUiqifXSD3BdF1mW96X4MgiFmPvf+l2kHiWRwokJ
      xl76VbSJ7Ux2uxnnukSSoijErRReaXm1ia1DzFRpVpvUO11OnH6ChVKF0bER7t25Tt1WGCum
      cLo2sUSSjhtyfHxz2Xp5boHF8iyaaTGet1ho1MEHv1XHc11uXb/J+ImTJCPKHiqKwvMXpnAj
      qGbuJZHU+zpi1ZPsIkQXU1leXub27dtcuHCBIAi4cuUKuq4Ti8VoNBpYlkWr1eLs2bOoySLG
      hS/vuN7+97eyN0nWUBSFIAhwXZerV68yPT2Nrutcu3aNTCZDPB6nUqkwPDxMqVQik8lw4sQJ
      hBCRtIRsXCd2/hxGoTet6Iauc3NmBrnV4ty5c1y+fJlTp05x7do1CoUCjuNgWRZzc3N87GMP
      W8k3mayiqhiGQbNaolKzyeYzONUqhfEi9S6IwKPV7iCrOjFdwm7XuPrODSZPnWK56WwzACFr
      PPup5wm7bRyhktEN5HSK5Pgoy0tlnn76o9SXF0kORzc++MqVB9QOQSRvN0yNZPhnL63EBMHq
      TOpud3fHcSiXy0xMTOA4Dvfu3cO2bcbHx5mfnyedTjM3N8fZs2dXpJjsJbx3/stA9u5e/g5+
      IPBO/mkKpGiHsxjn/xSTk5PMz89Tr9dJp9MsLy+TzWY5diyCnqQd4Fy9hnfpck+PlSYmCNtt
      AqBx8xbxZpPmjZvkL15Yfx91XUfTtM1GLzaVyQRhKACxegaWVjV0JEBGhD5hCIoir7sq3/eQ
      ZYUwFOhbCEiXZu+w0A4R7SqLLZ8T48PENAk7hOtXLjMxMc3UU+dIRjQP6bou/+nldyLxAKEI
      kQ/oAXKpGD///Epbbi8G0G63MQyDBw8eUCwWicfj2LZNtVolk8mwsLDA5OQk9+/fZ3p6msbM
      VYzb3zvQ3rbiUdku1xeoYxeYb0kUi0Vsc4zl5WXGxsZotVoIIbAsC03T1rNGgzgCLfzh/8To
      sRLspFKI4SIgoSky840GMU2jm8mQzeep1WpkMhkkSWJ0dHQnA4gW9bk5uoZCs27juQHJpEki
      FqdWreD6XRw/Qc6SSOZHSVv9V4Jd1+XXv/XfqP8ExQCnJnJ844sXyWQyewaRa1K1tes/RPmj
      KGKAtY9+5csQ//K/RRk+T6vVWhf76xWDMIB7v/Mt5B5jgLosc/a3/yXKqoTTRuwm8TvQNKjn
      uSzZXbq1JnOz8xw7fYpu16Njt9F0nZimcOf2NdJdmScmhyPpq3n+w5O4UYwDhAJJjiKWWO21
      2WGpoUycRCLRU+Zl7V4lxQtoH/pS33tb39/a3TC2wviwl/bxYcE4exajR6ZqzXGQdqgZHVkv
      kKKAXe1gGjqqYZIwTFw/wFAUZM3k/q2rDI9PEnotyssGotvEl01OTh38XPmjS/eoHVIdICr8
      u++9jqob7BYonzle4O/95RUOHNFewrvynyPfh3/tD7Be+uHA5U97hXP1Kt4uHkAtFhn9zRUB
      jFarhXyAlprBCmQICd3QUYVgeGyMRCK5SrqUIfA7ZHIFNFnCCVfO3FYqu+eae2FyJE3hkMhx
      o1qn1WyQsJLb7rqmrjExtJJyLmath3/Q4yjD5/rf3Nb9yRpB6V1cyUJLDe+7Ch811EIB9cSJ
      Hf9unn/4Hqxlefb9GgfaWY9QZAlVlbF0i/l7s+Qsg6VWh1Q6w2KpRCGb5H65zpnTJ1BVnXyu
      /2HswyTHjQqB7yEr3W0GcOZ4gV/+wkfWf16r0kYtk7oR9n/8Y+RPfBX1Y78ykPX3g73IcfO/
      9jfW/3/QFo7BtkIEIeWFJcwxnYShY6ayxGIWyAIROLRdi9HRUZqVMsNTT0bymodKjNUD9uop
      GiskMRSBoulsPQJZsUffgQdKjAX4iWH8hStIG3SgkWWUYjRep1fsRYzlLy4S1FdmF/xCAQ4Q
      Qw7WA8RjjBZH0TWF8fE8SwtlRNdGy6SR4lmeOn8WEFQqVZI7fNj7xWESY0WBv/9XPs2JIbOn
      LNAaBkmMBdB2QhQZzI2ErbpF8tdeHdhrPgp7EWNtFMQz/9E/wHpEBmgvDJYWxXNpV+ew3SEy
      cZVQCLL5HJ4soyoCt9tFNU3y64IMAtf1t9UT9oOfNA8gBJQbLkbMJxHrjWh20B5AlmOouanN
      qUN5sIKij0Iv9OhKKoU6NAT7GJ7fiIFeVUyVMXITGH4LzUxRWaiiii6ZQp6K02VmbglN82h3
      BTElwPE9lqsOxYIFiobTbpIemmCs2Htw/JPmAWClq/QffuWzfPTJ3uYIBu0BgrHn0J/+S6hH
      HAT3Qo2Y+JN/guSLn9uxGXEvrHeDtvph4NoBnlAQXoe2L2EEPqOFDKm4RqPZZWy8iF2z0QyD
      ZBw810UIn/GxIr7vIoU+qVwB4Tk0m83eXs/zeOHD49F0g7I9KTk9lkXZQ8A7CALCMFzPoOxV
      B4AVoY1iStvzOtcKOl01g3b+l3q4ip3hygmMuLUpDSQpOlIsg6cmEavFsF6xW7FpP9i4jjh/
      Fqmwex3AzedZeuttOh2bTuxhGjQUArlYxEin9i6ESZJEMpmk0WigSj6eFEMmJGmtRNZCBPg+
      qIrg9q3bjE5OEzdW3xwhcH0ffcPdot6ok06lqTWW8QlIxePcvD3DieNF/K5DoFq0luawQxO/
      4XDqibMslx6QKUz2RYniui4vX54dmAf493/36T0r1mtFl3K5TD6fJwgCSqUSo6OjLC4uYlkW
      kiRh2zbpdPpA1VZ/pob67rcPfB1CCMxjz9EST2HqCqam0LA9kiMnWM5eJJvN0mw2abVaaJrG
      yMjex4tBVIIr715F7OEBvNV/ABsb+oUQ5L/669inT5FOp9F1nUajge/7NBoNcrkcQRBsPgJp
      XosbFY+kfw/fzPLq628zljOxcmkqyxKnijq5qZM0Fu7w2kyViXwCSVZZrNsUMzFUVeVeqc6x
      kTzpVJowCJmbXaATjzNcHEaEAkU30USIUA1y8SSJZApNgeGxaJqqBhkDzCw1KVV3d7WO46BK
      Aa1GjblSheLICHfvz3DvwRxjI0PrvTTVapVCocCpU/vXSus3BhAC6lKOapgAITg5PsrS3DJd
      tcjs/fsYhkGlUmF6epq5uWhGLw+C/UokSbqOfvw4AK7v0x0uUq/XqdfrHD9+nMXFRaampqhU
      KoRhSLlc3mwAZq6IVnqfLgZDMQV3pEhCD/CFRtwIiWczXLt5E1OXGSkWyGRSSCLACwTJTB7P
      bhA3dQxjJZjrSiovfvZzzN6/S7taptRWGM0myQ1NUEgfj+yN2ohBxgDfefndPR8T+B6fPDeK
      GTYw4xbGnRrLpQccGymgSCGWZSHLMmEY4nkH61rtNwYQQhAMPUtLPUlMV2h6d1lalAmTE4Rh
      h3v37mFZFpVKhbGxAc8374L90qOrIyOkf2eF1U5xXeh0aNy6RSqVwnEcSqUS+XyeZDLJ3bt3
      yWazg26Gu8s7D8oURyaISw6epFOrLHLhwkUk4VOq1Bkeik6V3HVdvvmdVw5NJvVR+LOffIJi
      1kJXpfUvOkKQTMRImA9JtNYkmPbTcrB2PKjd/jH6G7+3/81tgDR0DvKnH4Ymwx9Cy58gDEMk
      SSIMQ1RV7Xl/gzgCzX77P6C+f7vn50qGQfyZj2H97AvrR9EgCNbf87VYQJZlgiBACDHYLBCS
      wcWPXuDmpSt0dBWUJJlMilvX3sURENMN3vy/rzBxfJpOKPPsxf4LLUddCf7Gl5/FUKX1snwv
      7dD7Rb+V4FAI6jdfIxt/GLfFf/HbKIpy+Dynu+AgMql+aQHrZ1/A8zwcxyGZTK4b1cZrWzOy
      gXqA2uwd3p1ZZOr4JI16jVQyQavj0V6aoRkanD89yVJlmVQyQ9cPmJ7cPs62H7iuy3f/z7Uj
      rQMokkCIAFVbmWX9+NkxxofSkRjA2gdZn72Oef/7B1pDTk2gPPEi9dX++CAMV74Yynats4Ps
      rV9sXKf08v/C2CdNiyRJoGn4YYgbhiQzGczPfHrHvQ3UA7QDhTPTx6kvLyGMFDffvURheAJP
      0dFUA6GYnDnTnxL4Vhx1HWC9ZXn1Cz+Wtxgf2n+Fcjf0EwMok59EPffnSOeLIElIYYj0GN31
      N6IfiaS1z6ExPo75mU/v+LiBGkAmoXL51j0y6Qwj+TxetUiuUOBEJkmr7eJ7Dj9+/XWmTp2h
      kE1i2zbNZovhPghRD6sSfHI8x8VT29ODjuPg+x6JxMoRSJKid7B9ZYEkmbBVou7pZLP9d98O
      Ev0IZXueh9PtkkilaP3B93b0wAM1gFrb55lnPsq1y5e4e/cOvhtSXpjh9qxKWtd44vx53K6N
      Kdp897s/4syHz9MfCcbheYAvPHeaZ89u5+cUoYJEuK4UGQQRTOdsQb9ZIOXYc0jxqeg2NCD0
      4wG8MMQNAsI9qtmHkAWaZ3LqDF6niYqPrGoEkkImmSaVSlCtVTFkuDdbIlccRpclstmDtUUf
      ZgwgyxLKIzIkYlV4a+2O8/FzY0w8RjEAALK2UumWJIQQaMc/jjJ6IZK99Yv9xgD65CSxj1zc
      9vuNw55HNhIphEQilaZansMTEFcCAkll5s4tzj/zaVIpyGZW3PDZCIZh4OhjgMD3EGGAqq9U
      eMcLFhOPUQwAq1mgTkA2vpoJkb/etwEMAr32AsWffWbb7z3XXc8CIUlIRxIEd7uIUMFuzKNY
      RcpLFY5NnWLi+CTdZpV2QqdWr5NOGLjo5NL7n+jZiqPuBg0DnzB8mAUahGh2FJVgoxsQf/qL
      iHgeRe2tC/Ww0UsMIMkyzT/6PsnPHoyacqAGUBg/RuP6dWJj06RFh3tuCj8ISSQtZh7cp91s
      kcukWXBtFDkWiQEctQfYmgX6M584xdNPRFtNjaISHAPEmc8gJUeR5J/sLJA6MrzNADRN62mk
      c7D06O0GS40Op4ckmh0V3w8ZzqcIJJVquUxxdAwFj1ppmWw+RqXaIN+nRNJhCWXvBM/zCHwf
      M7bCsv/c+f5qG49Cr0LZ8tBZjOe/se33Qghq1SpKYWiVB+rxRM9C2RKU//FDqSYlnyP5K7/8
      8Ai0CwabBs0PcfyYj213ScZN5lyX5XoDAodWx2dxYY6x46MEPszPzxGz0n0bQBAI/CCKdujN
      0kG9v35IEG7YwyC+X0Iggh68nAiRlO13QRGGSOraCObjawAiDBE9ZtGE//BxsrtdzmonDNQA
      SjOz2J0GqmZQr7aQDR0p8Elmhsg02yiqjpVIkc3nyWctGp3+U4a6pmCIwU9y7YS/+vlnOHO8
      sKn/JHLIMpK2u46L8Zm/g1I4/ci/SZJE5gC8+4cNSVWRjf3HJ2GzSfVffBMEdKTtn2Xha19D
      Tqy03Q/UALK5JLMVG7lVo1AoMmSZdJtVhGIQS8bQSNBsOkxOrrRCW/3d/AFwvQDXG7xM6k7o
      dLq02+0DUXT0jDAEf2dZIADEzu+BEIJarfbYF8JEEBDu426+ESt1gJCEpq54zE2f5UOvt06P
      PoiJsF5LDFE1inmehxBiR0nM/SBKvntJkiK5xrU92bZNPAJdNSHEeldqVHuLcp2orrMnevS9
      goWfBLiuSxiGkVAsPs4GAETyeT3uBgDRXOeeBvABtiMqasAoKQajpiuMyjDh8Xy/elnz6Akg
      I0Z57gGXLl3CCQS3rr/H1Rvv7+v57994j/duvA8i4PbNa9y5P3+gfTSrZd5+8w2qtodj13n1
      x28daJ360gKX3nyDhhPy4O773JtZQADX37vCjffvgtfkjTffZq5c7XnN0Gvz1htvMVeuYjdr
      vPX6Gxw0/3D3/RtcuXodgLnb17j1oHSgdW7fvMa7125C6PHOlcvUmjbdVpW333iTxbrN/IO7
      XLp0BW8fSav5mbu8ffkKXihYmL2/sv4W/NQZgB/CUC6FF4BqJjD1/V2iaiSIrT5HM+JMjA8f
      aB+e5zM2PITjBTy4P4PjdA+Uc3dcj/GRPB0vxLbblMslEAIzkUJTBMJ3yI1M4O2ilbsVIvTI
      FUfxXAcEjE6dwDxgLUxSDayYTug7zC9WaLV6Y/DYCkWPETdVCAPsjkOpVMb3PYrDRVzPwxcS
      +YxFsI/8RhBKFFafI8sKk8e3j+EOtBnusOG6Lr7bpdbqkklZhF4XTzLIpnrnjWzVl/EkA0MJ
      mJ9fIF0YpZDZ/zlUiIC5uRK5XAbDjOE6XUxz/xLUQgTMrq6jSoKlmk0yYRJ6XSQjhSoF1KrL
      DI+No/R4nBFCsDA3S66Qp922WVpaZurkafQDGEG3VaflScQNlZhp4HgB5gFSl3azRidQiOkK
      nVYd3coh/C6tZotcPgdCUG3ajBQLPVdnfLfDYrVNOhmnVikTKDGOjW2+of3UGUBUQfDjjGaz
      +VORtNgLh3GdP3VHoA/wAfaDDwzgA/x/jQ/SoPtEZ/k+7805dGpLZHNZ3E6VkanzWIaMXa+g
      WgXy6YNx1T9OeO2VV8ilDZx4kbius/DgJk996CMgBPNzc5x84kmUo1dR6g8i+MAA9otY9hgL
      3/82E2cvcvm1VzFHxqm7NzCUkJnb15k+9zHyH4520P8o8OTJIr//w1t8ZNrn1ffnmRpP897V
      96jO36HcMUkWjzGa7b9Ke6SQFP4fw2eA8KXqLT4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mask Use by County Map' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Mask Use by Region Good and Bad' width='192'>
      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
      4ymAR1fz/wEiHY0gb08aZAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Mask Use vs. Covid Growth Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      z/W/5pfdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      SURBVP8Da9B8H/y+tuEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 21' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d93cbR75nbyegATQyQDAHSbas4DTy+M3s7tvd+btfmPTC8U6wPRprJJEK
      FCmSIIgMNBod9we62yBFWqKElg2y7jk6JYI0i5S70PXpW/UtKQiCAIHgiiL/1D+AQPBTIgaA
      4EojBoDgSiMGgOBKIwaA4EqjAogHQYKrihr+ZTAY/JQ/x1QYj8eoqoqiKD/1jyKYEaRJDzA8
      OuDQVekevOTDDz8gldIBiSAIkKQfWji+a/juCMtLkk7KSJIUfS4kCHxevtxnrlLECRQSsosn
      pfBdi3Q6PfVfZjQaoWkaqqq+/osFAibuAAC+EzB2+gzNMY3GIdawj68ksc0ekh/w4rDJ6tIC
      vqKCZYM0Rs0scrR9n9U7X3JtqXrim9vDDkfNNklN5sXBIdV8ivZAplLOcLC3g6+kubGxMvVf
      yvM8vv32W5LJJJ1Oh1/+8pfs7OzQarVIJBJomsbt27dxXZc//vGPFAoFOp0OxWKRdrtNPp+n
      2+1Gbfj5QqFAu92Ovi5sS6USzWaTcrlMs9lkfn6eO3fuTP33EkyfEwMgYRiULYn8zQ9Jq6CU
      y8f5QFrEs00SRp5iPoeLjNVvUayu0+sOSW3cIJ/RX/nmvb6JnpQZDEbUqlUIPLIZCALIl6oQ
      U/SQZZlcLkc6nabdbjMajXBdl3w+j+u6yPJx9nddl8FgQDqdZjAYYBgGpmmi6/qJNpVKnWjT
      6TSmaZLJZBgOh2QyGUzTJJvNMhwO8X0/nl9MMHWkOJZC/FShOpwCAfzlL39hfn6eRqPB9evX
      GY/HdDodEokEiUSC5eVlABqNBrlcjl6vRy6XiwZEeKGHF/hkaxhGNGDOarPZLMlk8if5NxBc
      jNgGwGg0mva3fS2WZaGqqsgAgjcmVg8QhuCT+AwGwzi7FQjemFjfKm2zS6vVQZGh2eqSMRK4
      vozV6zC/UOPb77b43//3n9Gk13+vi+B5Hn//+9/RNI1Go8Fnn32GaZrs7u6Sy+Xo9/t88cUX
      uK7Lf/3Xf70Sdk+H4Mk2DMOToXmybbVa1Go1bt26Nd1fShALsd4B+v0Ruq5g2T4rizX4/lFp
      uVT6PhiX8GLIi7IsYxgGa2trLCwskMvlMAwDx3Go1WrR/N/zPIbDIY7jMBwOcV2X0WjEeDyO
      WtM0o9a2bUajEbZtRx+H7XA4jD4WIXh2uJQZAODrr79mfX0dRVFIJpO0Wi36/T7z8/MUi8XI
      WRwdHZHNZun3+2Sz2VdC8FntZCgWIXi2iWUA/FQIESa4KLFOgYadIx48eoQ5dqPXxsM+tpgh
      CH4mxPpWOR4MGDtjdp9t8Wz3kOtrc6hBwEDO4Hdf4igZkskkH928iTrFoRia4CAIGI/HfP75
      5+zu7uI4DpIk0ev1+Kd/+qfIBIfhtlQqvWKC3yT0lkolWq2WMMEzSKx3ADWZRFM01GSCaxtr
      KLKMljIwkgqZfImFuTKLS8tTvfjhOARns1kWFxexLItOp4OmafR6PWq1Gqurq8APJngyBJ8X
      es8LxWeFYRGCZ4dLbYKXlpZoNBrcuHGDXq9Ht9s9NwSfZ4IvEn5FCJ49LuVTIBGCBW9KrFMg
      s9vk4eYmo7EHQKfTYTwen/PVP82gEVxt4g3BQxPbtdl78YTtvSbrazXaT9pUyiUSmsqDh0+4
      dn2dQb9PJpcno6dIpVLv3G9ogtPpNJZl8fHHH7O5uYlpmkiShKZp3Lp164QJDkNup9M5sTiu
      1+u9EoZPL48OQ3DYChM8O8QbghMJNFlDTSRYW10mk8lSLhZIGTmyqSS1+QrJdJ7l5WWKuQyy
      NJ0fJzTBi4uLGIYBQCqVol6vk0gkouXQkybYNM3IBJ9lfM963XGcM82wCMGzw6XKAOGWyCAI
      +Oabb6jVauzt7bGxsUEQBAyHQ2RZJpFIsLi4CECz2cQwjMgED4dDUqkUo9HozDB81vLos5ZL
      ixA8GwgTLLjSxGuC20c8ePjwhAmGgLF1XhAWCN4vMYfgAWPXZvfZJs92j9hYrYAk02kNKJUM
      AkXFGQzJVRdZXqhMrV/P8/jmm29Ip9O0Wi0+/vhjms1mtMqzXC6zurqK67r84Q9/iELtpAm+
      SOidbEMTfPfu3an9PoL4iNkE62iKhpZMcm1jlVK1RqVcoVTMIssKsqwwv7xKOjndcSjLMqlU
      CkVRKJfLpNNpGo0GrVYLRVFot9vAsQk+vRw6NL2nQ+9pI3xW+A3D9CWaVV56Lq0Jvn//Ptls
      lna7zfr6OpIkUa/XSSaTaJrG2toa8Opy6DAEn2eAX9cKEzxbXKqnQMIECy5KvCa4c2yCe/0+
      7vePxj3HYmtzk15/EL0mEPxUxBuCzWMT3G21aXU6DAYmH11fwXN9jvaf4yaK+KMOmqJhOg6a
      HNAa+vyPLz55p349z+Nvf/sbiqLQ7Xa5d+8esizzl7/8BcMwKJVKrKys4Lou//mf/xktf540
      wWftCX7TAlm1Wo3bt29P5x9RECsxh+BjE6woMp7rMLIsQEJRJDK5EglFQpZltGSa1ZVFkukc
      y4u1d+43DMHdbpcbN24wGAz4+uuvaTabqKpKp9MBjgdKaIBPm2DLsqLQO2l8J9vw9TD8hh+L
      EDw7vLcMYPa7jH2ZYj477e4iJk3wgwcPqNVq7O/vc+3atSgQh3sDVlaOSzKGJniyMtzpEHyR
      PcJhK0LwbCBMsOBKE7sJ/u7hQ44OG3y/Ijqi1Thg68k2kznYsizMXg8XgeD9EOsdoLX7nO1O
      j7ym46UNDBX2nj0mUVmnkPAYeyqS06U1lkjLCiNrQMHIMfA8bt++Q+KCwzO8A0iSxLfffouq
      qvR6Pb788kueP3+O67pYlkWlUjnTBP9YdeizQm+4JzjcCzy5J1iY4NngvZjgZFpH8WyOOn2K
      1XnmSoVojiwnUuSNNAtLKywt1EgZOTZWFniXYRnuCa5WqwRBgGmaJBIJut0umqbRarWAH0xw
      2Hqed2bIPR2Kz1oOPRmGL9Gs8tJzaU3wX//6V+bn5zk6OmJjY4PRaBQNgEQiEW2MP8sEv+0y
      aLEcevYQJlhwpYm5MFa4J1jEWsHPk5irQx+b4IOXuyD7mEMLPZUB30bP5hi2jkjnqywvzk21
      33BPsOu6OI7DJ598wv7+Pu12G13XKRaLLC0tnWmCzwrBpwtlva5AljDBs8N7KYyV0FMszs+h
      yDK5XAo1kcJ3feYWljHSian3K8symUyGlZUVLMui1+vheR75fJ6joyMajQZw0gSHYfh02D1t
      fH/s9dAkixA8O1yqDDBpgr/99lvm5+dptVpRCO71eui6jud5UQhutVonTPDknuC33RtsGAaJ
      xPQHtmD6CBMsuNLEOgVyRgMePd7Enlj33G61sCwrzm4Fgjcm1jvAy50dassr7D6+z4EpkddA
      SSbpd9qUymWGpk0yIRMoST68vv7O/Z1lgk3T5N69ezQaDba3t6NA++tf/xrXdfn9739/Yjnz
      m1aHPmtPcLlc5ujoiIWFBWGCZ4RY5wrlYpbNx5skFJ1STqVaKuK6NilNAVlFUX2KlQrKlM8I
      CwtjOY4THY+aTCZZWlqK9gMA0TLobDaLaZrk8/lX5v6WZUUhN5PJMBqNMAzjzOXQuVxOhOAZ
      41Kb4JWVFer1Oqurq9GB2YuLiyeqQ59eDn2eCT6vFSZ4trlUT4GECRZclHhDsDVgc+spjtj8
      K/iZEutb5dFRh2vXr/HyyQMOTchpEno2T0L2ePjgHywsb5AqFlmtTa8oFhwLrvv370fHIYV7
      gv/85z+TTqfJZDLcvHkT13X5j//4jxMhd7I69OsKZE2GZ2GCZ5NY7wClYpYnT57gKTqFbIa5
      hUXyuoKcNFhYWaWQz7Mw5YsffgjBuq5z/fp1BoMB33zzDa1Wi0wmQ71eB4iWP4dh2PO8E6E3
      XAbtOM6J18OPQ/MrTPDscqkywGkTvLS0xOHhIRsbGxiGQafTodfrkU6nqVarwKsmONwTHD4N
      usje4Mk9wsIEzwbCBAuuNLFOgexRn4enTLBA8HMi1rfKxlGHGx98wM7j+9SHII26VOaqDFyV
      T29dj63f8JzgZDJJu93m448/ptvtsrm5ycLCwismeLI6dKvVOjP0vq469Ok9wR9//HFsv59g
      erwXE5xUU5TyCkpaRtXTKMN41wKFIXhubg5VVTEMg3Q6zXg8plwuUy6XgbNN8OnQe9oEnw7D
      k+E3bAWzw6U2weFjzfX1dZLJJKlUisFgQKFQONcEv01hrLMKZAkTPBtcqqdAwgQLLkrMIfjY
      BDfbXQAxPRD87Ij1rbLZPDbBL548otlqk0vJPH/aJ5nRGXVGKEmJ/Uafj24sMRhapJIaDx8/
      5X/+n9+Q0t5tieg333xDsVhkb2+PO3fuYNs23W6XwWCApmncvn37R03wedWh36RAVq1W486d
      O1P6VxTEScwmOMeTJ08winPUygVUVcVxPVRVwUPCyOZYW12GIEDXdZK6zsLiwjtniOFwyNbW
      Fp1Oh0qlQiaToVKpRFWjJ88JnqwOHZrhSdM72Z4Ox5Phd/LrBLPDe84AAZ4XIMsQBBKyPN2N
      AKEJVhSF8XhMu91mf3+f1dVVbNvm4OCAcrlMMpmkVjsuw95ut0+E19Mm+MfaH1seLUzwbCBM
      sOBK815M8FHr+EAK0zTj7E4guDDvZU/w9uMH2FKSXFrh2bMd1leX+O7ZAR8ulxmOPaTApVBZ
      Ymm+/E79nd4TLMsyg8GAL7/8kqOjI54+fYphGFQqFZaXl0+Y4B/bE/ymVaGFCZ49Yr0DlEs5
      Nh9vki3Ps1AtkUjoVEsFxh4szFUYWyPGtoOqqGgJbWr9hiZ4fn4ez/OibY5wLL4ODg4AToRf
      0zTxff+Nw+95YVg86p0tflIT3O+2kRNpMqnpWNOzqkM3m002Njbo9/vRGb6+758ojBWe73vW
      cujT7ZueHyxM8GwgTLDgSvNeTPBhoxlnNwLBWxPrHWB/d5e5pWX2dl9g9Zr0PY1aKU+mUKVg
      6NPuNroDhCFY13VarRaffvop3W6Xra0tlpeXMU2TTz75JDLBYdg9KwS/TYEsYYJnh1jnCqEJ
      zuVyBJkcmpyk0+mwsLQSZ7dIkkQ6nUZVVTRNw/d9arUatm2TTCYpFovADyY4LHQVhuCwIFa4
      /DmTyTAej88Mv5NtaJIFs8P7zQCBjzV20PV4AmJoggEePHgQlSpcXV1FVVV0XWdzc5NUKsX6
      +joAnU7nFROs6zqWZb02BP/YsugwjAt+3ggTLLjSxBuCzWMTfHDYeKOvF9MHwfvmvZjgly+e
      0zp4gZ8q097bZnn9AxK6imeN8RWVwDY5GjgkJI+0JtHzVPIJjRu3b5FUlTfu77QJliSJ8XjM
      vXv3cByHr776iqWlJQaDAb/4xS9wXZff/e53Z1aHPmtP8OuqQlcqlag6tDDBs0Gsc4VKKcfW
      403y+Tyl6gJyUkdnlVQ6w/JKjRfPdwDQEgaKrqBKDrIsk9NS5DKZC138k4RHJPm+T6fTod1u
      R8ujb9y4wWAwAIjMbS6XwzRNCoXCmaF3Mvye9bpYDj27xBaCf4poYVlWFD6//vrrqDr0ysoK
      hUKBbrdLo9FA13VWVo6fRE0uhz7viKQ3WQYtlkPPJsIEC640sS+HPl0d2rEtzNE4zm4Fgjcm
      5j3B3ePq0M+3GLkBgeugaiqDoc2du7fRlHjGn+/7fPXVV8zPz7O+vs7vfvc7FhcXaTQa/OpX
      v0JVVb766is8z0OWZXzfR1VVbNtG0zRc10VV1ROtoij4vh99/ek2LLPy61//OpbfSRAP8Zrg
      0rEJTiU0EooMEmhpg3TKx/MDtLfLuK9FkiRyuRyNRoNkMkm9XieVSuG6bpRNLMtClmVs20ZR
      lOhznucBxwFZkqRX2smLXlGU6L/3PE9MvWaQ2DLAT/E0ZDIDPHr0iIWFheid23Ec9vf3uXXr
      FrIsMxwOp9JnEARIkhS1mUxmKt9X8H4QJlhwpYk1BI/N3onq0KPR6MJPhzrdbhw/mkAAxH1E
      UrN7XB366SNMO2DY66JpKoVcjp5lkVATOH5A2UjSG1oowMh1SWoari+RVDxcWaeQz1+oX8/z
      +Otf/4rjOHiex+eff87BwUEUZgeDAZ9//nlkgsM9weVy+dzq0OcdiTS5Fzg0wfPz83zyySfx
      /KMKpkrMJjjP1uNNUskEelojk1RJ6ik8z0d1PIrlKromY/Y7ZIwMaT1F/ahJJp1m5Pho2CT1
      9IX7DefinudRr9cZDAa0vj+hfnV1NdoOGe4JDs/39X0/Mr2nje95Bng8HkdHK4Wvh0+EBD9/
      Lp0JDjfE/P3vf2dhYYFGo8Ha2hqu61Kv13Fdl1QqxbVr14BXTfDkcmhd119rfsVy6NlGmGDB
      lSbWK8U2+2zvNVhfX0dTX83b7VYL1xmh6Qa+L1Es5hCTB8H7JF4T3PrBBNseOPYYPVdgPBhQ
      LJVI4NAeWDiNLulCgX67ztiXkT0HOZnh2vrbbZ0MzwmG42p0X3zxBc1mk6dPn1KpVGi32/zq
      V7/CdV3++Mc/vrLX96w9wT9WHfqsI5LEnuDZIObCWHmePHlCOl9hvlJEUZMYmkI+Z6DoGbL5
      Aum0gZHNkEvrFMpz1KolzEEf2/Xeut9wOfTi4mJUGCusCl0ul7lx4wbwwznBvu9H5/tOhmDP
      814Jua97XSyHni1+liZ40OuSTBtoF9wPEGYAgL/97W/UajVarRarq6sMh0OGwyFzc3Pkcrno
      SU2n0zkRXk+H4Mn2InuExXLo2UCYYMGVJtYp0KB5yHcPHzG0HAC6nU70OdcdY9tvP80RCKZB
      rG+Vru2xcW2FF08e8+TZSzY2Fun2B/Q6TWzHJmVUab18zMLNe1xbfLfK0JOE5wRrmsbR0RH3
      7t2j0+nw6NEjyuUyc3NzUXXo3/72t2fuCX7b6tDhnmBhgmeDWAeAmlB49nSHSrHEugfluQUC
      e0xC0yhVa9ijMdWFZVJTXhcdhuClpSX6/T6e5zE/P4/jOGxvb+O6bjQARqMR+Xz+RAgOw6xh
      GGea4TAET348+bowwbNDbCE4XFf/PgkzQLg+P1y/L0lS9MdxHCRJikKq4zjR14fteZteLtIq
      SkybHQRTRZhgwZUm1iulc/CSl90BC/NLKFJAWtd4ud9gvlrElzQ8Z0zayKJM+bA8IHr2H87t
      JUliOBziOA6apkUbV1zXfavvf3ojzOlWDMLZINb/S5Kksrq6wJOHWxi5NKOxRFpX2Ns/wLZM
      Gs0WH969R62UnWq/QRDw+PFjisUiT5484bPPPgPg/v37rK2t0Ww2+eKLL06E4FarRaVSodVq
      vXEI/rHCWCIEzwaxPgZNZnQa9Q63bn2IqqZYni+STBkM2g38RJa11TWy6emXSQ+CAN/3owrR
      nufx8uVLBoPBiX3BYXgNj1UN9/iGFeXCPcOSJJ14Pfz4rM+HG+sFs0FsGcC27Wl/29cSFsaS
      ZZlms4mu63ieRzqdjqo9mKaJpmmkUimAaJNMWAFiMgy/SyueBM0GwgQLrjSxXint/R122n2W
      FldQ8Mlkjnd3ubaFH/i0uhaZVAIjo2M5ATnj4ru/ziIIAur1erTFsVqt0u12o7qfkiSRzR7n
      jvCx6OtC7UVbMQhng3hDMCob60s8/u4x2UKG0UuVbAp8z8f3HUBj69EO1blFUBPc/ej6VPoN
      goCXL1/SaDRwHIdkMomqqrx48YLl5WUODw+jPcH/+q//emJPb7PZPLMq9JuE32q1yuHhIUtL
      S1HwFvy8iXUA6NkUuwdt7ty9xd5Bg+WCztAOaO5uohUWWZ2voGoquayB7U8vj4cyK6wCraoq
      vu+ztLTEy5cvWV5eBohMrizLURgOw20YgsPQO9lOvn5WOBYheHa4tCa41WqRTqfp9/tks9lI
      kHU6HWRZJv99pYmzTPA0WlmO9QGbYEoIEyy40sRugusjj6VqAVlJEvgOrufRabWZX1zCHA7I
      ZAxkCeqHdTzXY35pmcRbHowREgQBzWYTwzDodDrRCZHD4RBJktA0DcMwABGCrzqx/l8KfB8k
      if2dbXqmS65YJKFK+L7H9vMtjg4apApzVLI6tiKB4yBP4fl5EAR0u10ODw85OjoinU7jui5P
      nz6Nljzfu3fvxBFJb2OCTy+DFiZ49oh1AGSKFW6kUrTqCvlqklwui+c4dFtHlKpzJBNpcjmD
      bn/EXLmIbfZxPB/1Hcum+77P3t4eH3zwAa1Wi+FwSLfbJZfL4fs+vn9cqvEsE3w67J4OuT8W
      fkUInj0ulQkOzwmWZZl2u42u69i2TSaTwXEcbNuODs9OJo/PKg5N8LRDsDDBs4EwwYIrTbwm
      eG+HfdNjsVpi0G8S+DqZjIYkK2TSKcyxSyoh43oBjhdQyBlT67vX66FpGvV6ncXFRSRJot1u
      k0qlUBSFdPrYOjuOM7U+Jw/QEINwNog5BHsgS3TabSTJwzEHDM0xgaQwNn1SSQVfAX88om/L
      fPnFp1NZnhoEAVtbW9y6dYt2u021WuXhw4cYhsHe3h6SJPHpp5++1gRfdBm0MMGzR6wDwCjX
      uJlKYQ2HgI/vgpI4fsTpjCy6I5tqKQ/umHrHnFpZxDCDhLV7FEVBURRevHhBPp+PtkO+zgSf
      Z4BPf/60GRYheHaILQS/7U6rdyFcDj1pgjVNi57Nj0YjVFVFUZToIhUh+GojTLDgSvNeTPDa
      QhXP83G8AE3y8QKfTtdkcaFKf2CSSSWxbRfbdSkWCrzrm2cQBDQaDbLZLO12m4WFBSRJot/v
      47ouvu9TLh/XIZpGCBYmeHZ5Lyb45e4urm3RG/sE1oBsqYyuKHx7/4hSVmfXhXIqgeX7pHIF
      Uu9YUSQIAgaDAc1mk0ajgWEY2LbNd999h6ZpXL9+vOxamGBBvCa4VOWGruNYFng2h+0hulpB
      TqQZdLvcurnAUavHjXIJRYJAAmUKU2ff99nZ2eHDDz+k2WxGg6Hf73P9+nWePXtGrVZ7axN8
      1uuTe4RFCJ4dYssA03y+/qaEGUBRFDqdDslkEsdxTmyOdxwHWZZPmODJg6+nURhLhODZQZhg
      wZUm1iul1zxkt9FmdXWV8cgim0kysgNUyeWwUceVkizP11BVBd9zGdneVGxwuCe4WCxGc/Lx
      eMxwOIwGSFgYK5zKTHs5tJgGzQax3gH2d7YJgHqjRTafpjvwSesyCVlGkTxsFMbDAdlCkf16
      AzWR4pef3X3r/sI7gCRJPH/+nNFohOd5rK2tsb29TafTIZ/PnzDB//Iv/yJM8BUm1n17tcVF
      LNvhxoc3UJQUH67XyOXLZI0URnGOleUV1jc28L2AWx9cZ65amUq/QRDw/PnzaEukJEnR/N9x
      nKgw1qQJDiXZeXuBw68TJvhycSlNsCzL0WI427ZJp9NRZehwv254kU6rGvTpVoTg2UCYYMGV
      JtYrpd9qsNfssrS4RBB42JaFkc3SHwyxzAH5UpVsJjX1fsMQHB5fOjc3h+M4mKYZPSYVIVgA
      MQ+A4cgil06y9+Ip6fICh88eoqXyGLkMI0ehqsXTfXgH+tOf/oQkSVSrVZ49exZd7LIsc/fu
      XVzX5fe//70wwVeYWAfA3Pw8Oy92WVheQ0+nwFohmy+i6wnssc3QtEgmpv9O6fs+z58/jwph
      7e7uRkukT8//QxM8aYQvUhjrtAkej8fi3X+GuLQmuN/vo+t6VBoRfrC+k1MUEYKvNsIEC640
      sV4p3XodrZil1eqjqyqZdJLR2EeVXCQthT0akslk6JsWCVVGkQI8KUE++25VooMgYH9/n3w+
      z9HRESsrK1FhrDAILywsACIEX3ViHQCeM2J78wCrN8RCYa5cIZlQwXdwbZO9/Rbl6jypJNiy
      ji75yKr2zgPA930sy6LT6XB4eEixWGRnZwfbtrl27Rrb29ssLCzgui7/9m//JkzwFSbePcGV
      eW4vLmMNTQ4bLWrztehAvCDwSCQNZEnCU3VWSzkUeTpHiwZBwJMnT7h16xaHh4f0ej1832c8
      HtNut0/sB3gTExzuGZ4Mx5ZlnRuKxbv/7HBpTfBgMIiORZo8DikMySEiBF9thAkWXGniXQ59
      eIhWMGi3hyQUmVzu+Fgiyxxg2w6mC/mUSiJtMOj2KFUqUzkzeDIEN5tNlpeXoxDs+z6JRCI6
      H0CE4KtNvCHYHbPz9JDxwKZQLbBbb5FLq/jjAXLSIJVKcdjsMt7bwdCLaCmLQvbdl0aE0mtn
      Z4dGo0GhUODly5c4jhNtlP/FL34hTLAg5hBcqvLR/ALWyKLZ7HB9OUNnaJPUE6RyRQb9PvlM
      kuT8DXRVQ57S1MX3fZ48ecLNmzdpNBr0+/3oyVAox+DiJvh0GBYmePa5tCY43P3leV5kgj3P
      i/bsChMsAGGCBVeceE3wwQFaKcdRo8N8tcJB/YB0Osuge0RpbonxsIdRKDK2xgTuiP4oYHV5
      /p37DY9JDefmy8vLUXVoz/PQdT06IultzzE4K/xO3gHENGg2iDkEW2xv1vHGY3zXpjsKcMwG
      6AnqL7cZ9Np4eylq1Xks20LXprM3wPd9XNflv//7v7FtO5oCPXjwAABFUfjnf/5nYYIF8Q6A
      bGSChzSO2qzM5TDHHknJQc6XSKfTpHMFjEyWxsEOmUJuKv36vs+jR4/45JNPePjwIb7vU6/X
      6XQ63L17l1arBRyLsdFohKIo55rgyerRp03weWFZvPvPDpfOBIch2DRNNE3D9/2oYrTv+ziO
      c8IG+74fiwcQIXg2ECZYcKWJ9UoZdw/pYyD5LrgW6WyefreDa41QjCzpVJpsOp49wXt7exQK
      BRqNBqurq1iWRa/XI5PJoOt6NE1518P8TodfEYJni3irQxPQabfxHAtv1GV8cEAxU8CxxlQK
      BYbmKLYB4Hkeu7u7NBoNSqUSvu9zcHBAsVgkk8lQqVSmboKr1SqNRkOY4Bki1gGgpQvMSRbm
      WIdMEt3IkUrqeI5Ff+RQyGdj6df3fR4/fszNmzfxfZ9er0er1UJVVSzLYjAYUDnV0esAAAfP
      SURBVKlU8DyP0WhEpVJ5xQRblkWxWHwjE3z64/AIJsHPn0trgsO/e55HIpHA8zw8z4vCafho
      VITgq40wwYIrTaxXitU54Hl9RKFaILBGFIt5eqaNhousaoydgLlKcer9BkHAzs4Oc3NzmKZJ
      qVSi1+txdHREJpPB9/1oT3A4dZn2HUBMg2aDmN8qAxRZQUvIbH63RaNYRVECEloKXQ3Y2j1k
      7n/9auq9+r5PEAQ8ffoU3/cplUpsbW1RKBR49OgRH330EXAswv793//9hAkOQ7AwwVeDWKtD
      a5kiy0sVHNNmcXWNlcU5CsUq+YxGyshyfWMjln593+fBgwcUCgX29/eji/vp06dUq1U2NzeB
      s03wecb3vPasPcLiEejscGlNcHjml+u60ZkBvu8DIMuyMMECIMYp0E/xFCis/R8EQXSBq6oa
      vRbi+340GARXm9gfl9TrdaTAJ1+q0Gl3AI9cLke3NyCbTuBJCZxRn1S2SFqfTnAMgoDd3V0y
      mQz1ep2NjQ08z6Pf70dLJQqFAiBC8FUnXhMc+NjjEZ3mIdsv9lj/6BZ7m3/DX1rnsN6im0mg
      Sh6qkmLsdkgvzE2p3+N3+3a7Hd0Jnj17RqfTQVVVEolEtCf4D3/4Q1RGXZjgq0esA2DQbZMv
      zaHKCkaxRLfd4ebdz3DGFm65QC6TwJMTZHR9qv16nsc//vEPvvjiC46OjqJVoKenZaEJDkPs
      eSb4vGXQwgTPPpfOBIdLn8fjMaqqIsty9DOFgReI7gzTnvqErWA2ECZYcKWJ9UrpHBzQcizy
      6SwoGtgmWjpHv9NCDgL8hE4hreGg4Zh98uUqCfXd64MGQcCLFy8olUocHBxw/fp1HMdhPB5j
      miae57G0tARMLwSfXg4tpkGzQawDwHctOj0LybapN/vMVysE/R0O9w5J5isUjRFfP21RMDKk
      ckWKU5o6hFOd3d1dDg8PqdVqBEFAo9Fgb2+PW7duAW9vgs8riCVM8OwR757g6gJ35wI67Q4b
      +QqFbIbAd1HUFLmcQd+0+eSjIqarEIyHeH7AFG4A+L7P/fv3uXPnDp7n0el0SCQSbG9vs7S0
      xOPHj6lWq+ea4GKx+FoD/GMmWLz7zw6X1gQ7joMsy5EUCzfJyLIc/YFXTfB5CBN8Obm0Jji8
      GOH4cScQvRbuDRAIYj8iqe2MyaUzoCS+D8F5Bs19bDlBvlAinVAwBz1kWWH/qMXCXJlEKouu
      vdtcKDwfwDRN8vk89Xqdfr9PuVxG0zRyueMSLNM2wSIEzxbxhmDPpjsYI7sOh60+c5UyXu85
      qpLBtfu0mnDo2ShBgG+PSBsG+wd15ley6O+woDIIAr799ltWV1d58OABv/nNb5ibm6PT6XBw
      cADAnTt33sgEd7tdCoWCMMGXlHirQ5fnuFWFbrvDarZE3shA4HHUOKJWXcaxRtgYaP4IVa+h
      J1UcxyWReLdV2qZpYpomm5ub2LbN4eEhmUyGYrHI7u7uicK4kyb4dAj+sTB8unCWMMGzyaU1
      wZM/S0g4RZkMqcIEX21iuQP8VKshPc8TJlhwIeI1wfv7tJwx6bRB9/AARZZJFOZQ3DHFYpbh
      OEDxLeSEQSGXmVq/QRDw+PFj1tbWohIog8GAVqvF0tIS3W6XUqkEED2/n8Y7vzDBs0fMIXhM
      p28hBZDJ5shoEl46wcsnu7T7JglVIplQUcbu1AeAZVk8e/YM3/ejGkDNZjOqC1QqlXBdl9/+
      9rfCBF9h4jfBNRiNHGR/jIuKM7IolMpUSln6VkAx926HYp+F53mMx2Nc16Ver1OtVnnx4gWy
      LNNqteh2u5Gse1MTPBqNKJfLb2SGxbv/7HApTXBYEGvyuXz4c4VWeDIEx4EIwrPBpTXBk0xa
      X7EXWDBJ7Ca45YwpZXO4vozsWSSMPP12E8sakcmX0eQA27IYjkyMXBlNCbC//1y32aAyv/BW
      S6SPjo4ol8s8ffqU9fV1ut0upmmiqirpdPqECb4I54VesRx6NondBPcGYzy7hRS4ICUY7++S
      r64hKy6OZTIYtFGMCoqiYY9NRt4IKdDpbm+RSBh0hxbV/MUCchAE1Ot1hsMhBwcHrK2tRXsE
      XNdFkqToiCRhgq828Ybg8hy3qzAcDHECBdkbkZy/Ta/dpDJXQ5XALxXptFpkK3OoikQQ+EiS
      gudk+NP/+4ZffF/C8CKEAyAUci9evIgC7traGv1+H/jBBE8W072ICT5vj7B4958dLq0Jntz/
      O7kyNPxYIABhggVXnNhNcHJhnu7LXXLlOVpHDRYWF9nf3SFXrJBMKPSHIyqGxp+/26KQL6Cp
      KrW5Mu16HSlt4HsBi/PVC/UbBAEPHz5kY2ODfr9PtVql2WwyHA5ZWlqi0+lQLpeB6ZrgyTY8
      f0Dw8yb+t8rAo9VqsL29w8qHn2D1j3AcePp4i3wpzShIUDGOL0Zdk3j+4jmd3pDVuSKPn26h
      JQ2qc1W0CywQDadgz549IwgCqtUqQRCwvb3NaDTCNE3K5fIrJjgcKG9bEEuY4Nkj1gGQyhvs
      bO9TKs+xslGi026ilxbhcIuFlQXGY4e1ShlUjY/v3kWVPHxkyuUquqbwceYOjWYP9YJTds/z
      sCwL27Y5ODiIDO5oNKLdbp9pgk3TjIxwqVS6kAk+vSxahODZ4VKZ4Mm6QOf9WqeXLAsTfLX5
      /0pzQB2/vwesAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      4SijXAyv/iayXeq1VdxcjonpKYbJ1eOAOI7v+psqvXasEJUqTJQiLAvCqEQxKrAwdwLL8ci7
      OQqBQz/J8IMCE+WI8XjMcDAgDAtGfXYj8B3WrmyC7VC5dtwTRCUmJyqEvsVgdDxz5T2b1Z0m
      xSBPtTqFa2cMkzGVcpFCsUyxEFApR6ytrpLZLkncpdnqUioWyPl5nDSjOjNHkM8zM1U9stty
      sL8Ay/HpdPuUQvfgcXcnj/0xAMDu9iZBuUroH91T5qd/rf3J+qzOde8jlcdAdWb2uEeQzyiT
      VhQitzlYAj2qp7dcLsdodEyL1Y+huQ7nszrXQ/9ViOXlZc6ePftY7hyRe3noJdDu7q4e/PKp
      9dDPAL1e74E/vCRy3PSHscRoehVIjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRo
      CkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYA
      xGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCM
      pgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgK
      QIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDE
      aApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIym
      AMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApA
      jKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRo
      CkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYA
      xGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCM
      pgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaP8PMcZyqOMui0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Cases and Growth Rate' width='192'>
      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
      fQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Virus Spread' width='192'>
      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
      MSSrAKHg6wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
